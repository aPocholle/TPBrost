

================================================================
== Vivado HLS Report for 'mire'
================================================================
* Date:           Tue Oct  3 14:12:50 2023

* Version:        2019.2 (Build 2704478 on Wed Nov 06 22:10:23 MST 2019)
* Project:        mire
* Solution:       mire
* Product family: zynq
* Target device:  xc7z020-clg484-1


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  | 10.00 ns | 2.764 ns |   1.25 ns  |
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+----------+----------+--------+--------+---------+
    |  Latency (cycles) |  Latency (absolute) |     Interval    | Pipeline|
    |   min   |   max   |    min   |    max   |   min  |   max  |   Type  |
    +---------+---------+----------+----------+--------+--------+---------+
    |   615361|   615361| 6.154 ms | 6.154 ms |  615361|  615361|   none  |
    +---------+---------+----------+----------+--------+--------+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +-------------+---------+---------+----------+-----------+-----------+------+----------+
        |             |  Latency (cycles) | Iteration|  Initiation Interval  | Trip |          |
        |  Loop Name  |   min   |   max   |  Latency |  achieved |   target  | Count| Pipelined|
        +-------------+---------+---------+----------+-----------+-----------+------+----------+
        |- Loop 1     |   615360|   615360|      1282|          -|          -|   480|    no    |
        | + Loop 1.1  |     1280|     1280|         2|          -|          -|   640|    no    |
        +-------------+---------+---------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 4
* Pipeline : 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 
3 --> 4 2 
4 --> 3 

* FSM state operations: 

State 1 <SV = 0> <Delay = 1.76>
ST_1 : Operation 5 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i8* %p_red), !map !7"   --->   Operation 5 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 6 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i8* %p_green), !map !13"   --->   Operation 6 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 7 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i8* %p_blue), !map !17"   --->   Operation 7 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 8 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecTopModule([5 x i8]* @mire_str) nounwind"   --->   Operation 8 'spectopmodule' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 9 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i8* %p_red, i8* %p_green, i8* %p_blue, [6 x i8]* @p_str, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 1000, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1)" [mire/mire.c:8]   --->   Operation 9 'specinterface' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 10 [1/1] (1.76ns)   --->   "br label %.loopexit" [mire/mire.c:11]   --->   Operation 10 'br' <Predicate = true> <Delay = 1.76>

State 2 <SV = 1> <Delay = 1.82>
ST_2 : Operation 11 [1/1] (0.00ns)   --->   "%y_0 = phi i9 [ 0, %0 ], [ %y, %.loopexit.loopexit ]"   --->   Operation 11 'phi' 'y_0' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 12 [1/1] (1.66ns)   --->   "%icmp_ln11 = icmp eq i9 %y_0, -32" [mire/mire.c:11]   --->   Operation 12 'icmp' 'icmp_ln11' <Predicate = true> <Delay = 1.66> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.77> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 13 [1/1] (0.00ns)   --->   "%empty = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 480, i64 480, i64 480)"   --->   Operation 13 'speclooptripcount' 'empty' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 14 [1/1] (1.82ns)   --->   "%y = add i9 %y_0, 1" [mire/mire.c:11]   --->   Operation 14 'add' 'y' <Predicate = true> <Delay = 1.82> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.73> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 15 [1/1] (0.00ns)   --->   "br i1 %icmp_ln11, label %1, label %.preheader.preheader" [mire/mire.c:11]   --->   Operation 15 'br' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 16 [1/1] (1.76ns)   --->   "br label %.preheader" [mire/mire.c:12]   --->   Operation 16 'br' <Predicate = (!icmp_ln11)> <Delay = 1.76>
ST_2 : Operation 17 [1/1] (0.00ns)   --->   "ret void" [mire/mire.c:32]   --->   Operation 17 'ret' <Predicate = (icmp_ln11)> <Delay = 0.00>

State 3 <SV = 2> <Delay = 2.76>
ST_3 : Operation 18 [1/1] (0.00ns)   --->   "%x_0 = phi i10 [ %x, %_ifconv ], [ 0, %.preheader.preheader ]"   --->   Operation 18 'phi' 'x_0' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 19 [1/1] (1.77ns)   --->   "%icmp_ln12 = icmp eq i10 %x_0, -384" [mire/mire.c:12]   --->   Operation 19 'icmp' 'icmp_ln12' <Predicate = true> <Delay = 1.77> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.77> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 20 [1/1] (0.00ns)   --->   "%empty_2 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 640, i64 640, i64 640)"   --->   Operation 20 'speclooptripcount' 'empty_2' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 21 [1/1] (1.73ns)   --->   "%x = add i10 %x_0, 1" [mire/mire.c:12]   --->   Operation 21 'add' 'x' <Predicate = true> <Delay = 1.73> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.73> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 22 [1/1] (0.00ns)   --->   "br i1 %icmp_ln12, label %.loopexit.loopexit, label %_ifconv" [mire/mire.c:12]   --->   Operation 22 'br' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 23 [1/1] (1.77ns)   --->   "%icmp_ln15 = icmp ult i10 %x_0, 213" [mire/mire.c:15]   --->   Operation 23 'icmp' 'icmp_ln15' <Predicate = (!icmp_ln12)> <Delay = 1.77> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.77> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 24 [1/1] (1.77ns)   --->   "%icmp_ln20 = icmp ult i10 %x_0, 426" [mire/mire.c:20]   --->   Operation 24 'icmp' 'icmp_ln20' <Predicate = (!icmp_ln12)> <Delay = 1.77> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.77> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 25 [1/1] (0.00ns) (grouped into LUT with out node select_ln15)   --->   "%xor_ln15 = xor i1 %icmp_ln20, true" [mire/mire.c:15]   --->   Operation 25 'xor' 'xor_ln15' <Predicate = (!icmp_ln12)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 26 [1/1] (0.99ns) (out node of the LUT)   --->   "%select_ln15 = select i1 %xor_ln15, i8 -1, i8 0" [mire/mire.c:15]   --->   Operation 26 'select' 'select_ln15' <Predicate = (!icmp_ln12)> <Delay = 0.99> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 27 [1/1] (0.00ns) (grouped into LUT with out node select_ln15_1)   --->   "%xor_ln15_1 = xor i1 %icmp_ln15, true" [mire/mire.c:15]   --->   Operation 27 'xor' 'xor_ln15_1' <Predicate = (!icmp_ln12)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 28 [1/1] (0.00ns) (grouped into LUT with out node select_ln15_1)   --->   "%and_ln15 = and i1 %icmp_ln20, %xor_ln15_1" [mire/mire.c:15]   --->   Operation 28 'and' 'and_ln15' <Predicate = (!icmp_ln12)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 29 [1/1] (0.99ns) (out node of the LUT)   --->   "%select_ln15_1 = select i1 %and_ln15, i8 -1, i8 0" [mire/mire.c:15]   --->   Operation 29 'select' 'select_ln15_1' <Predicate = (!icmp_ln12)> <Delay = 0.99> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 30 [1/1] (0.99ns)   --->   "%select_ln15_2 = select i1 %icmp_ln15, i8 -1, i8 0" [mire/mire.c:15]   --->   Operation 30 'select' 'select_ln15_2' <Predicate = (!icmp_ln12)> <Delay = 0.99> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 31 [2/2] (0.00ns)   --->   "call void @_ssdm_op_Write.ap_hs.volatile.i8P(i8* %p_red, i8 %select_ln15_2)" [mire/mire.c:30]   --->   Operation 31 'write' <Predicate = (!icmp_ln12)> <Delay = 0.00>
ST_3 : Operation 32 [2/2] (0.00ns)   --->   "call void @_ssdm_op_Write.ap_hs.volatile.i8P(i8* %p_green, i8 %select_ln15_1)" [mire/mire.c:30]   --->   Operation 32 'write' <Predicate = (!icmp_ln12)> <Delay = 0.00>
ST_3 : Operation 33 [2/2] (0.00ns)   --->   "call void @_ssdm_op_Write.ap_hs.volatile.i8P(i8* %p_blue, i8 %select_ln15)" [mire/mire.c:30]   --->   Operation 33 'write' <Predicate = (!icmp_ln12)> <Delay = 0.00>
ST_3 : Operation 34 [1/1] (0.00ns)   --->   "br label %.loopexit"   --->   Operation 34 'br' <Predicate = (icmp_ln12)> <Delay = 0.00>

State 4 <SV = 3> <Delay = 0.00>
ST_4 : Operation 35 [1/2] (0.00ns)   --->   "call void @_ssdm_op_Write.ap_hs.volatile.i8P(i8* %p_red, i8 %select_ln15_2)" [mire/mire.c:30]   --->   Operation 35 'write' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 36 [1/2] (0.00ns)   --->   "call void @_ssdm_op_Write.ap_hs.volatile.i8P(i8* %p_green, i8 %select_ln15_1)" [mire/mire.c:30]   --->   Operation 36 'write' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 37 [1/2] (0.00ns)   --->   "call void @_ssdm_op_Write.ap_hs.volatile.i8P(i8* %p_blue, i8 %select_ln15)" [mire/mire.c:30]   --->   Operation 37 'write' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 38 [1/1] (0.00ns)   --->   "br label %.preheader" [mire/mire.c:12]   --->   Operation 38 'br' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 1.25ns.

 <State 1>: 1.77ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('y') with incoming values : ('y', mire/mire.c:11) [11]  (1.77 ns)

 <State 2>: 1.82ns
The critical path consists of the following:
	'phi' operation ('y') with incoming values : ('y', mire/mire.c:11) [11]  (0 ns)
	'add' operation ('y', mire/mire.c:11) [14]  (1.82 ns)

 <State 3>: 2.76ns
The critical path consists of the following:
	'phi' operation ('x') with incoming values : ('x', mire/mire.c:12) [19]  (0 ns)
	'icmp' operation ('icmp_ln20', mire/mire.c:20) [26]  (1.77 ns)
	'xor' operation ('xor_ln15', mire/mire.c:15) [27]  (0 ns)
	'select' operation ('select_ln15', mire/mire.c:15) [28]  (0.993 ns)

 <State 4>: 0ns
The critical path consists of the following:


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
