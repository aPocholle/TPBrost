/******************************************************************************
*
* Copyright (C) 2009 - 2014 Xilinx, Inc.  All rights reserved.
*
* Permission is hereby granted, free of charge, to any person obtaining a copy
* of this software and associated documentation files (the "Software"), to deal
* in the Software without restriction, including without limitation the rights
* to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
* copies of the Software, and to permit persons to whom the Software is
* furnished to do so, subject to the following conditions:
*
* The above copyright notice and this permission notice shall be included in
* all copies or substantial portions of the Software.
*
* Use of the Software is limited solely to applications:
* (a) running on a Xilinx device, or
* (b) that interact with a Xilinx device through a bus or interconnect.
*
* THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
* IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
* FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL
* XILINX  BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
* WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF
* OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
* SOFTWARE.
*
* Except as contained in this notice, the name of the Xilinx shall not be used
* in advertising or otherwise to promote the sale, use or other dealings in
* this Software without prior written authorization from Xilinx.
*
******************************************************************************/

/*
 * helloworld.c: simple test application
 *
 * This application configures UART 16550 to baud rate 9600.
 * PS7 UART (Zynq) is not initialized by this application, since
 * bootrom/bsp configures it to baud rate 115200
 *
 * ------------------------------------------------
 * | UART TYPE   BAUD RATE                        |
 * ------------------------------------------------
 *   uartns550   9600
 *   uartlite    Configurable only in HW design
 *   ps7_uart    115200 (configured by bootrom/bsp)
 */

#include <stdio.h>
#include "platform.h"
#include "xil_printf.h"
#include "xil_io.h"
#include "xparameters.h"


#define ADDR_REG XPAR_INTERFACE_AXI_0_BASEADDR

int main()
{
	unsigned char *pt=(unsigned char*)ADDR_REG;
    init_platform();
    int clk = 0;
    int cas = 0;
    while(1){
    	if(clk < 200000000){
    		clk++;
    	}
    	else{
    		if(cas == 0){
    			//*pt=(unsigned char*)0x8000;
    			//*(pt+4)=0x8000;
    			//*(pt+8)=0x8000;
    			//*pt=0x8000;
    			Xil_Out32(ADDR_REG,0x8000);
    			Xil_Out32(ADDR_REG+4,0x8000);
    			Xil_Out32(ADDR_REG+8,0x8000);
    			Xil_Out32(0x43C0000C,0x8000);
    			print("cas 1\r\n");
    			cas++;
    		}
    		else if(cas == 1){
    			//*pt=(unsigned char*)0x1000;
    			//*(pt+4)=0x1000;
    			//*(pt+8)=0x1000;
    			//*(0x43C00000")=0x1000;
    			Xil_Out32(ADDR_REG,0x1000);
    			Xil_Out32(ADDR_REG+4,0x1000);
    			Xil_Out32(ADDR_REG+8,0x1000);
    			Xil_Out32(0x43C0000C,0x1000);
    			cas++;
    			print("cas 2\r\n");
    		}
    		else if(cas == 2){
    			//*pt=(unsigned char*)0x100;
    			//*(pt+4)=0x100;
    			//*(pt+8)=0x100;
    			//*("0x43C00000")=0x100;
    		    //xil_out32(ADDR_REG,0x100);
    		    //xil_out32(ADDR_REG+4,0x100);
    		    //xil_out32(ADDR_REG+8,0x100);
    		    //xil_out32(0x43C0000C,0x100);
    		    cas++;
    		    print("cas 3\r\n");
    		}
    		else if(cas == 3){
    			*pt=(unsigned char*)0x10;
    			//*(pt+4)=0x10;
    			//*(pt+8)=0x10;
    			//*("0x43C00000")=0x10;
    		    //xil_out32(ADDR_REG,0x10);
    		    //xil_out32(ADDR_REG+4,0x10);
    		    //xil_out32(ADDR_REG+8,0x10);
    		    //xil_out32(0x43C0000C,0x10);
    		    cas = 0;
    		    print("cas 4\r\n");
    		 }
    		clk = 0;
    	}

    }

    cleanup_platform();
    return 0;
}
