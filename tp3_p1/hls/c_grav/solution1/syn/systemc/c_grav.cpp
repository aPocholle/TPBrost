// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "c_grav.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic c_grav::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic c_grav::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<39> c_grav::ap_ST_fsm_state1 = "1";
const sc_lv<39> c_grav::ap_ST_fsm_pp0_stage0 = "10";
const sc_lv<39> c_grav::ap_ST_fsm_pp0_stage1 = "100";
const sc_lv<39> c_grav::ap_ST_fsm_state6 = "1000";
const sc_lv<39> c_grav::ap_ST_fsm_state7 = "10000";
const sc_lv<39> c_grav::ap_ST_fsm_state8 = "100000";
const sc_lv<39> c_grav::ap_ST_fsm_state9 = "1000000";
const sc_lv<39> c_grav::ap_ST_fsm_state10 = "10000000";
const sc_lv<39> c_grav::ap_ST_fsm_state11 = "100000000";
const sc_lv<39> c_grav::ap_ST_fsm_state12 = "1000000000";
const sc_lv<39> c_grav::ap_ST_fsm_state13 = "10000000000";
const sc_lv<39> c_grav::ap_ST_fsm_state14 = "100000000000";
const sc_lv<39> c_grav::ap_ST_fsm_state15 = "1000000000000";
const sc_lv<39> c_grav::ap_ST_fsm_state16 = "10000000000000";
const sc_lv<39> c_grav::ap_ST_fsm_state17 = "100000000000000";
const sc_lv<39> c_grav::ap_ST_fsm_state18 = "1000000000000000";
const sc_lv<39> c_grav::ap_ST_fsm_state19 = "10000000000000000";
const sc_lv<39> c_grav::ap_ST_fsm_state20 = "100000000000000000";
const sc_lv<39> c_grav::ap_ST_fsm_state21 = "1000000000000000000";
const sc_lv<39> c_grav::ap_ST_fsm_state22 = "10000000000000000000";
const sc_lv<39> c_grav::ap_ST_fsm_state23 = "100000000000000000000";
const sc_lv<39> c_grav::ap_ST_fsm_state24 = "1000000000000000000000";
const sc_lv<39> c_grav::ap_ST_fsm_state25 = "10000000000000000000000";
const sc_lv<39> c_grav::ap_ST_fsm_state26 = "100000000000000000000000";
const sc_lv<39> c_grav::ap_ST_fsm_state27 = "1000000000000000000000000";
const sc_lv<39> c_grav::ap_ST_fsm_state28 = "10000000000000000000000000";
const sc_lv<39> c_grav::ap_ST_fsm_state29 = "100000000000000000000000000";
const sc_lv<39> c_grav::ap_ST_fsm_state30 = "1000000000000000000000000000";
const sc_lv<39> c_grav::ap_ST_fsm_state31 = "10000000000000000000000000000";
const sc_lv<39> c_grav::ap_ST_fsm_state32 = "100000000000000000000000000000";
const sc_lv<39> c_grav::ap_ST_fsm_state33 = "1000000000000000000000000000000";
const sc_lv<39> c_grav::ap_ST_fsm_state34 = "10000000000000000000000000000000";
const sc_lv<39> c_grav::ap_ST_fsm_state35 = "100000000000000000000000000000000";
const sc_lv<39> c_grav::ap_ST_fsm_state36 = "1000000000000000000000000000000000";
const sc_lv<39> c_grav::ap_ST_fsm_state37 = "10000000000000000000000000000000000";
const sc_lv<39> c_grav::ap_ST_fsm_state38 = "100000000000000000000000000000000000";
const sc_lv<39> c_grav::ap_ST_fsm_state39 = "1000000000000000000000000000000000000";
const sc_lv<39> c_grav::ap_ST_fsm_state40 = "10000000000000000000000000000000000000";
const sc_lv<39> c_grav::ap_ST_fsm_state41 = "100000000000000000000000000000000000000";
const sc_lv<32> c_grav::ap_const_lv32_0 = "00000000000000000000000000000000";
const bool c_grav::ap_const_boolean_1 = true;
const sc_lv<32> c_grav::ap_const_lv32_2 = "10";
const bool c_grav::ap_const_boolean_0 = false;
const sc_lv<1> c_grav::ap_const_lv1_0 = "0";
const sc_lv<32> c_grav::ap_const_lv32_1 = "1";
const sc_lv<1> c_grav::ap_const_lv1_1 = "1";
const sc_lv<64> c_grav::ap_const_lv64_0 = "0000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<31> c_grav::ap_const_lv31_0 = "0000000000000000000000000000000";
const sc_lv<32> c_grav::ap_const_lv32_26 = "100110";
const sc_lv<64> c_grav::ap_const_lv64_1 = "1";
const sc_lv<32> c_grav::ap_const_lv32_FFFFFFFB = "11111111111111111111111111111011";
const sc_lv<31> c_grav::ap_const_lv31_1 = "1";
const sc_lv<8> c_grav::ap_const_lv8_64 = "1100100";
const sc_lv<32> c_grav::ap_const_lv32_5 = "101";
const sc_lv<8> c_grav::ap_const_lv8_FF = "11111111";
const sc_lv<32> c_grav::ap_const_lv32_3 = "11";

c_grav::c_grav(sc_module_name name) : sc_module(name), mVcdFile(0) {
    c_grav_udiv_32ns_bkb_U1 = new c_grav_udiv_32ns_bkb<1,36,32,32,32>("c_grav_udiv_32ns_bkb_U1");
    c_grav_udiv_32ns_bkb_U1->clk(ap_clk);
    c_grav_udiv_32ns_bkb_U1->reset(ap_rst_n_inv);
    c_grav_udiv_32ns_bkb_U1->start(grp_fu_445_ap_start);
    c_grav_udiv_32ns_bkb_U1->done(grp_fu_445_ap_done);
    c_grav_udiv_32ns_bkb_U1->din0(cgx_1_reg_180);
    c_grav_udiv_32ns_bkb_U1->din1(nb_1_reg_168);
    c_grav_udiv_32ns_bkb_U1->ce(grp_fu_445_ce);
    c_grav_udiv_32ns_bkb_U1->dout(grp_fu_445_p2);
    c_grav_udiv_32ns_bkb_U2 = new c_grav_udiv_32ns_bkb<1,36,32,32,32>("c_grav_udiv_32ns_bkb_U2");
    c_grav_udiv_32ns_bkb_U2->clk(ap_clk);
    c_grav_udiv_32ns_bkb_U2->reset(ap_rst_n_inv);
    c_grav_udiv_32ns_bkb_U2->start(grp_fu_451_ap_start);
    c_grav_udiv_32ns_bkb_U2->done(grp_fu_451_ap_done);
    c_grav_udiv_32ns_bkb_U2->din0(cgy_1_reg_192);
    c_grav_udiv_32ns_bkb_U2->din1(nb_1_reg_168);
    c_grav_udiv_32ns_bkb_U2->ce(grp_fu_451_ce);
    c_grav_udiv_32ns_bkb_U2->dout(grp_fu_451_p2);
    regslice_both_s_axis_video_V_data_V_U = new regslice_both<8>("regslice_both_s_axis_video_V_data_V_U");
    regslice_both_s_axis_video_V_data_V_U->ap_clk(ap_clk);
    regslice_both_s_axis_video_V_data_V_U->ap_rst(ap_rst_n_inv);
    regslice_both_s_axis_video_V_data_V_U->data_in(s_axis_video_TDATA);
    regslice_both_s_axis_video_V_data_V_U->vld_in(s_axis_video_TVALID);
    regslice_both_s_axis_video_V_data_V_U->ack_in(regslice_both_s_axis_video_V_data_V_U_ack_in);
    regslice_both_s_axis_video_V_data_V_U->data_out(s_axis_video_TDATA_int);
    regslice_both_s_axis_video_V_data_V_U->vld_out(s_axis_video_TVALID_int);
    regslice_both_s_axis_video_V_data_V_U->ack_out(s_axis_video_TREADY_int);
    regslice_both_s_axis_video_V_data_V_U->apdone_blk(regslice_both_s_axis_video_V_data_V_U_apdone_blk);
    regslice_both_s_axis_video_V_keep_V_U = new regslice_both<1>("regslice_both_s_axis_video_V_keep_V_U");
    regslice_both_s_axis_video_V_keep_V_U->ap_clk(ap_clk);
    regslice_both_s_axis_video_V_keep_V_U->ap_rst(ap_rst_n_inv);
    regslice_both_s_axis_video_V_keep_V_U->data_in(s_axis_video_TKEEP);
    regslice_both_s_axis_video_V_keep_V_U->vld_in(s_axis_video_TVALID);
    regslice_both_s_axis_video_V_keep_V_U->ack_in(regslice_both_s_axis_video_V_keep_V_U_ack_in);
    regslice_both_s_axis_video_V_keep_V_U->data_out(s_axis_video_TKEEP_int);
    regslice_both_s_axis_video_V_keep_V_U->vld_out(regslice_both_s_axis_video_V_keep_V_U_vld_out);
    regslice_both_s_axis_video_V_keep_V_U->ack_out(s_axis_video_TREADY_int);
    regslice_both_s_axis_video_V_keep_V_U->apdone_blk(regslice_both_s_axis_video_V_keep_V_U_apdone_blk);
    regslice_both_s_axis_video_V_strb_V_U = new regslice_both<1>("regslice_both_s_axis_video_V_strb_V_U");
    regslice_both_s_axis_video_V_strb_V_U->ap_clk(ap_clk);
    regslice_both_s_axis_video_V_strb_V_U->ap_rst(ap_rst_n_inv);
    regslice_both_s_axis_video_V_strb_V_U->data_in(s_axis_video_TSTRB);
    regslice_both_s_axis_video_V_strb_V_U->vld_in(s_axis_video_TVALID);
    regslice_both_s_axis_video_V_strb_V_U->ack_in(regslice_both_s_axis_video_V_strb_V_U_ack_in);
    regslice_both_s_axis_video_V_strb_V_U->data_out(s_axis_video_TSTRB_int);
    regslice_both_s_axis_video_V_strb_V_U->vld_out(regslice_both_s_axis_video_V_strb_V_U_vld_out);
    regslice_both_s_axis_video_V_strb_V_U->ack_out(s_axis_video_TREADY_int);
    regslice_both_s_axis_video_V_strb_V_U->apdone_blk(regslice_both_s_axis_video_V_strb_V_U_apdone_blk);
    regslice_both_s_axis_video_V_user_V_U = new regslice_both<1>("regslice_both_s_axis_video_V_user_V_U");
    regslice_both_s_axis_video_V_user_V_U->ap_clk(ap_clk);
    regslice_both_s_axis_video_V_user_V_U->ap_rst(ap_rst_n_inv);
    regslice_both_s_axis_video_V_user_V_U->data_in(s_axis_video_TUSER);
    regslice_both_s_axis_video_V_user_V_U->vld_in(s_axis_video_TVALID);
    regslice_both_s_axis_video_V_user_V_U->ack_in(regslice_both_s_axis_video_V_user_V_U_ack_in);
    regslice_both_s_axis_video_V_user_V_U->data_out(s_axis_video_TUSER_int);
    regslice_both_s_axis_video_V_user_V_U->vld_out(regslice_both_s_axis_video_V_user_V_U_vld_out);
    regslice_both_s_axis_video_V_user_V_U->ack_out(s_axis_video_TREADY_int);
    regslice_both_s_axis_video_V_user_V_U->apdone_blk(regslice_both_s_axis_video_V_user_V_U_apdone_blk);
    regslice_both_s_axis_video_V_last_V_U = new regslice_both<1>("regslice_both_s_axis_video_V_last_V_U");
    regslice_both_s_axis_video_V_last_V_U->ap_clk(ap_clk);
    regslice_both_s_axis_video_V_last_V_U->ap_rst(ap_rst_n_inv);
    regslice_both_s_axis_video_V_last_V_U->data_in(s_axis_video_TLAST);
    regslice_both_s_axis_video_V_last_V_U->vld_in(s_axis_video_TVALID);
    regslice_both_s_axis_video_V_last_V_U->ack_in(regslice_both_s_axis_video_V_last_V_U_ack_in);
    regslice_both_s_axis_video_V_last_V_U->data_out(s_axis_video_TLAST_int);
    regslice_both_s_axis_video_V_last_V_U->vld_out(regslice_both_s_axis_video_V_last_V_U_vld_out);
    regslice_both_s_axis_video_V_last_V_U->ack_out(s_axis_video_TREADY_int);
    regslice_both_s_axis_video_V_last_V_U->apdone_blk(regslice_both_s_axis_video_V_last_V_U_apdone_blk);
    regslice_both_s_axis_video_V_id_V_U = new regslice_both<1>("regslice_both_s_axis_video_V_id_V_U");
    regslice_both_s_axis_video_V_id_V_U->ap_clk(ap_clk);
    regslice_both_s_axis_video_V_id_V_U->ap_rst(ap_rst_n_inv);
    regslice_both_s_axis_video_V_id_V_U->data_in(s_axis_video_TID);
    regslice_both_s_axis_video_V_id_V_U->vld_in(s_axis_video_TVALID);
    regslice_both_s_axis_video_V_id_V_U->ack_in(regslice_both_s_axis_video_V_id_V_U_ack_in);
    regslice_both_s_axis_video_V_id_V_U->data_out(s_axis_video_TID_int);
    regslice_both_s_axis_video_V_id_V_U->vld_out(regslice_both_s_axis_video_V_id_V_U_vld_out);
    regslice_both_s_axis_video_V_id_V_U->ack_out(s_axis_video_TREADY_int);
    regslice_both_s_axis_video_V_id_V_U->apdone_blk(regslice_both_s_axis_video_V_id_V_U_apdone_blk);
    regslice_both_s_axis_video_V_dest_V_U = new regslice_both<1>("regslice_both_s_axis_video_V_dest_V_U");
    regslice_both_s_axis_video_V_dest_V_U->ap_clk(ap_clk);
    regslice_both_s_axis_video_V_dest_V_U->ap_rst(ap_rst_n_inv);
    regslice_both_s_axis_video_V_dest_V_U->data_in(s_axis_video_TDEST);
    regslice_both_s_axis_video_V_dest_V_U->vld_in(s_axis_video_TVALID);
    regslice_both_s_axis_video_V_dest_V_U->ack_in(regslice_both_s_axis_video_V_dest_V_U_ack_in);
    regslice_both_s_axis_video_V_dest_V_U->data_out(s_axis_video_TDEST_int);
    regslice_both_s_axis_video_V_dest_V_U->vld_out(regslice_both_s_axis_video_V_dest_V_U_vld_out);
    regslice_both_s_axis_video_V_dest_V_U->ack_out(s_axis_video_TREADY_int);
    regslice_both_s_axis_video_V_dest_V_U->apdone_blk(regslice_both_s_axis_video_V_dest_V_U_apdone_blk);
    regslice_both_m_axis_video_V_data_V_U = new regslice_both<8>("regslice_both_m_axis_video_V_data_V_U");
    regslice_both_m_axis_video_V_data_V_U->ap_clk(ap_clk);
    regslice_both_m_axis_video_V_data_V_U->ap_rst(ap_rst_n_inv);
    regslice_both_m_axis_video_V_data_V_U->data_in(ap_phi_mux_tmp_data_V_phi_fu_219_p10);
    regslice_both_m_axis_video_V_data_V_U->vld_in(m_axis_video_TVALID_int);
    regslice_both_m_axis_video_V_data_V_U->ack_in(m_axis_video_TREADY_int);
    regslice_both_m_axis_video_V_data_V_U->data_out(m_axis_video_TDATA);
    regslice_both_m_axis_video_V_data_V_U->vld_out(regslice_both_m_axis_video_V_data_V_U_vld_out);
    regslice_both_m_axis_video_V_data_V_U->ack_out(m_axis_video_TREADY);
    regslice_both_m_axis_video_V_data_V_U->apdone_blk(regslice_both_m_axis_video_V_data_V_U_apdone_blk);
    regslice_both_m_axis_video_V_keep_V_U = new regslice_both<1>("regslice_both_m_axis_video_V_keep_V_U");
    regslice_both_m_axis_video_V_keep_V_U->ap_clk(ap_clk);
    regslice_both_m_axis_video_V_keep_V_U->ap_rst(ap_rst_n_inv);
    regslice_both_m_axis_video_V_keep_V_U->data_in(tmp_keep_V_reg_532);
    regslice_both_m_axis_video_V_keep_V_U->vld_in(m_axis_video_TVALID_int);
    regslice_both_m_axis_video_V_keep_V_U->ack_in(regslice_both_m_axis_video_V_keep_V_U_ack_in_dummy);
    regslice_both_m_axis_video_V_keep_V_U->data_out(m_axis_video_TKEEP);
    regslice_both_m_axis_video_V_keep_V_U->vld_out(regslice_both_m_axis_video_V_keep_V_U_vld_out);
    regslice_both_m_axis_video_V_keep_V_U->ack_out(m_axis_video_TREADY);
    regslice_both_m_axis_video_V_keep_V_U->apdone_blk(regslice_both_m_axis_video_V_keep_V_U_apdone_blk);
    regslice_both_m_axis_video_V_strb_V_U = new regslice_both<1>("regslice_both_m_axis_video_V_strb_V_U");
    regslice_both_m_axis_video_V_strb_V_U->ap_clk(ap_clk);
    regslice_both_m_axis_video_V_strb_V_U->ap_rst(ap_rst_n_inv);
    regslice_both_m_axis_video_V_strb_V_U->data_in(tmp_strb_V_reg_537);
    regslice_both_m_axis_video_V_strb_V_U->vld_in(m_axis_video_TVALID_int);
    regslice_both_m_axis_video_V_strb_V_U->ack_in(regslice_both_m_axis_video_V_strb_V_U_ack_in_dummy);
    regslice_both_m_axis_video_V_strb_V_U->data_out(m_axis_video_TSTRB);
    regslice_both_m_axis_video_V_strb_V_U->vld_out(regslice_both_m_axis_video_V_strb_V_U_vld_out);
    regslice_both_m_axis_video_V_strb_V_U->ack_out(m_axis_video_TREADY);
    regslice_both_m_axis_video_V_strb_V_U->apdone_blk(regslice_both_m_axis_video_V_strb_V_U_apdone_blk);
    regslice_both_m_axis_video_V_user_V_U = new regslice_both<1>("regslice_both_m_axis_video_V_user_V_U");
    regslice_both_m_axis_video_V_user_V_U->ap_clk(ap_clk);
    regslice_both_m_axis_video_V_user_V_U->ap_rst(ap_rst_n_inv);
    regslice_both_m_axis_video_V_user_V_U->data_in(tmp_user_V_reg_542);
    regslice_both_m_axis_video_V_user_V_U->vld_in(m_axis_video_TVALID_int);
    regslice_both_m_axis_video_V_user_V_U->ack_in(regslice_both_m_axis_video_V_user_V_U_ack_in_dummy);
    regslice_both_m_axis_video_V_user_V_U->data_out(m_axis_video_TUSER);
    regslice_both_m_axis_video_V_user_V_U->vld_out(regslice_both_m_axis_video_V_user_V_U_vld_out);
    regslice_both_m_axis_video_V_user_V_U->ack_out(m_axis_video_TREADY);
    regslice_both_m_axis_video_V_user_V_U->apdone_blk(regslice_both_m_axis_video_V_user_V_U_apdone_blk);
    regslice_both_m_axis_video_V_last_V_U = new regslice_both<1>("regslice_both_m_axis_video_V_last_V_U");
    regslice_both_m_axis_video_V_last_V_U->ap_clk(ap_clk);
    regslice_both_m_axis_video_V_last_V_U->ap_rst(ap_rst_n_inv);
    regslice_both_m_axis_video_V_last_V_U->data_in(tmp_last_V_reg_547);
    regslice_both_m_axis_video_V_last_V_U->vld_in(m_axis_video_TVALID_int);
    regslice_both_m_axis_video_V_last_V_U->ack_in(regslice_both_m_axis_video_V_last_V_U_ack_in_dummy);
    regslice_both_m_axis_video_V_last_V_U->data_out(m_axis_video_TLAST);
    regslice_both_m_axis_video_V_last_V_U->vld_out(regslice_both_m_axis_video_V_last_V_U_vld_out);
    regslice_both_m_axis_video_V_last_V_U->ack_out(m_axis_video_TREADY);
    regslice_both_m_axis_video_V_last_V_U->apdone_blk(regslice_both_m_axis_video_V_last_V_U_apdone_blk);
    regslice_both_m_axis_video_V_id_V_U = new regslice_both<1>("regslice_both_m_axis_video_V_id_V_U");
    regslice_both_m_axis_video_V_id_V_U->ap_clk(ap_clk);
    regslice_both_m_axis_video_V_id_V_U->ap_rst(ap_rst_n_inv);
    regslice_both_m_axis_video_V_id_V_U->data_in(tmp_id_V_reg_552);
    regslice_both_m_axis_video_V_id_V_U->vld_in(m_axis_video_TVALID_int);
    regslice_both_m_axis_video_V_id_V_U->ack_in(regslice_both_m_axis_video_V_id_V_U_ack_in_dummy);
    regslice_both_m_axis_video_V_id_V_U->data_out(m_axis_video_TID);
    regslice_both_m_axis_video_V_id_V_U->vld_out(regslice_both_m_axis_video_V_id_V_U_vld_out);
    regslice_both_m_axis_video_V_id_V_U->ack_out(m_axis_video_TREADY);
    regslice_both_m_axis_video_V_id_V_U->apdone_blk(regslice_both_m_axis_video_V_id_V_U_apdone_blk);
    regslice_both_m_axis_video_V_dest_V_U = new regslice_both<1>("regslice_both_m_axis_video_V_dest_V_U");
    regslice_both_m_axis_video_V_dest_V_U->ap_clk(ap_clk);
    regslice_both_m_axis_video_V_dest_V_U->ap_rst(ap_rst_n_inv);
    regslice_both_m_axis_video_V_dest_V_U->data_in(tmp_dest_V_reg_557);
    regslice_both_m_axis_video_V_dest_V_U->vld_in(m_axis_video_TVALID_int);
    regslice_both_m_axis_video_V_dest_V_U->ack_in(regslice_both_m_axis_video_V_dest_V_U_ack_in_dummy);
    regslice_both_m_axis_video_V_dest_V_U->data_out(m_axis_video_TDEST);
    regslice_both_m_axis_video_V_dest_V_U->vld_out(regslice_both_m_axis_video_V_dest_V_U_vld_out);
    regslice_both_m_axis_video_V_dest_V_U->ack_out(m_axis_video_TREADY);
    regslice_both_m_axis_video_V_dest_V_U->apdone_blk(regslice_both_m_axis_video_V_dest_V_U_apdone_blk);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_add_ln14_1_fu_305_p2);
    sensitive << ( ap_phi_mux_i_0_phi_fu_160_p4 );

    SC_METHOD(thread_add_ln14_fu_269_p2);
    sensitive << ( ap_phi_mux_indvar_flatten_phi_fu_149_p4 );

    SC_METHOD(thread_add_ln17_fu_299_p2);
    sensitive << ( ap_phi_mux_j_0_phi_fu_208_p4 );

    SC_METHOD(thread_add_ln26_1_fu_397_p2);
    sensitive << ( cgx_r );

    SC_METHOD(thread_add_ln26_2_fu_408_p2);
    sensitive << ( cgy_r );

    SC_METHOD(thread_add_ln26_3_fu_426_p2);
    sensitive << ( cgy_r );

    SC_METHOD(thread_add_ln26_fu_287_p2);
    sensitive << ( cgx_r );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state41);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_pp0_stage0);

    SC_METHOD(thread_ap_block_pp0_stage0_01001);

    SC_METHOD(thread_ap_block_pp0_stage0_11001);
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_state4_io );

    SC_METHOD(thread_ap_block_pp0_stage0_subdone);
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_state4_io );

    SC_METHOD(thread_ap_block_pp0_stage1);

    SC_METHOD(thread_ap_block_pp0_stage1_11001);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( icmp_ln14_reg_489 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_state5_io );
    sensitive << ( s_axis_video_TVALID_int );

    SC_METHOD(thread_ap_block_pp0_stage1_subdone);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( icmp_ln14_reg_489 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_state5_io );
    sensitive << ( s_axis_video_TVALID_int );

    SC_METHOD(thread_ap_block_state2_pp0_stage0_iter0);

    SC_METHOD(thread_ap_block_state3_pp0_stage1_iter0);
    sensitive << ( icmp_ln14_reg_489 );
    sensitive << ( s_axis_video_TVALID_int );

    SC_METHOD(thread_ap_block_state4_io);
    sensitive << ( icmp_ln14_reg_489 );
    sensitive << ( m_axis_video_TREADY_int );

    SC_METHOD(thread_ap_block_state4_pp0_stage0_iter1);

    SC_METHOD(thread_ap_block_state5_io);
    sensitive << ( icmp_ln14_reg_489_pp0_iter1_reg );
    sensitive << ( m_axis_video_TREADY_int );

    SC_METHOD(thread_ap_block_state5_pp0_stage1_iter1);

    SC_METHOD(thread_ap_condition_pp0_exit_iter0_state2);
    sensitive << ( icmp_ln14_fu_264_p2 );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_CS_fsm_state41 );
    sensitive << ( regslice_both_m_axis_video_V_data_V_U_apdone_blk );

    SC_METHOD(thread_ap_enable_pp0);
    sensitive << ( ap_idle_pp0 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_idle_pp0);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );

    SC_METHOD(thread_ap_phi_mux_cgx_1_phi_fu_184_p4);
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage1 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( icmp_ln14_reg_489_pp0_iter1_reg );
    sensitive << ( cgx_1_reg_180 );
    sensitive << ( cgx_2_reg_567 );

    SC_METHOD(thread_ap_phi_mux_cgy_1_phi_fu_196_p4);
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage1 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( icmp_ln14_reg_489_pp0_iter1_reg );
    sensitive << ( cgy_1_reg_192 );
    sensitive << ( cgy_2_reg_572 );

    SC_METHOD(thread_ap_phi_mux_i_0_phi_fu_160_p4);
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage1 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( icmp_ln14_reg_489_pp0_iter1_reg );
    sensitive << ( i_0_reg_156 );
    sensitive << ( select_ln14_reg_513 );

    SC_METHOD(thread_ap_phi_mux_indvar_flatten_phi_fu_149_p4);
    sensitive << ( icmp_ln14_reg_489 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( indvar_flatten_reg_145 );
    sensitive << ( add_ln14_reg_493 );

    SC_METHOD(thread_ap_phi_mux_j_0_phi_fu_208_p4);
    sensitive << ( icmp_ln14_reg_489 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( j_0_reg_204 );
    sensitive << ( j_reg_585 );

    SC_METHOD(thread_ap_phi_mux_nb_1_phi_fu_172_p4);
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage1 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( icmp_ln14_reg_489_pp0_iter1_reg );
    sensitive << ( nb_1_reg_168 );
    sensitive << ( nb_2_reg_562 );

    SC_METHOD(thread_ap_phi_mux_tmp_data_V_phi_fu_219_p10);
    sensitive << ( icmp_ln14_reg_489 );
    sensitive << ( cg_on_V_read_read_fu_96_p2 );
    sensitive << ( icmp_ln26_reg_504 );
    sensitive << ( icmp_ln26_1_reg_577 );
    sensitive << ( icmp_ln26_2_reg_581 );
    sensitive << ( ap_phi_reg_pp0_iter1_tmp_data_V_reg_215 );
    sensitive << ( select_ln26_fu_437_p3 );

    SC_METHOD(thread_ap_phi_reg_pp0_iter0_tmp_data_V_reg_215);

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state41 );
    sensitive << ( regslice_both_m_axis_video_V_data_V_U_apdone_blk );

    SC_METHOD(thread_ap_rst_n_inv);
    sensitive << ( ap_rst_n );

    SC_METHOD(thread_bound_fu_249_p0);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( bound_fu_249_p00 );

    SC_METHOD(thread_bound_fu_249_p00);
    sensitive << ( hsize_in );

    SC_METHOD(thread_bound_fu_249_p1);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( bound_fu_249_p10 );

    SC_METHOD(thread_bound_fu_249_p10);
    sensitive << ( vsize_in );

    SC_METHOD(thread_bound_fu_249_p2);
    sensitive << ( bound_fu_249_p0 );
    sensitive << ( bound_fu_249_p1 );

    SC_METHOD(thread_cg_on_V_read_read_fu_96_p2);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( cg_on_V );

    SC_METHOD(thread_cgx_2_fu_381_p3);
    sensitive << ( ap_phi_mux_cgx_1_phi_fu_184_p4 );
    sensitive << ( icmp_ln887_fu_350_p2 );
    sensitive << ( cgx_fu_362_p2 );

    SC_METHOD(thread_cgx_fu_362_p2);
    sensitive << ( zext_ln14_1_reg_498 );
    sensitive << ( ap_phi_mux_cgx_1_phi_fu_184_p4 );

    SC_METHOD(thread_cgy_2_fu_389_p3);
    sensitive << ( ap_phi_mux_cgy_1_phi_fu_196_p4 );
    sensitive << ( icmp_ln887_fu_350_p2 );
    sensitive << ( cgy_fu_356_p2 );

    SC_METHOD(thread_cgy_fu_356_p2);
    sensitive << ( zext_ln14_fu_318_p1 );
    sensitive << ( ap_phi_mux_cgy_1_phi_fu_196_p4 );

    SC_METHOD(thread_grp_fu_445_ap_start);
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_grp_fu_445_ce);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );

    SC_METHOD(thread_grp_fu_451_ap_start);
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_grp_fu_451_ce);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );

    SC_METHOD(thread_icmp_ln14_fu_264_p2);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( bound_reg_478 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_phi_mux_indvar_flatten_phi_fu_149_p4 );

    SC_METHOD(thread_icmp_ln17_fu_259_p2);
    sensitive << ( hsize_in );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( zext_ln17_fu_255_p1 );

    SC_METHOD(thread_icmp_ln26_1_fu_403_p2);
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( icmp_ln14_reg_489 );
    sensitive << ( cg_on_V_read_read_fu_96_p2 );
    sensitive << ( zext_ln14_1_reg_498 );
    sensitive << ( icmp_ln26_reg_504 );
    sensitive << ( ap_block_pp0_stage1_11001 );
    sensitive << ( add_ln26_1_fu_397_p2 );

    SC_METHOD(thread_icmp_ln26_2_fu_414_p2);
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( icmp_ln14_reg_489 );
    sensitive << ( cg_on_V_read_read_fu_96_p2 );
    sensitive << ( icmp_ln26_reg_504 );
    sensitive << ( ap_block_pp0_stage1_11001 );
    sensitive << ( zext_ln14_fu_318_p1 );
    sensitive << ( icmp_ln26_1_fu_403_p2 );
    sensitive << ( add_ln26_2_fu_408_p2 );

    SC_METHOD(thread_icmp_ln26_3_fu_432_p2);
    sensitive << ( icmp_ln14_reg_489 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( cg_on_V_read_read_fu_96_p2 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( icmp_ln26_reg_504 );
    sensitive << ( zext_ln14_reg_518 );
    sensitive << ( icmp_ln26_1_reg_577 );
    sensitive << ( icmp_ln26_2_reg_581 );
    sensitive << ( add_ln26_3_fu_426_p2 );

    SC_METHOD(thread_icmp_ln26_fu_293_p2);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( cg_on_V_read_read_fu_96_p2 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( icmp_ln14_fu_264_p2 );
    sensitive << ( zext_ln14_1_fu_283_p1 );
    sensitive << ( add_ln26_fu_287_p2 );

    SC_METHOD(thread_icmp_ln887_fu_350_p2);
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( icmp_ln14_reg_489 );
    sensitive << ( ap_block_pp0_stage1_11001 );
    sensitive << ( s_axis_video_TDATA_int );

    SC_METHOD(thread_j_fu_420_p3);
    sensitive << ( icmp_ln17_reg_483 );
    sensitive << ( add_ln17_reg_508 );

    SC_METHOD(thread_m_axis_video_TDATA_blk_n);
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage1 );
    sensitive << ( icmp_ln14_reg_489 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( icmp_ln14_reg_489_pp0_iter1_reg );
    sensitive << ( m_axis_video_TREADY_int );

    SC_METHOD(thread_m_axis_video_TVALID);
    sensitive << ( regslice_both_m_axis_video_V_data_V_U_vld_out );

    SC_METHOD(thread_m_axis_video_TVALID_int);
    sensitive << ( icmp_ln14_reg_489 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_nb_2_fu_373_p3);
    sensitive << ( ap_phi_mux_nb_1_phi_fu_172_p4 );
    sensitive << ( icmp_ln887_fu_350_p2 );
    sensitive << ( nb_fu_367_p2 );

    SC_METHOD(thread_nb_fu_367_p2);
    sensitive << ( ap_phi_mux_nb_1_phi_fu_172_p4 );

    SC_METHOD(thread_s_axis_video_TDATA_blk_n);
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage1 );
    sensitive << ( icmp_ln14_reg_489 );
    sensitive << ( s_axis_video_TVALID_int );

    SC_METHOD(thread_s_axis_video_TREADY);
    sensitive << ( s_axis_video_TVALID );
    sensitive << ( regslice_both_s_axis_video_V_data_V_U_ack_in );

    SC_METHOD(thread_s_axis_video_TREADY_int);
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( icmp_ln14_reg_489 );
    sensitive << ( ap_block_pp0_stage1_11001 );

    SC_METHOD(thread_select_ln14_1_fu_275_p3);
    sensitive << ( icmp_ln17_fu_259_p2 );
    sensitive << ( ap_phi_mux_j_0_phi_fu_208_p4 );

    SC_METHOD(thread_select_ln14_fu_311_p3);
    sensitive << ( icmp_ln17_reg_483 );
    sensitive << ( ap_phi_mux_i_0_phi_fu_160_p4 );
    sensitive << ( add_ln14_1_fu_305_p2 );

    SC_METHOD(thread_select_ln26_fu_437_p3);
    sensitive << ( tmp_data_V_1_reg_523 );
    sensitive << ( icmp_ln26_3_fu_432_p2 );

    SC_METHOD(thread_zext_ln14_1_fu_283_p1);
    sensitive << ( select_ln14_1_fu_275_p3 );

    SC_METHOD(thread_zext_ln14_fu_318_p1);
    sensitive << ( select_ln14_fu_311_p3 );

    SC_METHOD(thread_zext_ln17_fu_255_p1);
    sensitive << ( ap_phi_mux_j_0_phi_fu_208_p4 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( icmp_ln14_fu_264_p2 );
    sensitive << ( ap_block_pp0_stage0_subdone );
    sensitive << ( ap_block_pp0_stage1_subdone );
    sensitive << ( ap_CS_fsm_state41 );
    sensitive << ( regslice_both_m_axis_video_V_data_V_U_apdone_blk );

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    ap_CS_fsm = "000000000000000000000000000000000000001";
    cgx_r = "00000000000000000000000101000000";
    cgy_r = "00000000000000000000000011110000";
    ap_enable_reg_pp0_iter0 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter1 = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "c_grav_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst_n, "(port)ap_rst_n");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, cg_on_V, "(port)cg_on_V");
    sc_trace(mVcdFile, s_axis_video_TDATA, "(port)s_axis_video_TDATA");
    sc_trace(mVcdFile, s_axis_video_TVALID, "(port)s_axis_video_TVALID");
    sc_trace(mVcdFile, s_axis_video_TREADY, "(port)s_axis_video_TREADY");
    sc_trace(mVcdFile, s_axis_video_TKEEP, "(port)s_axis_video_TKEEP");
    sc_trace(mVcdFile, s_axis_video_TSTRB, "(port)s_axis_video_TSTRB");
    sc_trace(mVcdFile, s_axis_video_TUSER, "(port)s_axis_video_TUSER");
    sc_trace(mVcdFile, s_axis_video_TLAST, "(port)s_axis_video_TLAST");
    sc_trace(mVcdFile, s_axis_video_TID, "(port)s_axis_video_TID");
    sc_trace(mVcdFile, s_axis_video_TDEST, "(port)s_axis_video_TDEST");
    sc_trace(mVcdFile, m_axis_video_TDATA, "(port)m_axis_video_TDATA");
    sc_trace(mVcdFile, m_axis_video_TVALID, "(port)m_axis_video_TVALID");
    sc_trace(mVcdFile, m_axis_video_TREADY, "(port)m_axis_video_TREADY");
    sc_trace(mVcdFile, m_axis_video_TKEEP, "(port)m_axis_video_TKEEP");
    sc_trace(mVcdFile, m_axis_video_TSTRB, "(port)m_axis_video_TSTRB");
    sc_trace(mVcdFile, m_axis_video_TUSER, "(port)m_axis_video_TUSER");
    sc_trace(mVcdFile, m_axis_video_TLAST, "(port)m_axis_video_TLAST");
    sc_trace(mVcdFile, m_axis_video_TID, "(port)m_axis_video_TID");
    sc_trace(mVcdFile, m_axis_video_TDEST, "(port)m_axis_video_TDEST");
    sc_trace(mVcdFile, hsize_in, "(port)hsize_in");
    sc_trace(mVcdFile, vsize_in, "(port)vsize_in");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_rst_n_inv, "ap_rst_n_inv");
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, cgx_r, "cgx_r");
    sc_trace(mVcdFile, cgy_r, "cgy_r");
    sc_trace(mVcdFile, s_axis_video_TDATA_blk_n, "s_axis_video_TDATA_blk_n");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage1, "ap_CS_fsm_pp0_stage1");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter0, "ap_enable_reg_pp0_iter0");
    sc_trace(mVcdFile, ap_block_pp0_stage1, "ap_block_pp0_stage1");
    sc_trace(mVcdFile, icmp_ln14_reg_489, "icmp_ln14_reg_489");
    sc_trace(mVcdFile, m_axis_video_TDATA_blk_n, "m_axis_video_TDATA_blk_n");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage0, "ap_CS_fsm_pp0_stage0");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter1, "ap_enable_reg_pp0_iter1");
    sc_trace(mVcdFile, ap_block_pp0_stage0, "ap_block_pp0_stage0");
    sc_trace(mVcdFile, icmp_ln14_reg_489_pp0_iter1_reg, "icmp_ln14_reg_489_pp0_iter1_reg");
    sc_trace(mVcdFile, indvar_flatten_reg_145, "indvar_flatten_reg_145");
    sc_trace(mVcdFile, i_0_reg_156, "i_0_reg_156");
    sc_trace(mVcdFile, nb_1_reg_168, "nb_1_reg_168");
    sc_trace(mVcdFile, cgx_1_reg_180, "cgx_1_reg_180");
    sc_trace(mVcdFile, cgy_1_reg_192, "cgy_1_reg_192");
    sc_trace(mVcdFile, j_0_reg_204, "j_0_reg_204");
    sc_trace(mVcdFile, cg_on_V_read_read_fu_96_p2, "cg_on_V_read_read_fu_96_p2");
    sc_trace(mVcdFile, bound_fu_249_p2, "bound_fu_249_p2");
    sc_trace(mVcdFile, bound_reg_478, "bound_reg_478");
    sc_trace(mVcdFile, icmp_ln17_fu_259_p2, "icmp_ln17_fu_259_p2");
    sc_trace(mVcdFile, icmp_ln17_reg_483, "icmp_ln17_reg_483");
    sc_trace(mVcdFile, ap_block_state2_pp0_stage0_iter0, "ap_block_state2_pp0_stage0_iter0");
    sc_trace(mVcdFile, ap_block_state4_pp0_stage0_iter1, "ap_block_state4_pp0_stage0_iter1");
    sc_trace(mVcdFile, ap_block_state4_io, "ap_block_state4_io");
    sc_trace(mVcdFile, ap_block_pp0_stage0_11001, "ap_block_pp0_stage0_11001");
    sc_trace(mVcdFile, icmp_ln14_fu_264_p2, "icmp_ln14_fu_264_p2");
    sc_trace(mVcdFile, add_ln14_fu_269_p2, "add_ln14_fu_269_p2");
    sc_trace(mVcdFile, add_ln14_reg_493, "add_ln14_reg_493");
    sc_trace(mVcdFile, zext_ln14_1_fu_283_p1, "zext_ln14_1_fu_283_p1");
    sc_trace(mVcdFile, zext_ln14_1_reg_498, "zext_ln14_1_reg_498");
    sc_trace(mVcdFile, icmp_ln26_fu_293_p2, "icmp_ln26_fu_293_p2");
    sc_trace(mVcdFile, icmp_ln26_reg_504, "icmp_ln26_reg_504");
    sc_trace(mVcdFile, add_ln17_fu_299_p2, "add_ln17_fu_299_p2");
    sc_trace(mVcdFile, add_ln17_reg_508, "add_ln17_reg_508");
    sc_trace(mVcdFile, select_ln14_fu_311_p3, "select_ln14_fu_311_p3");
    sc_trace(mVcdFile, select_ln14_reg_513, "select_ln14_reg_513");
    sc_trace(mVcdFile, ap_block_state3_pp0_stage1_iter0, "ap_block_state3_pp0_stage1_iter0");
    sc_trace(mVcdFile, ap_block_state5_pp0_stage1_iter1, "ap_block_state5_pp0_stage1_iter1");
    sc_trace(mVcdFile, ap_block_state5_io, "ap_block_state5_io");
    sc_trace(mVcdFile, ap_block_pp0_stage1_11001, "ap_block_pp0_stage1_11001");
    sc_trace(mVcdFile, zext_ln14_fu_318_p1, "zext_ln14_fu_318_p1");
    sc_trace(mVcdFile, zext_ln14_reg_518, "zext_ln14_reg_518");
    sc_trace(mVcdFile, tmp_data_V_1_reg_523, "tmp_data_V_1_reg_523");
    sc_trace(mVcdFile, tmp_keep_V_reg_532, "tmp_keep_V_reg_532");
    sc_trace(mVcdFile, tmp_strb_V_reg_537, "tmp_strb_V_reg_537");
    sc_trace(mVcdFile, tmp_user_V_reg_542, "tmp_user_V_reg_542");
    sc_trace(mVcdFile, tmp_last_V_reg_547, "tmp_last_V_reg_547");
    sc_trace(mVcdFile, tmp_id_V_reg_552, "tmp_id_V_reg_552");
    sc_trace(mVcdFile, tmp_dest_V_reg_557, "tmp_dest_V_reg_557");
    sc_trace(mVcdFile, nb_2_fu_373_p3, "nb_2_fu_373_p3");
    sc_trace(mVcdFile, nb_2_reg_562, "nb_2_reg_562");
    sc_trace(mVcdFile, cgx_2_fu_381_p3, "cgx_2_fu_381_p3");
    sc_trace(mVcdFile, cgx_2_reg_567, "cgx_2_reg_567");
    sc_trace(mVcdFile, cgy_2_fu_389_p3, "cgy_2_fu_389_p3");
    sc_trace(mVcdFile, cgy_2_reg_572, "cgy_2_reg_572");
    sc_trace(mVcdFile, icmp_ln26_1_fu_403_p2, "icmp_ln26_1_fu_403_p2");
    sc_trace(mVcdFile, icmp_ln26_1_reg_577, "icmp_ln26_1_reg_577");
    sc_trace(mVcdFile, icmp_ln26_2_fu_414_p2, "icmp_ln26_2_fu_414_p2");
    sc_trace(mVcdFile, icmp_ln26_2_reg_581, "icmp_ln26_2_reg_581");
    sc_trace(mVcdFile, j_fu_420_p3, "j_fu_420_p3");
    sc_trace(mVcdFile, j_reg_585, "j_reg_585");
    sc_trace(mVcdFile, ap_block_pp0_stage0_subdone, "ap_block_pp0_stage0_subdone");
    sc_trace(mVcdFile, ap_condition_pp0_exit_iter0_state2, "ap_condition_pp0_exit_iter0_state2");
    sc_trace(mVcdFile, ap_block_pp0_stage1_subdone, "ap_block_pp0_stage1_subdone");
    sc_trace(mVcdFile, ap_phi_mux_indvar_flatten_phi_fu_149_p4, "ap_phi_mux_indvar_flatten_phi_fu_149_p4");
    sc_trace(mVcdFile, ap_phi_mux_i_0_phi_fu_160_p4, "ap_phi_mux_i_0_phi_fu_160_p4");
    sc_trace(mVcdFile, ap_phi_mux_nb_1_phi_fu_172_p4, "ap_phi_mux_nb_1_phi_fu_172_p4");
    sc_trace(mVcdFile, ap_phi_mux_cgx_1_phi_fu_184_p4, "ap_phi_mux_cgx_1_phi_fu_184_p4");
    sc_trace(mVcdFile, ap_phi_mux_cgy_1_phi_fu_196_p4, "ap_phi_mux_cgy_1_phi_fu_196_p4");
    sc_trace(mVcdFile, ap_phi_mux_j_0_phi_fu_208_p4, "ap_phi_mux_j_0_phi_fu_208_p4");
    sc_trace(mVcdFile, ap_phi_mux_tmp_data_V_phi_fu_219_p10, "ap_phi_mux_tmp_data_V_phi_fu_219_p10");
    sc_trace(mVcdFile, ap_phi_reg_pp0_iter0_tmp_data_V_reg_215, "ap_phi_reg_pp0_iter0_tmp_data_V_reg_215");
    sc_trace(mVcdFile, ap_phi_reg_pp0_iter1_tmp_data_V_reg_215, "ap_phi_reg_pp0_iter1_tmp_data_V_reg_215");
    sc_trace(mVcdFile, select_ln26_fu_437_p3, "select_ln26_fu_437_p3");
    sc_trace(mVcdFile, grp_fu_445_p2, "grp_fu_445_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state41, "ap_CS_fsm_state41");
    sc_trace(mVcdFile, regslice_both_m_axis_video_V_data_V_U_apdone_blk, "regslice_both_m_axis_video_V_data_V_U_apdone_blk");
    sc_trace(mVcdFile, grp_fu_451_p2, "grp_fu_451_p2");
    sc_trace(mVcdFile, ap_block_pp0_stage0_01001, "ap_block_pp0_stage0_01001");
    sc_trace(mVcdFile, bound_fu_249_p0, "bound_fu_249_p0");
    sc_trace(mVcdFile, bound_fu_249_p1, "bound_fu_249_p1");
    sc_trace(mVcdFile, zext_ln17_fu_255_p1, "zext_ln17_fu_255_p1");
    sc_trace(mVcdFile, select_ln14_1_fu_275_p3, "select_ln14_1_fu_275_p3");
    sc_trace(mVcdFile, add_ln26_fu_287_p2, "add_ln26_fu_287_p2");
    sc_trace(mVcdFile, add_ln14_1_fu_305_p2, "add_ln14_1_fu_305_p2");
    sc_trace(mVcdFile, icmp_ln887_fu_350_p2, "icmp_ln887_fu_350_p2");
    sc_trace(mVcdFile, nb_fu_367_p2, "nb_fu_367_p2");
    sc_trace(mVcdFile, cgx_fu_362_p2, "cgx_fu_362_p2");
    sc_trace(mVcdFile, cgy_fu_356_p2, "cgy_fu_356_p2");
    sc_trace(mVcdFile, add_ln26_1_fu_397_p2, "add_ln26_1_fu_397_p2");
    sc_trace(mVcdFile, add_ln26_2_fu_408_p2, "add_ln26_2_fu_408_p2");
    sc_trace(mVcdFile, add_ln26_3_fu_426_p2, "add_ln26_3_fu_426_p2");
    sc_trace(mVcdFile, icmp_ln26_3_fu_432_p2, "icmp_ln26_3_fu_432_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, grp_fu_445_ap_start, "grp_fu_445_ap_start");
    sc_trace(mVcdFile, grp_fu_445_ap_done, "grp_fu_445_ap_done");
    sc_trace(mVcdFile, grp_fu_445_ce, "grp_fu_445_ce");
    sc_trace(mVcdFile, grp_fu_451_ap_start, "grp_fu_451_ap_start");
    sc_trace(mVcdFile, grp_fu_451_ap_done, "grp_fu_451_ap_done");
    sc_trace(mVcdFile, grp_fu_451_ce, "grp_fu_451_ce");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, ap_idle_pp0, "ap_idle_pp0");
    sc_trace(mVcdFile, ap_enable_pp0, "ap_enable_pp0");
    sc_trace(mVcdFile, regslice_both_s_axis_video_V_data_V_U_apdone_blk, "regslice_both_s_axis_video_V_data_V_U_apdone_blk");
    sc_trace(mVcdFile, s_axis_video_TDATA_int, "s_axis_video_TDATA_int");
    sc_trace(mVcdFile, s_axis_video_TVALID_int, "s_axis_video_TVALID_int");
    sc_trace(mVcdFile, s_axis_video_TREADY_int, "s_axis_video_TREADY_int");
    sc_trace(mVcdFile, regslice_both_s_axis_video_V_data_V_U_ack_in, "regslice_both_s_axis_video_V_data_V_U_ack_in");
    sc_trace(mVcdFile, regslice_both_s_axis_video_V_keep_V_U_apdone_blk, "regslice_both_s_axis_video_V_keep_V_U_apdone_blk");
    sc_trace(mVcdFile, s_axis_video_TKEEP_int, "s_axis_video_TKEEP_int");
    sc_trace(mVcdFile, regslice_both_s_axis_video_V_keep_V_U_vld_out, "regslice_both_s_axis_video_V_keep_V_U_vld_out");
    sc_trace(mVcdFile, regslice_both_s_axis_video_V_keep_V_U_ack_in, "regslice_both_s_axis_video_V_keep_V_U_ack_in");
    sc_trace(mVcdFile, regslice_both_s_axis_video_V_strb_V_U_apdone_blk, "regslice_both_s_axis_video_V_strb_V_U_apdone_blk");
    sc_trace(mVcdFile, s_axis_video_TSTRB_int, "s_axis_video_TSTRB_int");
    sc_trace(mVcdFile, regslice_both_s_axis_video_V_strb_V_U_vld_out, "regslice_both_s_axis_video_V_strb_V_U_vld_out");
    sc_trace(mVcdFile, regslice_both_s_axis_video_V_strb_V_U_ack_in, "regslice_both_s_axis_video_V_strb_V_U_ack_in");
    sc_trace(mVcdFile, regslice_both_s_axis_video_V_user_V_U_apdone_blk, "regslice_both_s_axis_video_V_user_V_U_apdone_blk");
    sc_trace(mVcdFile, s_axis_video_TUSER_int, "s_axis_video_TUSER_int");
    sc_trace(mVcdFile, regslice_both_s_axis_video_V_user_V_U_vld_out, "regslice_both_s_axis_video_V_user_V_U_vld_out");
    sc_trace(mVcdFile, regslice_both_s_axis_video_V_user_V_U_ack_in, "regslice_both_s_axis_video_V_user_V_U_ack_in");
    sc_trace(mVcdFile, regslice_both_s_axis_video_V_last_V_U_apdone_blk, "regslice_both_s_axis_video_V_last_V_U_apdone_blk");
    sc_trace(mVcdFile, s_axis_video_TLAST_int, "s_axis_video_TLAST_int");
    sc_trace(mVcdFile, regslice_both_s_axis_video_V_last_V_U_vld_out, "regslice_both_s_axis_video_V_last_V_U_vld_out");
    sc_trace(mVcdFile, regslice_both_s_axis_video_V_last_V_U_ack_in, "regslice_both_s_axis_video_V_last_V_U_ack_in");
    sc_trace(mVcdFile, regslice_both_s_axis_video_V_id_V_U_apdone_blk, "regslice_both_s_axis_video_V_id_V_U_apdone_blk");
    sc_trace(mVcdFile, s_axis_video_TID_int, "s_axis_video_TID_int");
    sc_trace(mVcdFile, regslice_both_s_axis_video_V_id_V_U_vld_out, "regslice_both_s_axis_video_V_id_V_U_vld_out");
    sc_trace(mVcdFile, regslice_both_s_axis_video_V_id_V_U_ack_in, "regslice_both_s_axis_video_V_id_V_U_ack_in");
    sc_trace(mVcdFile, regslice_both_s_axis_video_V_dest_V_U_apdone_blk, "regslice_both_s_axis_video_V_dest_V_U_apdone_blk");
    sc_trace(mVcdFile, s_axis_video_TDEST_int, "s_axis_video_TDEST_int");
    sc_trace(mVcdFile, regslice_both_s_axis_video_V_dest_V_U_vld_out, "regslice_both_s_axis_video_V_dest_V_U_vld_out");
    sc_trace(mVcdFile, regslice_both_s_axis_video_V_dest_V_U_ack_in, "regslice_both_s_axis_video_V_dest_V_U_ack_in");
    sc_trace(mVcdFile, m_axis_video_TVALID_int, "m_axis_video_TVALID_int");
    sc_trace(mVcdFile, m_axis_video_TREADY_int, "m_axis_video_TREADY_int");
    sc_trace(mVcdFile, regslice_both_m_axis_video_V_data_V_U_vld_out, "regslice_both_m_axis_video_V_data_V_U_vld_out");
    sc_trace(mVcdFile, regslice_both_m_axis_video_V_keep_V_U_apdone_blk, "regslice_both_m_axis_video_V_keep_V_U_apdone_blk");
    sc_trace(mVcdFile, regslice_both_m_axis_video_V_keep_V_U_ack_in_dummy, "regslice_both_m_axis_video_V_keep_V_U_ack_in_dummy");
    sc_trace(mVcdFile, regslice_both_m_axis_video_V_keep_V_U_vld_out, "regslice_both_m_axis_video_V_keep_V_U_vld_out");
    sc_trace(mVcdFile, regslice_both_m_axis_video_V_strb_V_U_apdone_blk, "regslice_both_m_axis_video_V_strb_V_U_apdone_blk");
    sc_trace(mVcdFile, regslice_both_m_axis_video_V_strb_V_U_ack_in_dummy, "regslice_both_m_axis_video_V_strb_V_U_ack_in_dummy");
    sc_trace(mVcdFile, regslice_both_m_axis_video_V_strb_V_U_vld_out, "regslice_both_m_axis_video_V_strb_V_U_vld_out");
    sc_trace(mVcdFile, regslice_both_m_axis_video_V_user_V_U_apdone_blk, "regslice_both_m_axis_video_V_user_V_U_apdone_blk");
    sc_trace(mVcdFile, regslice_both_m_axis_video_V_user_V_U_ack_in_dummy, "regslice_both_m_axis_video_V_user_V_U_ack_in_dummy");
    sc_trace(mVcdFile, regslice_both_m_axis_video_V_user_V_U_vld_out, "regslice_both_m_axis_video_V_user_V_U_vld_out");
    sc_trace(mVcdFile, regslice_both_m_axis_video_V_last_V_U_apdone_blk, "regslice_both_m_axis_video_V_last_V_U_apdone_blk");
    sc_trace(mVcdFile, regslice_both_m_axis_video_V_last_V_U_ack_in_dummy, "regslice_both_m_axis_video_V_last_V_U_ack_in_dummy");
    sc_trace(mVcdFile, regslice_both_m_axis_video_V_last_V_U_vld_out, "regslice_both_m_axis_video_V_last_V_U_vld_out");
    sc_trace(mVcdFile, regslice_both_m_axis_video_V_id_V_U_apdone_blk, "regslice_both_m_axis_video_V_id_V_U_apdone_blk");
    sc_trace(mVcdFile, regslice_both_m_axis_video_V_id_V_U_ack_in_dummy, "regslice_both_m_axis_video_V_id_V_U_ack_in_dummy");
    sc_trace(mVcdFile, regslice_both_m_axis_video_V_id_V_U_vld_out, "regslice_both_m_axis_video_V_id_V_U_vld_out");
    sc_trace(mVcdFile, regslice_both_m_axis_video_V_dest_V_U_apdone_blk, "regslice_both_m_axis_video_V_dest_V_U_apdone_blk");
    sc_trace(mVcdFile, regslice_both_m_axis_video_V_dest_V_U_ack_in_dummy, "regslice_both_m_axis_video_V_dest_V_U_ack_in_dummy");
    sc_trace(mVcdFile, regslice_both_m_axis_video_V_dest_V_U_vld_out, "regslice_both_m_axis_video_V_dest_V_U_vld_out");
    sc_trace(mVcdFile, bound_fu_249_p00, "bound_fu_249_p00");
    sc_trace(mVcdFile, bound_fu_249_p10, "bound_fu_249_p10");
#endif

    }
    mHdltvinHandle.open("c_grav.hdltvin.dat");
    mHdltvoutHandle.open("c_grav.hdltvout.dat");
}

c_grav::~c_grav() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
    delete c_grav_udiv_32ns_bkb_U1;
    delete c_grav_udiv_32ns_bkb_U2;
    delete regslice_both_s_axis_video_V_data_V_U;
    delete regslice_both_s_axis_video_V_keep_V_U;
    delete regslice_both_s_axis_video_V_strb_V_U;
    delete regslice_both_s_axis_video_V_user_V_U;
    delete regslice_both_s_axis_video_V_last_V_U;
    delete regslice_both_s_axis_video_V_id_V_U;
    delete regslice_both_s_axis_video_V_dest_V_U;
    delete regslice_both_m_axis_video_V_data_V_U;
    delete regslice_both_m_axis_video_V_keep_V_U;
    delete regslice_both_m_axis_video_V_strb_V_U;
    delete regslice_both_m_axis_video_V_user_V_U;
    delete regslice_both_m_axis_video_V_last_V_U;
    delete regslice_both_m_axis_video_V_id_V_U;
    delete regslice_both_m_axis_video_V_dest_V_U;
}

void c_grav::thread_ap_clk_no_reset_() {
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter0 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp0_exit_iter0_state2.read()))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                    esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_1;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter1 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage1_subdone.read(), ap_const_boolean_0))) {
            ap_enable_reg_pp0_iter1 = ap_enable_reg_pp0_iter0.read();
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                    esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
            ap_enable_reg_pp0_iter1 = ap_const_logic_0;
        }
    }
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(icmp_ln14_reg_489.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, cg_on_V_read_read_fu_96_p2.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(icmp_ln14_reg_489.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(cg_on_V_read_read_fu_96_p2.read(), ap_const_lv1_1) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(icmp_ln26_reg_504.read(), ap_const_lv1_1) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln26_1_fu_403_p2.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(icmp_ln14_reg_489.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(cg_on_V_read_read_fu_96_p2.read(), ap_const_lv1_1) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(icmp_ln26_reg_504.read(), ap_const_lv1_1) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln26_1_fu_403_p2.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln26_2_fu_414_p2.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(icmp_ln14_reg_489.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(cg_on_V_read_read_fu_96_p2.read(), ap_const_lv1_1) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln26_reg_504.read())))) {
        ap_phi_reg_pp0_iter1_tmp_data_V_reg_215 = s_axis_video_TDATA_int.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0))) {
        ap_phi_reg_pp0_iter1_tmp_data_V_reg_215 = ap_phi_reg_pp0_iter0_tmp_data_V_reg_215.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln14_reg_489_pp0_iter1_reg.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0))) {
        cgx_1_reg_180 = cgx_2_reg_567.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        cgx_1_reg_180 = ap_const_lv32_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln14_reg_489_pp0_iter1_reg.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0))) {
        cgy_1_reg_192 = cgy_2_reg_572.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        cgy_1_reg_192 = ap_const_lv32_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln14_reg_489_pp0_iter1_reg.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0))) {
        i_0_reg_156 = select_ln14_reg_513.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        i_0_reg_156 = ap_const_lv31_0;
    }
    if ((esl_seteq<1,1,1>(icmp_ln14_reg_489.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        indvar_flatten_reg_145 = add_ln14_reg_493.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        indvar_flatten_reg_145 = ap_const_lv64_0;
    }
    if ((esl_seteq<1,1,1>(icmp_ln14_reg_489.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        j_0_reg_204 = j_reg_585.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        j_0_reg_204 = ap_const_lv31_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln14_reg_489_pp0_iter1_reg.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0))) {
        nb_1_reg_168 = nb_2_reg_562.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        nb_1_reg_168 = ap_const_lv32_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        add_ln14_reg_493 = add_ln14_fu_269_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln14_fu_264_p2.read()))) {
        add_ln17_reg_508 = add_ln17_fu_299_p2.read();
        zext_ln14_1_reg_498 = zext_ln14_1_fu_283_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        bound_reg_478 = bound_fu_249_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(icmp_ln14_reg_489.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0))) {
        cgx_2_reg_567 = cgx_2_fu_381_p3.read();
        cgy_2_reg_572 = cgy_2_fu_389_p3.read();
        j_reg_585 = j_fu_420_p3.read();
        nb_2_reg_562 = nb_2_fu_373_p3.read();
        select_ln14_reg_513 = select_ln14_fu_311_p3.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state41.read()) && esl_seteq<1,1,1>(regslice_both_m_axis_video_V_data_V_U_apdone_blk.read(), ap_const_logic_0))) {
        cgx_r = grp_fu_445_p2.read();
        cgy_r = grp_fu_451_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        icmp_ln14_reg_489 = icmp_ln14_fu_264_p2.read();
        icmp_ln14_reg_489_pp0_iter1_reg = icmp_ln14_reg_489.read();
        icmp_ln17_reg_483 = icmp_ln17_fu_259_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && esl_seteq<1,1,1>(icmp_ln14_reg_489.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(cg_on_V_read_read_fu_96_p2.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(icmp_ln26_reg_504.read(), ap_const_lv1_1))) {
        icmp_ln26_1_reg_577 = icmp_ln26_1_fu_403_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && esl_seteq<1,1,1>(icmp_ln14_reg_489.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(cg_on_V_read_read_fu_96_p2.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(icmp_ln26_reg_504.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln26_1_fu_403_p2.read()))) {
        icmp_ln26_2_reg_581 = icmp_ln26_2_fu_414_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln14_fu_264_p2.read()) && esl_seteq<1,1,1>(cg_on_V_read_read_fu_96_p2.read(), ap_const_lv1_1))) {
        icmp_ln26_reg_504 = icmp_ln26_fu_293_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && esl_seteq<1,1,1>(icmp_ln14_reg_489.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0))) {
        tmp_data_V_1_reg_523 = s_axis_video_TDATA_int.read();
        tmp_dest_V_reg_557 = s_axis_video_TDEST_int.read();
        tmp_id_V_reg_552 = s_axis_video_TID_int.read();
        tmp_keep_V_reg_532 = s_axis_video_TKEEP_int.read();
        tmp_last_V_reg_547 = s_axis_video_TLAST_int.read();
        tmp_strb_V_reg_537 = s_axis_video_TSTRB_int.read();
        tmp_user_V_reg_542 = s_axis_video_TUSER_int.read();
        zext_ln14_reg_518 = zext_ln14_fu_318_p1.read();
    }
}

void c_grav::thread_add_ln14_1_fu_305_p2() {
    add_ln14_1_fu_305_p2 = (!ap_phi_mux_i_0_phi_fu_160_p4.read().is_01() || !ap_const_lv31_1.is_01())? sc_lv<31>(): (sc_biguint<31>(ap_phi_mux_i_0_phi_fu_160_p4.read()) + sc_biguint<31>(ap_const_lv31_1));
}

void c_grav::thread_add_ln14_fu_269_p2() {
    add_ln14_fu_269_p2 = (!ap_phi_mux_indvar_flatten_phi_fu_149_p4.read().is_01() || !ap_const_lv64_1.is_01())? sc_lv<64>(): (sc_biguint<64>(ap_phi_mux_indvar_flatten_phi_fu_149_p4.read()) + sc_biguint<64>(ap_const_lv64_1));
}

void c_grav::thread_add_ln17_fu_299_p2() {
    add_ln17_fu_299_p2 = (!ap_phi_mux_j_0_phi_fu_208_p4.read().is_01() || !ap_const_lv31_1.is_01())? sc_lv<31>(): (sc_biguint<31>(ap_phi_mux_j_0_phi_fu_208_p4.read()) + sc_biguint<31>(ap_const_lv31_1));
}

void c_grav::thread_add_ln26_1_fu_397_p2() {
    add_ln26_1_fu_397_p2 = (!cgx_r.read().is_01() || !ap_const_lv32_5.is_01())? sc_lv<32>(): (sc_biguint<32>(cgx_r.read()) + sc_biguint<32>(ap_const_lv32_5));
}

void c_grav::thread_add_ln26_2_fu_408_p2() {
    add_ln26_2_fu_408_p2 = (!cgy_r.read().is_01() || !ap_const_lv32_FFFFFFFB.is_01())? sc_lv<32>(): (sc_biguint<32>(cgy_r.read()) + sc_bigint<32>(ap_const_lv32_FFFFFFFB));
}

void c_grav::thread_add_ln26_3_fu_426_p2() {
    add_ln26_3_fu_426_p2 = (!cgy_r.read().is_01() || !ap_const_lv32_5.is_01())? sc_lv<32>(): (sc_biguint<32>(cgy_r.read()) + sc_biguint<32>(ap_const_lv32_5));
}

void c_grav::thread_add_ln26_fu_287_p2() {
    add_ln26_fu_287_p2 = (!cgx_r.read().is_01() || !ap_const_lv32_FFFFFFFB.is_01())? sc_lv<32>(): (sc_biguint<32>(cgx_r.read()) + sc_bigint<32>(ap_const_lv32_FFFFFFFB));
}

void c_grav::thread_ap_CS_fsm_pp0_stage0() {
    ap_CS_fsm_pp0_stage0 = ap_CS_fsm.read()[1];
}

void c_grav::thread_ap_CS_fsm_pp0_stage1() {
    ap_CS_fsm_pp0_stage1 = ap_CS_fsm.read()[2];
}

void c_grav::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void c_grav::thread_ap_CS_fsm_state41() {
    ap_CS_fsm_state41 = ap_CS_fsm.read()[38];
}

void c_grav::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read()[3];
}

void c_grav::thread_ap_block_pp0_stage0() {
    ap_block_pp0_stage0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void c_grav::thread_ap_block_pp0_stage0_01001() {
    ap_block_pp0_stage0_01001 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void c_grav::thread_ap_block_pp0_stage0_11001() {
    ap_block_pp0_stage0_11001 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state4_io.read()));
}

void c_grav::thread_ap_block_pp0_stage0_subdone() {
    ap_block_pp0_stage0_subdone = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state4_io.read()));
}

void c_grav::thread_ap_block_pp0_stage1() {
    ap_block_pp0_stage1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void c_grav::thread_ap_block_pp0_stage1_11001() {
    ap_block_pp0_stage1_11001 = ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state5_io.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
  esl_seteq<1,1,1>(icmp_ln14_reg_489.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_0, s_axis_video_TVALID_int.read())));
}

void c_grav::thread_ap_block_pp0_stage1_subdone() {
    ap_block_pp0_stage1_subdone = ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state5_io.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
  esl_seteq<1,1,1>(icmp_ln14_reg_489.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_0, s_axis_video_TVALID_int.read())));
}

void c_grav::thread_ap_block_state2_pp0_stage0_iter0() {
    ap_block_state2_pp0_stage0_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void c_grav::thread_ap_block_state3_pp0_stage1_iter0() {
    ap_block_state3_pp0_stage1_iter0 = (esl_seteq<1,1,1>(icmp_ln14_reg_489.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, s_axis_video_TVALID_int.read()));
}

void c_grav::thread_ap_block_state4_io() {
    ap_block_state4_io = (esl_seteq<1,1,1>(icmp_ln14_reg_489.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, m_axis_video_TREADY_int.read()));
}

void c_grav::thread_ap_block_state4_pp0_stage0_iter1() {
    ap_block_state4_pp0_stage0_iter1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void c_grav::thread_ap_block_state5_io() {
    ap_block_state5_io = (esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln14_reg_489_pp0_iter1_reg.read()) && esl_seteq<1,1,1>(ap_const_logic_0, m_axis_video_TREADY_int.read()));
}

void c_grav::thread_ap_block_state5_pp0_stage1_iter1() {
    ap_block_state5_pp0_stage1_iter1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void c_grav::thread_ap_condition_pp0_exit_iter0_state2() {
    if (esl_seteq<1,1,1>(icmp_ln14_fu_264_p2.read(), ap_const_lv1_1)) {
        ap_condition_pp0_exit_iter0_state2 = ap_const_logic_1;
    } else {
        ap_condition_pp0_exit_iter0_state2 = ap_const_logic_0;
    }
}

void c_grav::thread_ap_done() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state41.read()) && 
         esl_seteq<1,1,1>(regslice_both_m_axis_video_V_data_V_U_apdone_blk.read(), ap_const_logic_0))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void c_grav::thread_ap_enable_pp0() {
    ap_enable_pp0 = (ap_idle_pp0.read() ^ ap_const_logic_1);
}

void c_grav::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void c_grav::thread_ap_idle_pp0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter1.read()))) {
        ap_idle_pp0 = ap_const_logic_1;
    } else {
        ap_idle_pp0 = ap_const_logic_0;
    }
}

void c_grav::thread_ap_phi_mux_cgx_1_phi_fu_184_p4() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage1.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln14_reg_489_pp0_iter1_reg.read()))) {
        ap_phi_mux_cgx_1_phi_fu_184_p4 = cgx_2_reg_567.read();
    } else {
        ap_phi_mux_cgx_1_phi_fu_184_p4 = cgx_1_reg_180.read();
    }
}

void c_grav::thread_ap_phi_mux_cgy_1_phi_fu_196_p4() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage1.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln14_reg_489_pp0_iter1_reg.read()))) {
        ap_phi_mux_cgy_1_phi_fu_196_p4 = cgy_2_reg_572.read();
    } else {
        ap_phi_mux_cgy_1_phi_fu_196_p4 = cgy_1_reg_192.read();
    }
}

void c_grav::thread_ap_phi_mux_i_0_phi_fu_160_p4() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage1.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln14_reg_489_pp0_iter1_reg.read()))) {
        ap_phi_mux_i_0_phi_fu_160_p4 = select_ln14_reg_513.read();
    } else {
        ap_phi_mux_i_0_phi_fu_160_p4 = i_0_reg_156.read();
    }
}

void c_grav::thread_ap_phi_mux_indvar_flatten_phi_fu_149_p4() {
    if ((esl_seteq<1,1,1>(icmp_ln14_reg_489.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
        ap_phi_mux_indvar_flatten_phi_fu_149_p4 = add_ln14_reg_493.read();
    } else {
        ap_phi_mux_indvar_flatten_phi_fu_149_p4 = indvar_flatten_reg_145.read();
    }
}

void c_grav::thread_ap_phi_mux_j_0_phi_fu_208_p4() {
    if ((esl_seteq<1,1,1>(icmp_ln14_reg_489.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
        ap_phi_mux_j_0_phi_fu_208_p4 = j_reg_585.read();
    } else {
        ap_phi_mux_j_0_phi_fu_208_p4 = j_0_reg_204.read();
    }
}

void c_grav::thread_ap_phi_mux_nb_1_phi_fu_172_p4() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage1.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln14_reg_489_pp0_iter1_reg.read()))) {
        ap_phi_mux_nb_1_phi_fu_172_p4 = nb_2_reg_562.read();
    } else {
        ap_phi_mux_nb_1_phi_fu_172_p4 = nb_1_reg_168.read();
    }
}

void c_grav::thread_ap_phi_mux_tmp_data_V_phi_fu_219_p10() {
    if ((esl_seteq<1,1,1>(icmp_ln14_reg_489.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(cg_on_V_read_read_fu_96_p2.read(), ap_const_lv1_1) && 
         esl_seteq<1,1,1>(icmp_ln26_reg_504.read(), ap_const_lv1_1) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln26_1_reg_577.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln26_2_reg_581.read()))) {
        ap_phi_mux_tmp_data_V_phi_fu_219_p10 = select_ln26_fu_437_p3.read();
    } else {
        ap_phi_mux_tmp_data_V_phi_fu_219_p10 = ap_phi_reg_pp0_iter1_tmp_data_V_reg_215.read();
    }
}

void c_grav::thread_ap_phi_reg_pp0_iter0_tmp_data_V_reg_215() {
    ap_phi_reg_pp0_iter0_tmp_data_V_reg_215 =  (sc_lv<8>) ("XXXXXXXX");
}

void c_grav::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state41.read()) && 
         esl_seteq<1,1,1>(regslice_both_m_axis_video_V_data_V_U_apdone_blk.read(), ap_const_logic_0))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void c_grav::thread_ap_rst_n_inv() {
    ap_rst_n_inv =  (sc_logic) (~ap_rst_n.read());
}

void c_grav::thread_bound_fu_249_p0() {
    bound_fu_249_p0 =  (sc_lv<32>) (bound_fu_249_p00.read());
}

void c_grav::thread_bound_fu_249_p00() {
    bound_fu_249_p00 = esl_zext<64,32>(hsize_in.read());
}

void c_grav::thread_bound_fu_249_p1() {
    bound_fu_249_p1 =  (sc_lv<32>) (bound_fu_249_p10.read());
}

void c_grav::thread_bound_fu_249_p10() {
    bound_fu_249_p10 = esl_zext<64,32>(vsize_in.read());
}

void c_grav::thread_bound_fu_249_p2() {
    bound_fu_249_p2 = (!bound_fu_249_p0.read().is_01() || !bound_fu_249_p1.read().is_01())? sc_lv<64>(): sc_biguint<32>(bound_fu_249_p0.read()) * sc_biguint<32>(bound_fu_249_p1.read());
}

void c_grav::thread_cg_on_V_read_read_fu_96_p2() {
    cg_on_V_read_read_fu_96_p2 = cg_on_V.read();
}

void c_grav::thread_cgx_2_fu_381_p3() {
    cgx_2_fu_381_p3 = (!icmp_ln887_fu_350_p2.read()[0].is_01())? sc_lv<32>(): ((icmp_ln887_fu_350_p2.read()[0].to_bool())? cgx_fu_362_p2.read(): ap_phi_mux_cgx_1_phi_fu_184_p4.read());
}

void c_grav::thread_cgx_fu_362_p2() {
    cgx_fu_362_p2 = (!zext_ln14_1_reg_498.read().is_01() || !ap_phi_mux_cgx_1_phi_fu_184_p4.read().is_01())? sc_lv<32>(): (sc_biguint<32>(zext_ln14_1_reg_498.read()) + sc_biguint<32>(ap_phi_mux_cgx_1_phi_fu_184_p4.read()));
}

void c_grav::thread_cgy_2_fu_389_p3() {
    cgy_2_fu_389_p3 = (!icmp_ln887_fu_350_p2.read()[0].is_01())? sc_lv<32>(): ((icmp_ln887_fu_350_p2.read()[0].to_bool())? cgy_fu_356_p2.read(): ap_phi_mux_cgy_1_phi_fu_196_p4.read());
}

void c_grav::thread_cgy_fu_356_p2() {
    cgy_fu_356_p2 = (!ap_phi_mux_cgy_1_phi_fu_196_p4.read().is_01() || !zext_ln14_fu_318_p1.read().is_01())? sc_lv<32>(): (sc_biguint<32>(ap_phi_mux_cgy_1_phi_fu_196_p4.read()) + sc_biguint<32>(zext_ln14_fu_318_p1.read()));
}

void c_grav::thread_grp_fu_445_ap_start() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        grp_fu_445_ap_start = ap_const_logic_1;
    } else {
        grp_fu_445_ap_start = ap_const_logic_0;
    }
}

void c_grav::thread_grp_fu_445_ce() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()))) {
        grp_fu_445_ce = ap_const_logic_0;
    } else {
        grp_fu_445_ce = ap_const_logic_1;
    }
}

void c_grav::thread_grp_fu_451_ap_start() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        grp_fu_451_ap_start = ap_const_logic_1;
    } else {
        grp_fu_451_ap_start = ap_const_logic_0;
    }
}

void c_grav::thread_grp_fu_451_ce() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()))) {
        grp_fu_451_ce = ap_const_logic_0;
    } else {
        grp_fu_451_ce = ap_const_logic_1;
    }
}

void c_grav::thread_icmp_ln14_fu_264_p2() {
    icmp_ln14_fu_264_p2 = (!ap_phi_mux_indvar_flatten_phi_fu_149_p4.read().is_01() || !bound_reg_478.read().is_01())? sc_lv<1>(): sc_lv<1>(ap_phi_mux_indvar_flatten_phi_fu_149_p4.read() == bound_reg_478.read());
}

void c_grav::thread_icmp_ln17_fu_259_p2() {
    icmp_ln17_fu_259_p2 = (!zext_ln17_fu_255_p1.read().is_01() || !hsize_in.read().is_01())? sc_lv<1>(): (sc_bigint<32>(zext_ln17_fu_255_p1.read()) < sc_bigint<32>(hsize_in.read()));
}

void c_grav::thread_icmp_ln26_1_fu_403_p2() {
    icmp_ln26_1_fu_403_p2 = (!zext_ln14_1_reg_498.read().is_01() || !add_ln26_1_fu_397_p2.read().is_01())? sc_lv<1>(): (sc_bigint<32>(zext_ln14_1_reg_498.read()) > sc_bigint<32>(add_ln26_1_fu_397_p2.read()));
}

void c_grav::thread_icmp_ln26_2_fu_414_p2() {
    icmp_ln26_2_fu_414_p2 = (!zext_ln14_fu_318_p1.read().is_01() || !add_ln26_2_fu_408_p2.read().is_01())? sc_lv<1>(): (sc_bigint<32>(zext_ln14_fu_318_p1.read()) > sc_bigint<32>(add_ln26_2_fu_408_p2.read()));
}

void c_grav::thread_icmp_ln26_3_fu_432_p2() {
    icmp_ln26_3_fu_432_p2 = (!zext_ln14_reg_518.read().is_01() || !add_ln26_3_fu_426_p2.read().is_01())? sc_lv<1>(): (sc_bigint<32>(zext_ln14_reg_518.read()) > sc_bigint<32>(add_ln26_3_fu_426_p2.read()));
}

void c_grav::thread_icmp_ln26_fu_293_p2() {
    icmp_ln26_fu_293_p2 = (!zext_ln14_1_fu_283_p1.read().is_01() || !add_ln26_fu_287_p2.read().is_01())? sc_lv<1>(): (sc_bigint<32>(zext_ln14_1_fu_283_p1.read()) > sc_bigint<32>(add_ln26_fu_287_p2.read()));
}

void c_grav::thread_icmp_ln887_fu_350_p2() {
    icmp_ln887_fu_350_p2 = (!s_axis_video_TDATA_int.read().is_01() || !ap_const_lv8_64.is_01())? sc_lv<1>(): (sc_biguint<8>(s_axis_video_TDATA_int.read()) < sc_biguint<8>(ap_const_lv8_64));
}

void c_grav::thread_j_fu_420_p3() {
    j_fu_420_p3 = (!icmp_ln17_reg_483.read()[0].is_01())? sc_lv<31>(): ((icmp_ln17_reg_483.read()[0].to_bool())? add_ln17_reg_508.read(): ap_const_lv31_1);
}

void c_grav::thread_m_axis_video_TDATA_blk_n() {
    if (((esl_seteq<1,1,1>(icmp_ln14_reg_489.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage1.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln14_reg_489_pp0_iter1_reg.read())))) {
        m_axis_video_TDATA_blk_n = m_axis_video_TREADY_int.read();
    } else {
        m_axis_video_TDATA_blk_n = ap_const_logic_1;
    }
}

void c_grav::thread_m_axis_video_TVALID() {
    m_axis_video_TVALID = regslice_both_m_axis_video_V_data_V_U_vld_out.read();
}

void c_grav::thread_m_axis_video_TVALID_int() {
    if ((esl_seteq<1,1,1>(icmp_ln14_reg_489.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        m_axis_video_TVALID_int = ap_const_logic_1;
    } else {
        m_axis_video_TVALID_int = ap_const_logic_0;
    }
}

void c_grav::thread_nb_2_fu_373_p3() {
    nb_2_fu_373_p3 = (!icmp_ln887_fu_350_p2.read()[0].is_01())? sc_lv<32>(): ((icmp_ln887_fu_350_p2.read()[0].to_bool())? nb_fu_367_p2.read(): ap_phi_mux_nb_1_phi_fu_172_p4.read());
}

void c_grav::thread_nb_fu_367_p2() {
    nb_fu_367_p2 = (!ap_phi_mux_nb_1_phi_fu_172_p4.read().is_01() || !ap_const_lv32_1.is_01())? sc_lv<32>(): (sc_biguint<32>(ap_phi_mux_nb_1_phi_fu_172_p4.read()) + sc_biguint<32>(ap_const_lv32_1));
}

void c_grav::thread_s_axis_video_TDATA_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage1.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(icmp_ln14_reg_489.read(), ap_const_lv1_0))) {
        s_axis_video_TDATA_blk_n = s_axis_video_TVALID_int.read();
    } else {
        s_axis_video_TDATA_blk_n = ap_const_logic_1;
    }
}

void c_grav::thread_s_axis_video_TREADY() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, s_axis_video_TVALID.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, regslice_both_s_axis_video_V_data_V_U_ack_in.read()))) {
        s_axis_video_TREADY = ap_const_logic_1;
    } else {
        s_axis_video_TREADY = ap_const_logic_0;
    }
}

void c_grav::thread_s_axis_video_TREADY_int() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(icmp_ln14_reg_489.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0))) {
        s_axis_video_TREADY_int = ap_const_logic_1;
    } else {
        s_axis_video_TREADY_int = ap_const_logic_0;
    }
}

void c_grav::thread_select_ln14_1_fu_275_p3() {
    select_ln14_1_fu_275_p3 = (!icmp_ln17_fu_259_p2.read()[0].is_01())? sc_lv<31>(): ((icmp_ln17_fu_259_p2.read()[0].to_bool())? ap_phi_mux_j_0_phi_fu_208_p4.read(): ap_const_lv31_0);
}

void c_grav::thread_select_ln14_fu_311_p3() {
    select_ln14_fu_311_p3 = (!icmp_ln17_reg_483.read()[0].is_01())? sc_lv<31>(): ((icmp_ln17_reg_483.read()[0].to_bool())? ap_phi_mux_i_0_phi_fu_160_p4.read(): add_ln14_1_fu_305_p2.read());
}

void c_grav::thread_select_ln26_fu_437_p3() {
    select_ln26_fu_437_p3 = (!icmp_ln26_3_fu_432_p2.read()[0].is_01())? sc_lv<8>(): ((icmp_ln26_3_fu_432_p2.read()[0].to_bool())? tmp_data_V_1_reg_523.read(): ap_const_lv8_FF);
}

void c_grav::thread_zext_ln14_1_fu_283_p1() {
    zext_ln14_1_fu_283_p1 = esl_zext<32,31>(select_ln14_1_fu_275_p3.read());
}

void c_grav::thread_zext_ln14_fu_318_p1() {
    zext_ln14_fu_318_p1 = esl_zext<32,31>(select_ln14_fu_311_p3.read());
}

void c_grav::thread_zext_ln17_fu_255_p1() {
    zext_ln17_fu_255_p1 = esl_zext<32,31>(ap_phi_mux_j_0_phi_fu_208_p4.read());
}

void c_grav::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(icmp_ln14_fu_264_p2.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0)))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(icmp_ln14_fu_264_p2.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0))) {
                ap_NS_fsm = ap_ST_fsm_state6;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            }
            break;
        case 4 : 
            if ((esl_seteq<1,1,1>(ap_block_pp0_stage1_subdone.read(), ap_const_boolean_0) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage1_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter0.read(), ap_const_logic_0)))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage1_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter0.read(), ap_const_logic_0))) {
                ap_NS_fsm = ap_ST_fsm_state6;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            }
            break;
        case 8 : 
            ap_NS_fsm = ap_ST_fsm_state7;
            break;
        case 16 : 
            ap_NS_fsm = ap_ST_fsm_state8;
            break;
        case 32 : 
            ap_NS_fsm = ap_ST_fsm_state9;
            break;
        case 64 : 
            ap_NS_fsm = ap_ST_fsm_state10;
            break;
        case 128 : 
            ap_NS_fsm = ap_ST_fsm_state11;
            break;
        case 256 : 
            ap_NS_fsm = ap_ST_fsm_state12;
            break;
        case 512 : 
            ap_NS_fsm = ap_ST_fsm_state13;
            break;
        case 1024 : 
            ap_NS_fsm = ap_ST_fsm_state14;
            break;
        case 2048 : 
            ap_NS_fsm = ap_ST_fsm_state15;
            break;
        case 4096 : 
            ap_NS_fsm = ap_ST_fsm_state16;
            break;
        case 8192 : 
            ap_NS_fsm = ap_ST_fsm_state17;
            break;
        case 16384 : 
            ap_NS_fsm = ap_ST_fsm_state18;
            break;
        case 32768 : 
            ap_NS_fsm = ap_ST_fsm_state19;
            break;
        case 65536 : 
            ap_NS_fsm = ap_ST_fsm_state20;
            break;
        case 131072 : 
            ap_NS_fsm = ap_ST_fsm_state21;
            break;
        case 262144 : 
            ap_NS_fsm = ap_ST_fsm_state22;
            break;
        case 524288 : 
            ap_NS_fsm = ap_ST_fsm_state23;
            break;
        case 1048576 : 
            ap_NS_fsm = ap_ST_fsm_state24;
            break;
        case 2097152 : 
            ap_NS_fsm = ap_ST_fsm_state25;
            break;
        case 4194304 : 
            ap_NS_fsm = ap_ST_fsm_state26;
            break;
        case 8388608 : 
            ap_NS_fsm = ap_ST_fsm_state27;
            break;
        case 16777216 : 
            ap_NS_fsm = ap_ST_fsm_state28;
            break;
        case 33554432 : 
            ap_NS_fsm = ap_ST_fsm_state29;
            break;
        case 67108864 : 
            ap_NS_fsm = ap_ST_fsm_state30;
            break;
        case 134217728 : 
            ap_NS_fsm = ap_ST_fsm_state31;
            break;
        case 268435456 : 
            ap_NS_fsm = ap_ST_fsm_state32;
            break;
        case 536870912 : 
            ap_NS_fsm = ap_ST_fsm_state33;
            break;
        case 1073741824 : 
            ap_NS_fsm = ap_ST_fsm_state34;
            break;
        case 2147483648 : 
            ap_NS_fsm = ap_ST_fsm_state35;
            break;
        case 4294967296 : 
            ap_NS_fsm = ap_ST_fsm_state36;
            break;
        case 8589934592 : 
            ap_NS_fsm = ap_ST_fsm_state37;
            break;
        case 17179869184 : 
            ap_NS_fsm = ap_ST_fsm_state38;
            break;
        case 34359738368 : 
            ap_NS_fsm = ap_ST_fsm_state39;
            break;
        case 68719476736 : 
            ap_NS_fsm = ap_ST_fsm_state40;
            break;
        case 137438953472 : 
            ap_NS_fsm = ap_ST_fsm_state41;
            break;
        case 274877906944 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state41.read()) && esl_seteq<1,1,1>(regslice_both_m_axis_video_V_data_V_U_apdone_blk.read(), ap_const_logic_0))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state41;
            }
            break;
        default : 
            ap_NS_fsm = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            break;
    }
}

void c_grav::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"ap_rst_n\" :  \"" << ap_rst_n.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"ap_start\" :  \"" << ap_start.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"ap_done\" :  \"" << ap_done.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_idle\" :  \"" << ap_idle.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_ready\" :  \"" << ap_ready.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"cg_on_V\" :  \"" << cg_on_V.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axis_video_TDATA\" :  \"" << s_axis_video_TDATA.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axis_video_TVALID\" :  \"" << s_axis_video_TVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axis_video_TREADY\" :  \"" << s_axis_video_TREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axis_video_TKEEP\" :  \"" << s_axis_video_TKEEP.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axis_video_TSTRB\" :  \"" << s_axis_video_TSTRB.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axis_video_TUSER\" :  \"" << s_axis_video_TUSER.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axis_video_TLAST\" :  \"" << s_axis_video_TLAST.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axis_video_TID\" :  \"" << s_axis_video_TID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axis_video_TDEST\" :  \"" << s_axis_video_TDEST.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axis_video_TDATA\" :  \"" << m_axis_video_TDATA.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axis_video_TVALID\" :  \"" << m_axis_video_TVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axis_video_TREADY\" :  \"" << m_axis_video_TREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axis_video_TKEEP\" :  \"" << m_axis_video_TKEEP.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axis_video_TSTRB\" :  \"" << m_axis_video_TSTRB.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axis_video_TUSER\" :  \"" << m_axis_video_TUSER.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axis_video_TLAST\" :  \"" << m_axis_video_TLAST.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axis_video_TID\" :  \"" << m_axis_video_TID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axis_video_TDEST\" :  \"" << m_axis_video_TDEST.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"hsize_in\" :  \"" << hsize_in.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"vsize_in\" :  \"" << vsize_in.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

