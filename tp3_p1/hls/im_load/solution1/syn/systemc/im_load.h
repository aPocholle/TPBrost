// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _im_load_HH_
#define _im_load_HH_

#include "systemc.h"
#include "AESL_pkg.h"


namespace ap_rtl {

struct im_load : public sc_module {
    // Port declarations 14
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst_n;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<8> > video_TDATA;
    sc_out< sc_logic > video_TVALID;
    sc_in< sc_logic > video_TREADY;
    sc_out< sc_lv<1> > video_TUSER;
    sc_out< sc_lv<1> > video_TLAST;
    sc_out< sc_lv<19> > mem_V_address0;
    sc_out< sc_logic > mem_V_ce0;
    sc_in< sc_lv<8> > mem_V_q0;


    // Module declarations
    im_load(sc_module_name name);
    SC_HAS_PROCESS(im_load);

    ~im_load();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    regslice_both<8>* regslice_both_video_data_p_V_U;
    regslice_both<1>* regslice_both_video_user_V_U;
    regslice_both<1>* regslice_both_video_last_V_U;
    sc_signal< sc_logic > ap_rst_n_inv;
    sc_signal< sc_lv<5> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_logic > video_TDATA_blk_n;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_lv<9> > i_fu_118_p2;
    sc_signal< sc_lv<9> > i_reg_220;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_logic > regslice_both_video_data_p_V_U_apdone_blk;
    sc_signal< sc_lv<19> > zext_ln42_1_fu_132_p1;
    sc_signal< sc_lv<19> > zext_ln42_1_reg_225;
    sc_signal< sc_lv<1> > icmp_ln23_fu_112_p2;
    sc_signal< sc_lv<16> > shl_ln42_1_fu_136_p3;
    sc_signal< sc_lv<16> > shl_ln42_1_reg_230;
    sc_signal< sc_lv<10> > j_fu_154_p2;
    sc_signal< sc_lv<10> > j_reg_238;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<1> > icmp_ln29_fu_186_p2;
    sc_signal< sc_lv<1> > icmp_ln29_reg_243;
    sc_signal< sc_lv<1> > icmp_ln25_fu_148_p2;
    sc_signal< sc_lv<1> > icmp_ln34_fu_192_p2;
    sc_signal< sc_lv<1> > icmp_ln34_reg_248;
    sc_signal< sc_lv<9> > i_0_reg_89;
    sc_signal< sc_lv<10> > j_0_reg_101;
    sc_signal< sc_lv<64> > zext_ln42_fu_212_p1;
    sc_signal< sc_lv<18> > shl_ln_fu_124_p3;
    sc_signal< sc_lv<9> > trunc_ln29_fu_160_p1;
    sc_signal< sc_lv<1> > tmp_fu_170_p3;
    sc_signal< sc_lv<9> > or_ln29_fu_164_p2;
    sc_signal< sc_lv<10> > or_ln_fu_178_p3;
    sc_signal< sc_lv<16> > zext_ln25_fu_144_p1;
    sc_signal< sc_lv<16> > add_ln42_1_fu_198_p2;
    sc_signal< sc_lv<19> > zext_ln42_2_fu_203_p1;
    sc_signal< sc_lv<19> > add_ln42_fu_207_p2;
    sc_signal< sc_lv<5> > ap_NS_fsm;
    sc_signal< sc_logic > video_TVALID_int;
    sc_signal< sc_logic > video_TREADY_int;
    sc_signal< sc_logic > regslice_both_video_data_p_V_U_vld_out;
    sc_signal< sc_logic > regslice_both_video_user_V_U_apdone_blk;
    sc_signal< sc_logic > regslice_both_video_user_V_U_ack_in_dummy;
    sc_signal< sc_logic > regslice_both_video_user_V_U_vld_out;
    sc_signal< sc_logic > regslice_both_video_last_V_U_apdone_blk;
    sc_signal< sc_logic > regslice_both_video_last_V_U_ack_in_dummy;
    sc_signal< sc_logic > regslice_both_video_last_V_U_vld_out;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<5> ap_ST_fsm_state1;
    static const sc_lv<5> ap_ST_fsm_state2;
    static const sc_lv<5> ap_ST_fsm_state3;
    static const sc_lv<5> ap_ST_fsm_state4;
    static const sc_lv<5> ap_ST_fsm_state5;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<9> ap_const_lv9_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<10> ap_const_lv10_0;
    static const sc_lv<9> ap_const_lv9_1E0;
    static const sc_lv<9> ap_const_lv9_1;
    static const sc_lv<7> ap_const_lv7_0;
    static const sc_lv<10> ap_const_lv10_280;
    static const sc_lv<10> ap_const_lv10_1;
    static const sc_lv<32> ap_const_lv32_9;
    static const sc_lv<10> ap_const_lv10_27F;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_add_ln42_1_fu_198_p2();
    void thread_add_ln42_fu_207_p2();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state5();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_ap_rst_n_inv();
    void thread_i_fu_118_p2();
    void thread_icmp_ln23_fu_112_p2();
    void thread_icmp_ln25_fu_148_p2();
    void thread_icmp_ln29_fu_186_p2();
    void thread_icmp_ln34_fu_192_p2();
    void thread_j_fu_154_p2();
    void thread_mem_V_address0();
    void thread_mem_V_ce0();
    void thread_or_ln29_fu_164_p2();
    void thread_or_ln_fu_178_p3();
    void thread_shl_ln42_1_fu_136_p3();
    void thread_shl_ln_fu_124_p3();
    void thread_tmp_fu_170_p3();
    void thread_trunc_ln29_fu_160_p1();
    void thread_video_TDATA_blk_n();
    void thread_video_TVALID();
    void thread_video_TVALID_int();
    void thread_zext_ln25_fu_144_p1();
    void thread_zext_ln42_1_fu_132_p1();
    void thread_zext_ln42_2_fu_203_p1();
    void thread_zext_ln42_fu_212_p1();
    void thread_ap_NS_fsm();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
