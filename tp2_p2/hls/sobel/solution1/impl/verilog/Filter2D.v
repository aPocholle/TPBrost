// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module Filter2D (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        p_src_rows_V_read,
        p_src_cols_V_read,
        p_src_data_stream_V_dout,
        p_src_data_stream_V_empty_n,
        p_src_data_stream_V_read,
        p_dst_data_stream_V_din,
        p_dst_data_stream_V_full_n,
        p_dst_data_stream_V_write
);

parameter    ap_ST_fsm_state1 = 5'd1;
parameter    ap_ST_fsm_state2 = 5'd2;
parameter    ap_ST_fsm_state3 = 5'd4;
parameter    ap_ST_fsm_pp0_stage0 = 5'd8;
parameter    ap_ST_fsm_state9 = 5'd16;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [31:0] p_src_rows_V_read;
input  [31:0] p_src_cols_V_read;
input  [7:0] p_src_data_stream_V_dout;
input   p_src_data_stream_V_empty_n;
output   p_src_data_stream_V_read;
output  [7:0] p_dst_data_stream_V_din;
input   p_dst_data_stream_V_full_n;
output   p_dst_data_stream_V_write;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg p_src_data_stream_V_read;
reg p_dst_data_stream_V_write;

(* fsm_encoding = "none" *) reg   [4:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    p_src_data_stream_V_blk_n;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_pp0_stage0;
reg   [0:0] icmp_ln444_reg_1390;
reg   [0:0] and_ln118_reg_1399;
reg   [0:0] icmp_ln899_reg_1335;
reg   [0:0] icmp_ln887_reg_1330;
reg    p_dst_data_stream_V_blk_n;
reg    ap_enable_reg_pp0_iter4;
reg   [0:0] and_ln512_reg_1416;
reg   [0:0] and_ln512_reg_1416_pp0_iter3_reg;
reg   [31:0] t_V_2_reg_279;
wire   [31:0] add_ln443_fu_290_p2;
reg   [31:0] add_ln443_reg_1288;
wire   [31:0] add_ln443_1_fu_296_p2;
reg   [31:0] add_ln443_1_reg_1293;
wire   [31:0] add_ln506_fu_302_p2;
reg   [31:0] add_ln506_reg_1298;
wire   [31:0] add_ln458_fu_308_p2;
reg   [31:0] add_ln458_reg_1305;
wire   [31:0] add_ln147_1_fu_320_p2;
reg   [31:0] add_ln147_1_reg_1310;
wire   [31:0] add_ln147_fu_332_p2;
reg   [31:0] add_ln147_reg_1317;
wire   [31:0] i_V_fu_343_p2;
reg   [31:0] i_V_reg_1325;
wire    ap_CS_fsm_state2;
wire   [0:0] icmp_ln887_fu_349_p2;
wire   [0:0] icmp_ln443_fu_338_p2;
wire   [0:0] icmp_ln899_fu_364_p2;
wire   [0:0] icmp_ln879_fu_370_p2;
reg   [0:0] icmp_ln879_reg_1340;
wire   [0:0] icmp_ln879_1_fu_376_p2;
reg   [0:0] icmp_ln879_1_reg_1344;
wire   [0:0] icmp_ln899_1_fu_382_p2;
reg   [0:0] icmp_ln899_1_reg_1348;
wire   [31:0] select_ln118_fu_584_p3;
reg   [31:0] select_ln118_reg_1355;
wire   [31:0] select_ln118_1_fu_600_p3;
reg   [31:0] select_ln118_1_reg_1360;
wire   [31:0] select_ln118_2_fu_616_p3;
reg   [31:0] select_ln118_2_reg_1365;
wire   [0:0] xor_ln457_fu_624_p2;
reg   [0:0] xor_ln457_reg_1370;
wire    ap_CS_fsm_state3;
wire   [1:0] trunc_ln493_fu_633_p1;
reg   [1:0] trunc_ln493_reg_1375;
wire   [1:0] trunc_ln493_1_fu_641_p1;
reg   [1:0] trunc_ln493_1_reg_1380;
wire   [1:0] trunc_ln493_2_fu_649_p1;
reg   [1:0] trunc_ln493_2_reg_1385;
wire   [0:0] icmp_ln444_fu_653_p2;
wire    ap_block_state4_pp0_stage0_iter0;
reg    ap_predicate_op140_read_state5;
reg    ap_predicate_op147_read_state5;
reg    ap_block_state5_pp0_stage0_iter1;
wire    ap_block_state6_pp0_stage0_iter2;
wire    ap_block_state7_pp0_stage0_iter3;
reg    ap_block_state8_pp0_stage0_iter4;
reg    ap_block_pp0_stage0_11001;
reg   [0:0] icmp_ln444_reg_1390_pp0_iter1_reg;
reg   [0:0] icmp_ln444_reg_1390_pp0_iter2_reg;
wire   [31:0] j_V_fu_658_p2;
reg    ap_enable_reg_pp0_iter0;
wire   [0:0] and_ln118_fu_705_p2;
reg   [0:0] and_ln118_reg_1399_pp0_iter1_reg;
wire   [31:0] x_fu_769_p3;
reg   [31:0] x_reg_1403;
wire   [0:0] or_ln457_fu_777_p2;
reg   [0:0] or_ln457_reg_1409;
reg   [0:0] or_ln457_reg_1409_pp0_iter1_reg;
wire   [0:0] and_ln512_fu_782_p2;
reg   [0:0] and_ln512_reg_1416_pp0_iter1_reg;
reg   [0:0] and_ln512_reg_1416_pp0_iter2_reg;
reg   [7:0] right_border_buf_0_6_reg_1420;
wire   [1:0] trunc_ln493_3_fu_800_p1;
reg   [1:0] trunc_ln493_3_reg_1431;
reg   [9:0] k_buf_0_val_4_addr_reg_1438;
reg   [9:0] k_buf_0_val_5_addr_reg_1444;
wire   [7:0] src_kernel_win_0_va_6_fu_918_p3;
reg   [7:0] src_kernel_win_0_va_6_reg_1450;
wire   [7:0] src_kernel_win_0_va_7_fu_936_p3;
reg   [7:0] src_kernel_win_0_va_7_reg_1457;
reg   [7:0] src_kernel_win_0_va_7_reg_1457_pp0_iter3_reg;
wire   [7:0] src_kernel_win_0_va_8_fu_954_p3;
reg   [7:0] src_kernel_win_0_va_8_reg_1464;
reg   [0:0] p_Result_s_reg_1471;
wire   [7:0] add_ln703_4_fu_1086_p2;
reg   [7:0] add_ln703_4_reg_1477;
wire   [7:0] add_ln703_5_fu_1092_p2;
reg   [7:0] add_ln703_5_reg_1482;
wire   [0:0] icmp_ln785_fu_1107_p2;
reg   [0:0] icmp_ln785_reg_1487;
reg    ap_block_pp0_stage0_subdone;
reg    ap_enable_reg_pp0_iter2;
reg    ap_condition_pp0_exit_iter1_state5;
reg    ap_enable_reg_pp0_iter3;
wire   [9:0] k_buf_0_val_3_address0;
reg    k_buf_0_val_3_ce0;
reg    k_buf_0_val_3_we0;
wire   [7:0] k_buf_0_val_3_q0;
wire   [9:0] k_buf_0_val_3_address1;
reg    k_buf_0_val_3_ce1;
reg    k_buf_0_val_3_we1;
wire   [9:0] k_buf_0_val_4_address0;
reg    k_buf_0_val_4_ce0;
reg    k_buf_0_val_4_we0;
wire   [7:0] k_buf_0_val_4_q0;
wire   [9:0] k_buf_0_val_4_address1;
reg    k_buf_0_val_4_ce1;
reg    k_buf_0_val_4_we1;
wire   [9:0] k_buf_0_val_5_address0;
reg    k_buf_0_val_5_ce0;
reg    k_buf_0_val_5_we0;
wire   [7:0] k_buf_0_val_5_q0;
wire   [9:0] k_buf_0_val_5_address1;
reg    k_buf_0_val_5_ce1;
reg    k_buf_0_val_5_we1;
reg   [31:0] t_V_reg_268;
wire    ap_CS_fsm_state9;
wire   [63:0] zext_ln835_fu_794_p1;
reg   [7:0] src_kernel_win_0_va_fu_128;
reg   [7:0] src_kernel_win_0_va_1_fu_132;
reg   [7:0] src_kernel_win_0_va_2_fu_136;
reg   [7:0] src_kernel_win_0_va_3_fu_140;
reg   [7:0] src_kernel_win_0_va_4_fu_144;
reg   [7:0] src_kernel_win_0_va_5_fu_148;
reg   [7:0] right_border_buf_0_s_fu_152;
wire   [7:0] col_buf_0_val_0_0_fu_830_p3;
reg   [7:0] right_border_buf_0_1_fu_156;
reg   [7:0] right_border_buf_0_2_fu_160;
reg   [7:0] right_border_buf_0_3_fu_164;
wire   [7:0] col_buf_0_val_1_0_fu_848_p3;
reg   [7:0] right_border_buf_0_4_fu_168;
reg   [7:0] right_border_buf_0_5_fu_172;
wire   [7:0] col_buf_0_val_2_0_fu_865_p3;
reg   [7:0] ap_sig_allocacmp_right_border_buf_0_6;
reg    ap_block_pp0_stage0_01001;
wire   [31:0] shl_ln147_fu_314_p2;
wire   [31:0] shl_ln147_1_fu_326_p2;
wire   [30:0] tmp_fu_354_p4;
wire   [31:0] add_ln506_1_fu_387_p2;
wire   [0:0] tmp_1_fu_393_p3;
wire   [0:0] icmp_ln118_fu_407_p2;
wire   [0:0] xor_ln118_1_fu_401_p2;
wire   [0:0] tmp_2_fu_418_p3;
wire   [31:0] sub_ln142_fu_426_p2;
wire   [31:0] select_ln139_1_fu_432_p3;
wire   [31:0] add_ln506_2_fu_450_p2;
wire   [0:0] tmp_11_fu_456_p3;
wire   [0:0] icmp_ln118_2_fu_470_p2;
wire   [0:0] xor_ln118_2_fu_464_p2;
wire   [0:0] tmp_12_fu_481_p3;
wire   [31:0] sub_ln142_1_fu_489_p2;
wire   [31:0] select_ln139_2_fu_495_p3;
wire   [31:0] add_ln506_3_fu_513_p2;
wire   [0:0] tmp_13_fu_519_p3;
wire   [0:0] icmp_ln118_3_fu_533_p2;
wire   [0:0] xor_ln118_3_fu_527_p2;
wire   [0:0] tmp_14_fu_544_p3;
wire   [31:0] sub_ln142_2_fu_552_p2;
wire   [31:0] select_ln139_3_fu_558_p3;
wire   [0:0] icmp_ln144_1_fu_440_p2;
wire   [31:0] sub_ln147_fu_445_p2;
wire   [0:0] and_ln118_1_fu_412_p2;
wire   [31:0] select_ln144_fu_576_p3;
wire   [0:0] icmp_ln144_2_fu_503_p2;
wire   [31:0] sub_ln147_1_fu_508_p2;
wire   [0:0] and_ln118_2_fu_475_p2;
wire   [31:0] select_ln144_1_fu_592_p3;
wire   [0:0] icmp_ln144_3_fu_566_p2;
wire   [31:0] sub_ln147_2_fu_571_p2;
wire   [0:0] and_ln118_3_fu_538_p2;
wire   [31:0] select_ln144_2_fu_608_p3;
wire   [31:0] sub_ln507_fu_629_p2;
wire   [31:0] sub_ln507_1_fu_637_p2;
wire   [31:0] sub_ln507_2_fu_645_p2;
wire   [30:0] tmp_15_fu_664_p4;
wire   [31:0] ImagLoc_x_fu_680_p2;
wire   [0:0] tmp_16_fu_686_p3;
wire   [0:0] icmp_ln118_1_fu_700_p2;
wire   [0:0] xor_ln118_4_fu_694_p2;
wire   [0:0] tmp_17_fu_711_p3;
wire   [31:0] sub_ln142_3_fu_719_p2;
wire   [31:0] select_ln139_fu_725_p3;
wire   [31:0] sub_ln147_3_fu_738_p2;
wire   [0:0] xor_ln118_5_fu_751_p2;
wire   [0:0] icmp_ln144_fu_733_p2;
wire   [0:0] or_ln118_fu_757_p2;
wire   [0:0] and_ln144_fu_763_p2;
wire   [31:0] select_ln118_3_fu_743_p3;
wire   [0:0] icmp_ln891_fu_674_p2;
wire   [31:0] sub_ln458_fu_790_p2;
wire   [7:0] tmp_3_fu_819_p5;
wire   [7:0] tmp_6_fu_837_p5;
wire   [7:0] tmp_7_fu_855_p5;
wire   [7:0] tmp_8_fu_907_p5;
wire   [7:0] tmp_9_fu_925_p5;
wire   [7:0] tmp_s_fu_943_p5;
wire   [8:0] zext_ln703_fu_974_p1;
wire   [8:0] zext_ln1118_fu_970_p1;
wire   [8:0] sub_ln703_fu_977_p2;
wire   [8:0] shl_ln1_fu_987_p3;
wire   [9:0] zext_ln1118_1_fu_995_p1;
wire  signed [9:0] sub_ln1118_fu_999_p2;
wire   [8:0] shl_ln1118_1_fu_1018_p3;
wire   [8:0] zext_ln1118_2_fu_1029_p1;
wire  signed [8:0] sub_ln1118_1_fu_1033_p2;
wire  signed [10:0] sext_ln703_1_fu_1039_p1;
wire  signed [10:0] sext_ln703_fu_1005_p1;
wire   [9:0] zext_ln703_2_fu_1047_p1;
wire  signed [9:0] sext_ln1118_fu_983_p1;
wire   [9:0] add_ln703_1_fu_1056_p2;
wire   [10:0] zext_ln703_1_fu_1025_p1;
wire  signed [10:0] sext_ln703_2_fu_1062_p1;
wire   [10:0] add_ln703_fu_1050_p2;
wire   [10:0] add_ln703_2_fu_1066_p2;
wire   [10:0] p_Val2_s_fu_1072_p2;
wire   [7:0] trunc_ln703_fu_1014_p1;
wire   [7:0] sub_ln703_1_fu_1009_p2;
wire   [7:0] trunc_ln703_1_fu_1043_p1;
wire   [2:0] tmp_10_fu_1097_p4;
wire   [7:0] shl_ln703_fu_1149_p2;
wire   [7:0] add_ln703_6_fu_1154_p2;
wire   [0:0] xor_ln785_fu_1164_p2;
wire   [0:0] overflow_fu_1169_p2;
wire   [0:0] or_ln340_fu_1182_p2;
wire   [7:0] select_ln340_fu_1174_p3;
wire   [7:0] p_Val2_1_fu_1159_p2;
reg   [4:0] ap_NS_fsm;
reg    ap_block_pp0;
reg    ap_predicate_op141_store_state5;
reg    ap_enable_operation_141;
reg    ap_enable_state5_pp0_iter1_stage0;
reg    ap_predicate_op139_load_state5;
reg    ap_enable_operation_139;
reg    ap_enable_operation_164;
reg    ap_enable_state6_pp0_iter2_stage0;
reg    ap_predicate_op169_store_state6;
reg    ap_enable_operation_169;
reg    ap_predicate_op143_store_state5;
reg    ap_enable_operation_143;
reg    ap_enable_operation_137;
wire    ap_enable_operation_161;
reg    ap_predicate_op170_store_state6;
reg    ap_enable_operation_170;
reg    ap_predicate_op145_store_state5;
reg    ap_enable_operation_145;
reg    ap_enable_operation_134;
wire    ap_enable_operation_158;
reg    ap_predicate_op148_store_state5;
reg    ap_enable_operation_148;
reg    ap_idle_pp0;
wire    ap_enable_pp0;

// power-on initialization
initial begin
#0 ap_CS_fsm = 5'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
end

Filter2D_k_buf_0_bkb #(
    .DataWidth( 8 ),
    .AddressRange( 640 ),
    .AddressWidth( 10 ))
k_buf_0_val_3_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(k_buf_0_val_3_address0),
    .ce0(k_buf_0_val_3_ce0),
    .we0(k_buf_0_val_3_we0),
    .d0(p_src_data_stream_V_dout),
    .q0(k_buf_0_val_3_q0),
    .address1(k_buf_0_val_3_address1),
    .ce1(k_buf_0_val_3_ce1),
    .we1(k_buf_0_val_3_we1),
    .d1(p_src_data_stream_V_dout)
);

Filter2D_k_buf_0_bkb #(
    .DataWidth( 8 ),
    .AddressRange( 640 ),
    .AddressWidth( 10 ))
k_buf_0_val_4_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(k_buf_0_val_4_address0),
    .ce0(k_buf_0_val_4_ce0),
    .we0(k_buf_0_val_4_we0),
    .d0(p_src_data_stream_V_dout),
    .q0(k_buf_0_val_4_q0),
    .address1(k_buf_0_val_4_address1),
    .ce1(k_buf_0_val_4_ce1),
    .we1(k_buf_0_val_4_we1),
    .d1(k_buf_0_val_3_q0)
);

Filter2D_k_buf_0_bkb #(
    .DataWidth( 8 ),
    .AddressRange( 640 ),
    .AddressWidth( 10 ))
k_buf_0_val_5_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(k_buf_0_val_5_address0),
    .ce0(k_buf_0_val_5_ce0),
    .we0(k_buf_0_val_5_we0),
    .d0(p_src_data_stream_V_dout),
    .q0(k_buf_0_val_5_q0),
    .address1(k_buf_0_val_5_address1),
    .ce1(k_buf_0_val_5_ce1),
    .we1(k_buf_0_val_5_we1),
    .d1(k_buf_0_val_4_q0)
);

sobel_mux_32_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
sobel_mux_32_8_1_1_U20(
    .din0(right_border_buf_0_s_fu_152),
    .din1(right_border_buf_0_1_fu_156),
    .din2(8'd0),
    .din3(trunc_ln493_3_reg_1431),
    .dout(tmp_3_fu_819_p5)
);

sobel_mux_32_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
sobel_mux_32_8_1_1_U21(
    .din0(right_border_buf_0_3_fu_164),
    .din1(right_border_buf_0_4_fu_168),
    .din2(8'd0),
    .din3(trunc_ln493_3_reg_1431),
    .dout(tmp_6_fu_837_p5)
);

sobel_mux_32_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
sobel_mux_32_8_1_1_U22(
    .din0(right_border_buf_0_6_reg_1420),
    .din1(right_border_buf_0_2_fu_160),
    .din2(8'd0),
    .din3(trunc_ln493_3_reg_1431),
    .dout(tmp_7_fu_855_p5)
);

sobel_mux_32_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
sobel_mux_32_8_1_1_U23(
    .din0(col_buf_0_val_0_0_fu_830_p3),
    .din1(col_buf_0_val_1_0_fu_848_p3),
    .din2(col_buf_0_val_2_0_fu_865_p3),
    .din3(trunc_ln493_reg_1375),
    .dout(tmp_8_fu_907_p5)
);

sobel_mux_32_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
sobel_mux_32_8_1_1_U24(
    .din0(col_buf_0_val_0_0_fu_830_p3),
    .din1(col_buf_0_val_1_0_fu_848_p3),
    .din2(col_buf_0_val_2_0_fu_865_p3),
    .din3(trunc_ln493_1_reg_1380),
    .dout(tmp_9_fu_925_p5)
);

sobel_mux_32_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
sobel_mux_32_8_1_1_U25(
    .din0(col_buf_0_val_0_0_fu_830_p3),
    .din1(col_buf_0_val_1_0_fu_848_p3),
    .din2(col_buf_0_val_2_0_fu_865_p3),
    .din3(trunc_ln493_2_reg_1385),
    .dout(tmp_s_fu_943_p5)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((icmp_ln444_fu_653_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state3)) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp0_exit_iter1_state5)) begin
                ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter0;
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end else if ((1'b1 == ap_CS_fsm_state3)) begin
            ap_enable_reg_pp0_iter4 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln444_fu_653_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        t_V_2_reg_279 <= j_V_fu_658_p2;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        t_V_2_reg_279 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        t_V_reg_268 <= i_V_reg_1325;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        t_V_reg_268 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        add_ln147_1_reg_1310[31 : 1] <= add_ln147_1_fu_320_p2[31 : 1];
        add_ln147_reg_1317[31 : 1] <= add_ln147_fu_332_p2[31 : 1];
        add_ln443_1_reg_1293 <= add_ln443_1_fu_296_p2;
        add_ln443_reg_1288 <= add_ln443_fu_290_p2;
        add_ln458_reg_1305 <= add_ln458_fu_308_p2;
        add_ln506_reg_1298 <= add_ln506_fu_302_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'd1 == and_ln512_reg_1416_pp0_iter2_reg) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        add_ln703_4_reg_1477 <= add_ln703_4_fu_1086_p2;
        add_ln703_5_reg_1482 <= add_ln703_5_fu_1092_p2;
        icmp_ln785_reg_1487 <= icmp_ln785_fu_1107_p2;
        p_Result_s_reg_1471 <= p_Val2_s_fu_1072_p2[32'd10];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln444_fu_653_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        and_ln118_reg_1399 <= and_ln118_fu_705_p2;
        and_ln512_reg_1416 <= and_ln512_fu_782_p2;
        or_ln457_reg_1409 <= or_ln457_fu_777_p2;
        x_reg_1403 <= x_fu_769_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        and_ln118_reg_1399_pp0_iter1_reg <= and_ln118_reg_1399;
        and_ln512_reg_1416_pp0_iter1_reg <= and_ln512_reg_1416;
        icmp_ln444_reg_1390 <= icmp_ln444_fu_653_p2;
        icmp_ln444_reg_1390_pp0_iter1_reg <= icmp_ln444_reg_1390;
        or_ln457_reg_1409_pp0_iter1_reg <= or_ln457_reg_1409;
        right_border_buf_0_6_reg_1420 <= ap_sig_allocacmp_right_border_buf_0_6;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        and_ln512_reg_1416_pp0_iter2_reg <= and_ln512_reg_1416_pp0_iter1_reg;
        and_ln512_reg_1416_pp0_iter3_reg <= and_ln512_reg_1416_pp0_iter2_reg;
        icmp_ln444_reg_1390_pp0_iter2_reg <= icmp_ln444_reg_1390_pp0_iter1_reg;
        src_kernel_win_0_va_6_reg_1450 <= src_kernel_win_0_va_6_fu_918_p3;
        src_kernel_win_0_va_7_reg_1457 <= src_kernel_win_0_va_7_fu_936_p3;
        src_kernel_win_0_va_7_reg_1457_pp0_iter3_reg <= src_kernel_win_0_va_7_reg_1457;
        src_kernel_win_0_va_8_reg_1464 <= src_kernel_win_0_va_8_fu_954_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        i_V_reg_1325 <= i_V_fu_343_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln443_fu_338_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        icmp_ln879_1_reg_1344 <= icmp_ln879_1_fu_376_p2;
        icmp_ln879_reg_1340 <= icmp_ln879_fu_370_p2;
        icmp_ln887_reg_1330 <= icmp_ln887_fu_349_p2;
        icmp_ln899_1_reg_1348 <= icmp_ln899_1_fu_382_p2;
        icmp_ln899_reg_1335 <= icmp_ln899_fu_364_p2;
        select_ln118_1_reg_1360 <= select_ln118_1_fu_600_p3;
        select_ln118_2_reg_1365 <= select_ln118_2_fu_616_p3;
        select_ln118_reg_1355 <= select_ln118_fu_584_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln444_reg_1390 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        k_buf_0_val_4_addr_reg_1438 <= zext_ln835_fu_794_p1;
        k_buf_0_val_5_addr_reg_1444 <= zext_ln835_fu_794_p1;
        trunc_ln493_3_reg_1431 <= trunc_ln493_3_fu_800_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln887_reg_1330 == 1'd1) & (icmp_ln899_reg_1335 == 1'd1) & (1'd1 == and_ln118_reg_1399_pp0_iter1_reg) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        right_border_buf_0_1_fu_156 <= right_border_buf_0_s_fu_152;
        right_border_buf_0_2_fu_160 <= right_border_buf_0_6_reg_1420;
        right_border_buf_0_3_fu_164 <= col_buf_0_val_1_0_fu_848_p3;
        right_border_buf_0_4_fu_168 <= right_border_buf_0_3_fu_164;
        right_border_buf_0_5_fu_172 <= col_buf_0_val_2_0_fu_865_p3;
        right_border_buf_0_s_fu_152 <= col_buf_0_val_0_0_fu_830_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln444_reg_1390_pp0_iter2_reg == 1'd0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        src_kernel_win_0_va_1_fu_132 <= src_kernel_win_0_va_fu_128;
        src_kernel_win_0_va_2_fu_136 <= src_kernel_win_0_va_7_reg_1457;
        src_kernel_win_0_va_3_fu_140 <= src_kernel_win_0_va_2_fu_136;
        src_kernel_win_0_va_4_fu_144 <= src_kernel_win_0_va_8_reg_1464;
        src_kernel_win_0_va_5_fu_148 <= src_kernel_win_0_va_4_fu_144;
        src_kernel_win_0_va_fu_128 <= src_kernel_win_0_va_6_reg_1450;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln899_1_reg_1348 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        trunc_ln493_1_reg_1380 <= trunc_ln493_1_fu_641_p1;
        trunc_ln493_2_reg_1385 <= trunc_ln493_2_fu_649_p1;
        trunc_ln493_reg_1375 <= trunc_ln493_fu_633_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        xor_ln457_reg_1370 <= xor_ln457_fu_624_p2;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_condition_pp0_exit_iter1_state5 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter1_state5 = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) | ((icmp_ln443_fu_338_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln443_fu_338_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln887_reg_1330 == 1'd1) & (icmp_ln899_reg_1335 == 1'd1) & (1'd1 == and_ln118_reg_1399_pp0_iter1_reg) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        ap_sig_allocacmp_right_border_buf_0_6 = col_buf_0_val_2_0_fu_865_p3;
    end else begin
        ap_sig_allocacmp_right_border_buf_0_6 = right_border_buf_0_5_fu_172;
    end
end

always @ (*) begin
    if (((icmp_ln444_reg_1390 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        k_buf_0_val_3_ce0 = 1'b1;
    end else begin
        k_buf_0_val_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        k_buf_0_val_3_ce1 = 1'b1;
    end else begin
        k_buf_0_val_3_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln879_reg_1340 == 1'd1) & (1'd1 == and_ln118_reg_1399) & (icmp_ln899_reg_1335 == 1'd0) & (icmp_ln444_reg_1390 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        k_buf_0_val_3_we0 = 1'b1;
    end else begin
        k_buf_0_val_3_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln887_reg_1330 == 1'd1) & (icmp_ln899_reg_1335 == 1'd1) & (1'd1 == and_ln118_reg_1399) & (icmp_ln444_reg_1390 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        k_buf_0_val_3_we1 = 1'b1;
    end else begin
        k_buf_0_val_3_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln444_reg_1390 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        k_buf_0_val_4_ce0 = 1'b1;
    end else begin
        k_buf_0_val_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        k_buf_0_val_4_ce1 = 1'b1;
    end else begin
        k_buf_0_val_4_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln879_1_reg_1344 == 1'd1) & (1'd1 == and_ln118_reg_1399) & (icmp_ln899_reg_1335 == 1'd0) & (icmp_ln444_reg_1390 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        k_buf_0_val_4_we0 = 1'b1;
    end else begin
        k_buf_0_val_4_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln887_reg_1330 == 1'd1) & (icmp_ln899_reg_1335 == 1'd1) & (1'd1 == and_ln118_reg_1399_pp0_iter1_reg) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        k_buf_0_val_4_we1 = 1'b1;
    end else begin
        k_buf_0_val_4_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln879_reg_1340 == 1'd1) & (1'd1 == and_ln118_reg_1399) & (icmp_ln899_reg_1335 == 1'd0) & (icmp_ln444_reg_1390 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((or_ln457_reg_1409 == 1'd1) & (icmp_ln444_reg_1390 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        k_buf_0_val_5_ce0 = 1'b1;
    end else begin
        k_buf_0_val_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        k_buf_0_val_5_ce1 = 1'b1;
    end else begin
        k_buf_0_val_5_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln879_reg_1340 == 1'd1) & (1'd1 == and_ln118_reg_1399) & (icmp_ln899_reg_1335 == 1'd0) & (icmp_ln444_reg_1390 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        k_buf_0_val_5_we0 = 1'b1;
    end else begin
        k_buf_0_val_5_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln887_reg_1330 == 1'd1) & (icmp_ln899_reg_1335 == 1'd1) & (1'd1 == and_ln118_reg_1399_pp0_iter1_reg) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        k_buf_0_val_5_we1 = 1'b1;
    end else begin
        k_buf_0_val_5_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'd1 == and_ln512_reg_1416_pp0_iter3_reg) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        p_dst_data_stream_V_blk_n = p_dst_data_stream_V_full_n;
    end else begin
        p_dst_data_stream_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'd1 == and_ln512_reg_1416_pp0_iter3_reg) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        p_dst_data_stream_V_write = 1'b1;
    end else begin
        p_dst_data_stream_V_write = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln887_reg_1330 == 1'd1) & (icmp_ln899_reg_1335 == 1'd1) & (1'd1 == and_ln118_reg_1399) & (icmp_ln444_reg_1390 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'd1 == and_ln118_reg_1399) & (icmp_ln899_reg_1335 == 1'd0) & (icmp_ln444_reg_1390 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        p_src_data_stream_V_blk_n = p_src_data_stream_V_empty_n;
    end else begin
        p_src_data_stream_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_predicate_op147_read_state5 == 1'b1)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_predicate_op140_read_state5 == 1'b1)))) begin
        p_src_data_stream_V_read = 1'b1;
    end else begin
        p_src_data_stream_V_read = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((icmp_ln443_fu_338_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_enable_reg_pp0_iter2 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b0)) & ~((ap_enable_reg_pp0_iter3 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter4 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((((ap_enable_reg_pp0_iter3 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter4 == 1'b1)) | ((ap_enable_reg_pp0_iter2 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state2;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ImagLoc_x_fu_680_p2 = ($signed(32'd4294967295) + $signed(t_V_2_reg_279));

assign add_ln147_1_fu_320_p2 = (32'd2 + shl_ln147_fu_314_p2);

assign add_ln147_fu_332_p2 = ($signed(32'd4294967294) + $signed(shl_ln147_1_fu_326_p2));

assign add_ln443_1_fu_296_p2 = (32'd2 + p_src_rows_V_read);

assign add_ln443_fu_290_p2 = (32'd2 + p_src_cols_V_read);

assign add_ln458_fu_308_p2 = (32'd3 + p_src_cols_V_read);

assign add_ln506_1_fu_387_p2 = ($signed(32'd4294967295) + $signed(t_V_reg_268));

assign add_ln506_2_fu_450_p2 = ($signed(32'd4294967294) + $signed(t_V_reg_268));

assign add_ln506_3_fu_513_p2 = ($signed(32'd4294967293) + $signed(t_V_reg_268));

assign add_ln506_fu_302_p2 = ($signed(32'd4294967295) + $signed(p_src_rows_V_read));

assign add_ln703_1_fu_1056_p2 = ($signed(zext_ln703_2_fu_1047_p1) + $signed(sext_ln1118_fu_983_p1));

assign add_ln703_2_fu_1066_p2 = ($signed(zext_ln703_1_fu_1025_p1) + $signed(sext_ln703_2_fu_1062_p1));

assign add_ln703_4_fu_1086_p2 = (trunc_ln703_fu_1014_p1 + sub_ln703_1_fu_1009_p2);

assign add_ln703_5_fu_1092_p2 = (src_kernel_win_0_va_6_reg_1450 + trunc_ln703_1_fu_1043_p1);

assign add_ln703_6_fu_1154_p2 = (shl_ln703_fu_1149_p2 + add_ln703_5_reg_1482);

assign add_ln703_fu_1050_p2 = ($signed(sext_ln703_1_fu_1039_p1) + $signed(sext_ln703_fu_1005_p1));

assign and_ln118_1_fu_412_p2 = (xor_ln118_1_fu_401_p2 & icmp_ln118_fu_407_p2);

assign and_ln118_2_fu_475_p2 = (xor_ln118_2_fu_464_p2 & icmp_ln118_2_fu_470_p2);

assign and_ln118_3_fu_538_p2 = (xor_ln118_3_fu_527_p2 & icmp_ln118_3_fu_533_p2);

assign and_ln118_fu_705_p2 = (xor_ln118_4_fu_694_p2 & icmp_ln118_1_fu_700_p2);

assign and_ln144_fu_763_p2 = (or_ln118_fu_757_p2 & icmp_ln144_fu_733_p2);

assign and_ln512_fu_782_p2 = (icmp_ln899_reg_1335 & icmp_ln891_fu_674_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd4];

always @ (*) begin
    ap_block_pp0 = ((ap_ST_fsm_pp0_stage0 == ap_CS_fsm) & (1'b1 == ap_block_pp0_stage0_subdone));
end

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = (((1'd1 == and_ln512_reg_1416_pp0_iter3_reg) & (p_dst_data_stream_V_full_n == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b1)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (((p_src_data_stream_V_empty_n == 1'b0) & (ap_predicate_op147_read_state5 == 1'b1)) | ((p_src_data_stream_V_empty_n == 1'b0) & (ap_predicate_op140_read_state5 == 1'b1)))));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((1'd1 == and_ln512_reg_1416_pp0_iter3_reg) & (p_dst_data_stream_V_full_n == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b1)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (((p_src_data_stream_V_empty_n == 1'b0) & (ap_predicate_op147_read_state5 == 1'b1)) | ((p_src_data_stream_V_empty_n == 1'b0) & (ap_predicate_op140_read_state5 == 1'b1)))));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = (((1'd1 == and_ln512_reg_1416_pp0_iter3_reg) & (p_dst_data_stream_V_full_n == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b1)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (((p_src_data_stream_V_empty_n == 1'b0) & (ap_predicate_op147_read_state5 == 1'b1)) | ((p_src_data_stream_V_empty_n == 1'b0) & (ap_predicate_op140_read_state5 == 1'b1)))));
end

assign ap_block_state4_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state5_pp0_stage0_iter1 = (((p_src_data_stream_V_empty_n == 1'b0) & (ap_predicate_op147_read_state5 == 1'b1)) | ((p_src_data_stream_V_empty_n == 1'b0) & (ap_predicate_op140_read_state5 == 1'b1)));
end

assign ap_block_state6_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state8_pp0_stage0_iter4 = ((1'd1 == and_ln512_reg_1416_pp0_iter3_reg) & (p_dst_data_stream_V_full_n == 1'b0));
end

always @ (*) begin
    ap_enable_operation_134 = (icmp_ln444_reg_1390 == 1'd0);
end

always @ (*) begin
    ap_enable_operation_137 = (icmp_ln444_reg_1390 == 1'd0);
end

always @ (*) begin
    ap_enable_operation_139 = (ap_predicate_op139_load_state5 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_141 = (ap_predicate_op141_store_state5 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_143 = (ap_predicate_op143_store_state5 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_145 = (ap_predicate_op145_store_state5 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_148 = (ap_predicate_op148_store_state5 == 1'b1);
end

assign ap_enable_operation_158 = (1'b1 == 1'b1);

assign ap_enable_operation_161 = (1'b1 == 1'b1);

always @ (*) begin
    ap_enable_operation_164 = (or_ln457_reg_1409_pp0_iter1_reg == 1'd1);
end

always @ (*) begin
    ap_enable_operation_169 = (ap_predicate_op169_store_state6 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_170 = (ap_predicate_op170_store_state6 == 1'b1);
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

always @ (*) begin
    ap_enable_state5_pp0_iter1_stage0 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

always @ (*) begin
    ap_enable_state6_pp0_iter2_stage0 = ((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1));
end

always @ (*) begin
    ap_predicate_op139_load_state5 = ((or_ln457_reg_1409 == 1'd1) & (icmp_ln444_reg_1390 == 1'd0));
end

always @ (*) begin
    ap_predicate_op140_read_state5 = ((1'd1 == and_ln118_reg_1399) & (icmp_ln899_reg_1335 == 1'd0) & (icmp_ln444_reg_1390 == 1'd0));
end

always @ (*) begin
    ap_predicate_op141_store_state5 = ((icmp_ln879_reg_1340 == 1'd1) & (1'd1 == and_ln118_reg_1399) & (icmp_ln899_reg_1335 == 1'd0) & (icmp_ln444_reg_1390 == 1'd0));
end

always @ (*) begin
    ap_predicate_op143_store_state5 = ((icmp_ln879_1_reg_1344 == 1'd1) & (1'd1 == and_ln118_reg_1399) & (icmp_ln899_reg_1335 == 1'd0) & (icmp_ln444_reg_1390 == 1'd0));
end

always @ (*) begin
    ap_predicate_op145_store_state5 = ((icmp_ln879_reg_1340 == 1'd1) & (1'd1 == and_ln118_reg_1399) & (icmp_ln899_reg_1335 == 1'd0) & (icmp_ln444_reg_1390 == 1'd0));
end

always @ (*) begin
    ap_predicate_op147_read_state5 = ((icmp_ln887_reg_1330 == 1'd1) & (icmp_ln899_reg_1335 == 1'd1) & (1'd1 == and_ln118_reg_1399) & (icmp_ln444_reg_1390 == 1'd0));
end

always @ (*) begin
    ap_predicate_op148_store_state5 = ((icmp_ln887_reg_1330 == 1'd1) & (icmp_ln899_reg_1335 == 1'd1) & (1'd1 == and_ln118_reg_1399) & (icmp_ln444_reg_1390 == 1'd0));
end

always @ (*) begin
    ap_predicate_op169_store_state6 = ((icmp_ln887_reg_1330 == 1'd1) & (icmp_ln899_reg_1335 == 1'd1) & (1'd1 == and_ln118_reg_1399_pp0_iter1_reg));
end

always @ (*) begin
    ap_predicate_op170_store_state6 = ((icmp_ln887_reg_1330 == 1'd1) & (icmp_ln899_reg_1335 == 1'd1) & (1'd1 == and_ln118_reg_1399_pp0_iter1_reg));
end

assign col_buf_0_val_0_0_fu_830_p3 = ((or_ln457_reg_1409_pp0_iter1_reg[0:0] === 1'b1) ? k_buf_0_val_3_q0 : tmp_3_fu_819_p5);

assign col_buf_0_val_1_0_fu_848_p3 = ((or_ln457_reg_1409_pp0_iter1_reg[0:0] === 1'b1) ? k_buf_0_val_4_q0 : tmp_6_fu_837_p5);

assign col_buf_0_val_2_0_fu_865_p3 = ((or_ln457_reg_1409_pp0_iter1_reg[0:0] === 1'b1) ? k_buf_0_val_5_q0 : tmp_7_fu_855_p5);

assign i_V_fu_343_p2 = (t_V_reg_268 + 32'd1);

assign icmp_ln118_1_fu_700_p2 = (($signed(ImagLoc_x_fu_680_p2) < $signed(p_src_cols_V_read)) ? 1'b1 : 1'b0);

assign icmp_ln118_2_fu_470_p2 = (($signed(add_ln506_2_fu_450_p2) < $signed(p_src_rows_V_read)) ? 1'b1 : 1'b0);

assign icmp_ln118_3_fu_533_p2 = (($signed(add_ln506_3_fu_513_p2) < $signed(p_src_rows_V_read)) ? 1'b1 : 1'b0);

assign icmp_ln118_fu_407_p2 = (($signed(add_ln506_1_fu_387_p2) < $signed(p_src_rows_V_read)) ? 1'b1 : 1'b0);

assign icmp_ln144_1_fu_440_p2 = (($signed(select_ln139_1_fu_432_p3) < $signed(p_src_rows_V_read)) ? 1'b1 : 1'b0);

assign icmp_ln144_2_fu_503_p2 = (($signed(select_ln139_2_fu_495_p3) < $signed(p_src_rows_V_read)) ? 1'b1 : 1'b0);

assign icmp_ln144_3_fu_566_p2 = (($signed(select_ln139_3_fu_558_p3) < $signed(p_src_rows_V_read)) ? 1'b1 : 1'b0);

assign icmp_ln144_fu_733_p2 = (($signed(select_ln139_fu_725_p3) < $signed(p_src_cols_V_read)) ? 1'b1 : 1'b0);

assign icmp_ln443_fu_338_p2 = ((t_V_reg_268 == add_ln443_1_reg_1293) ? 1'b1 : 1'b0);

assign icmp_ln444_fu_653_p2 = ((t_V_2_reg_279 == add_ln443_reg_1288) ? 1'b1 : 1'b0);

assign icmp_ln785_fu_1107_p2 = ((tmp_10_fu_1097_p4 != 3'd0) ? 1'b1 : 1'b0);

assign icmp_ln879_1_fu_376_p2 = ((t_V_reg_268 == 32'd0) ? 1'b1 : 1'b0);

assign icmp_ln879_fu_370_p2 = ((t_V_reg_268 == 32'd1) ? 1'b1 : 1'b0);

assign icmp_ln887_fu_349_p2 = ((t_V_reg_268 < p_src_rows_V_read) ? 1'b1 : 1'b0);

assign icmp_ln891_fu_674_p2 = ((tmp_15_fu_664_p4 != 31'd0) ? 1'b1 : 1'b0);

assign icmp_ln899_1_fu_382_p2 = ((t_V_reg_268 > p_src_rows_V_read) ? 1'b1 : 1'b0);

assign icmp_ln899_fu_364_p2 = ((tmp_fu_354_p4 != 31'd0) ? 1'b1 : 1'b0);

assign j_V_fu_658_p2 = (t_V_2_reg_279 + 32'd1);

assign k_buf_0_val_3_address0 = zext_ln835_fu_794_p1;

assign k_buf_0_val_3_address1 = zext_ln835_fu_794_p1;

assign k_buf_0_val_4_address0 = zext_ln835_fu_794_p1;

assign k_buf_0_val_4_address1 = k_buf_0_val_4_addr_reg_1438;

assign k_buf_0_val_5_address0 = zext_ln835_fu_794_p1;

assign k_buf_0_val_5_address1 = k_buf_0_val_5_addr_reg_1444;

assign or_ln118_fu_757_p2 = (xor_ln118_5_fu_751_p2 | tmp_16_fu_686_p3);

assign or_ln340_fu_1182_p2 = (p_Result_s_reg_1471 | overflow_fu_1169_p2);

assign or_ln457_fu_777_p2 = (xor_ln457_reg_1370 | icmp_ln118_1_fu_700_p2);

assign overflow_fu_1169_p2 = (xor_ln785_fu_1164_p2 & icmp_ln785_reg_1487);

assign p_Val2_1_fu_1159_p2 = (add_ln703_4_reg_1477 + add_ln703_6_fu_1154_p2);

assign p_Val2_s_fu_1072_p2 = (add_ln703_fu_1050_p2 + add_ln703_2_fu_1066_p2);

assign p_dst_data_stream_V_din = ((or_ln340_fu_1182_p2[0:0] === 1'b1) ? select_ln340_fu_1174_p3 : p_Val2_1_fu_1159_p2);

assign select_ln118_1_fu_600_p3 = ((and_ln118_2_fu_475_p2[0:0] === 1'b1) ? add_ln506_2_fu_450_p2 : select_ln144_1_fu_592_p3);

assign select_ln118_2_fu_616_p3 = ((and_ln118_3_fu_538_p2[0:0] === 1'b1) ? add_ln506_3_fu_513_p2 : select_ln144_2_fu_608_p3);

assign select_ln118_3_fu_743_p3 = ((and_ln118_fu_705_p2[0:0] === 1'b1) ? ImagLoc_x_fu_680_p2 : sub_ln147_3_fu_738_p2);

assign select_ln118_fu_584_p3 = ((and_ln118_1_fu_412_p2[0:0] === 1'b1) ? add_ln506_1_fu_387_p2 : select_ln144_fu_576_p3);

assign select_ln139_1_fu_432_p3 = ((tmp_2_fu_418_p3[0:0] === 1'b1) ? sub_ln142_fu_426_p2 : add_ln506_1_fu_387_p2);

assign select_ln139_2_fu_495_p3 = ((tmp_12_fu_481_p3[0:0] === 1'b1) ? sub_ln142_1_fu_489_p2 : add_ln506_2_fu_450_p2);

assign select_ln139_3_fu_558_p3 = ((tmp_14_fu_544_p3[0:0] === 1'b1) ? sub_ln142_2_fu_552_p2 : add_ln506_3_fu_513_p2);

assign select_ln139_fu_725_p3 = ((tmp_17_fu_711_p3[0:0] === 1'b1) ? sub_ln142_3_fu_719_p2 : ImagLoc_x_fu_680_p2);

assign select_ln144_1_fu_592_p3 = ((icmp_ln144_2_fu_503_p2[0:0] === 1'b1) ? select_ln139_2_fu_495_p3 : sub_ln147_1_fu_508_p2);

assign select_ln144_2_fu_608_p3 = ((icmp_ln144_3_fu_566_p2[0:0] === 1'b1) ? select_ln139_3_fu_558_p3 : sub_ln147_2_fu_571_p2);

assign select_ln144_fu_576_p3 = ((icmp_ln144_1_fu_440_p2[0:0] === 1'b1) ? select_ln139_1_fu_432_p3 : sub_ln147_fu_445_p2);

assign select_ln340_fu_1174_p3 = ((xor_ln785_fu_1164_p2[0:0] === 1'b1) ? 8'd255 : 8'd0);

assign sext_ln1118_fu_983_p1 = $signed(sub_ln703_fu_977_p2);

assign sext_ln703_1_fu_1039_p1 = sub_ln1118_1_fu_1033_p2;

assign sext_ln703_2_fu_1062_p1 = $signed(add_ln703_1_fu_1056_p2);

assign sext_ln703_fu_1005_p1 = sub_ln1118_fu_999_p2;

assign shl_ln1118_1_fu_1018_p3 = {{src_kernel_win_0_va_7_reg_1457}, {1'd0}};

assign shl_ln147_1_fu_326_p2 = p_src_cols_V_read << 32'd1;

assign shl_ln147_fu_314_p2 = p_src_rows_V_read << 32'd1;

assign shl_ln1_fu_987_p3 = {{src_kernel_win_0_va_3_fu_140}, {1'd0}};

assign shl_ln703_fu_1149_p2 = src_kernel_win_0_va_7_reg_1457_pp0_iter3_reg << 8'd1;

assign src_kernel_win_0_va_6_fu_918_p3 = ((icmp_ln899_1_reg_1348[0:0] === 1'b1) ? tmp_8_fu_907_p5 : col_buf_0_val_0_0_fu_830_p3);

assign src_kernel_win_0_va_7_fu_936_p3 = ((icmp_ln899_1_reg_1348[0:0] === 1'b1) ? tmp_9_fu_925_p5 : col_buf_0_val_1_0_fu_848_p3);

assign src_kernel_win_0_va_8_fu_954_p3 = ((icmp_ln899_1_reg_1348[0:0] === 1'b1) ? tmp_s_fu_943_p5 : col_buf_0_val_2_0_fu_865_p3);

assign sub_ln1118_1_fu_1033_p2 = (9'd0 - zext_ln1118_2_fu_1029_p1);

assign sub_ln1118_fu_999_p2 = (10'd0 - zext_ln1118_1_fu_995_p1);

assign sub_ln142_1_fu_489_p2 = (32'd2 - t_V_reg_268);

assign sub_ln142_2_fu_552_p2 = (32'd3 - t_V_reg_268);

assign sub_ln142_3_fu_719_p2 = (32'd1 - t_V_2_reg_279);

assign sub_ln142_fu_426_p2 = (32'd1 - t_V_reg_268);

assign sub_ln147_1_fu_508_p2 = (add_ln147_1_reg_1310 - select_ln139_2_fu_495_p3);

assign sub_ln147_2_fu_571_p2 = (add_ln147_1_reg_1310 - select_ln139_3_fu_558_p3);

assign sub_ln147_3_fu_738_p2 = (add_ln147_reg_1317 - select_ln139_fu_725_p3);

assign sub_ln147_fu_445_p2 = (add_ln147_1_reg_1310 - select_ln139_1_fu_432_p3);

assign sub_ln458_fu_790_p2 = (add_ln458_reg_1305 - x_reg_1403);

assign sub_ln507_1_fu_637_p2 = (add_ln506_reg_1298 - select_ln118_1_reg_1360);

assign sub_ln507_2_fu_645_p2 = (add_ln506_reg_1298 - select_ln118_2_reg_1365);

assign sub_ln507_fu_629_p2 = (add_ln506_reg_1298 - select_ln118_reg_1355);

assign sub_ln703_1_fu_1009_p2 = (src_kernel_win_0_va_8_reg_1464 - src_kernel_win_0_va_5_fu_148);

assign sub_ln703_fu_977_p2 = (zext_ln703_fu_974_p1 - zext_ln1118_fu_970_p1);

assign tmp_10_fu_1097_p4 = {{p_Val2_s_fu_1072_p2[10:8]}};

assign tmp_11_fu_456_p3 = add_ln506_2_fu_450_p2[32'd31];

assign tmp_12_fu_481_p3 = add_ln506_2_fu_450_p2[32'd31];

assign tmp_13_fu_519_p3 = add_ln506_3_fu_513_p2[32'd31];

assign tmp_14_fu_544_p3 = add_ln506_3_fu_513_p2[32'd31];

assign tmp_15_fu_664_p4 = {{t_V_2_reg_279[31:1]}};

assign tmp_16_fu_686_p3 = ImagLoc_x_fu_680_p2[32'd31];

assign tmp_17_fu_711_p3 = ImagLoc_x_fu_680_p2[32'd31];

assign tmp_1_fu_393_p3 = add_ln506_1_fu_387_p2[32'd31];

assign tmp_2_fu_418_p3 = add_ln506_1_fu_387_p2[32'd31];

assign tmp_fu_354_p4 = {{t_V_reg_268[31:1]}};

assign trunc_ln493_1_fu_641_p1 = sub_ln507_1_fu_637_p2[1:0];

assign trunc_ln493_2_fu_649_p1 = sub_ln507_2_fu_645_p2[1:0];

assign trunc_ln493_3_fu_800_p1 = sub_ln458_fu_790_p2[1:0];

assign trunc_ln493_fu_633_p1 = sub_ln507_fu_629_p2[1:0];

assign trunc_ln703_1_fu_1043_p1 = sub_ln1118_1_fu_1033_p2[7:0];

assign trunc_ln703_fu_1014_p1 = sub_ln1118_fu_999_p2[7:0];

assign x_fu_769_p3 = ((and_ln144_fu_763_p2[0:0] === 1'b1) ? select_ln139_fu_725_p3 : select_ln118_3_fu_743_p3);

assign xor_ln118_1_fu_401_p2 = (tmp_1_fu_393_p3 ^ 1'd1);

assign xor_ln118_2_fu_464_p2 = (tmp_11_fu_456_p3 ^ 1'd1);

assign xor_ln118_3_fu_527_p2 = (tmp_13_fu_519_p3 ^ 1'd1);

assign xor_ln118_4_fu_694_p2 = (tmp_16_fu_686_p3 ^ 1'd1);

assign xor_ln118_5_fu_751_p2 = (icmp_ln118_1_fu_700_p2 ^ 1'd1);

assign xor_ln457_fu_624_p2 = (icmp_ln887_reg_1330 ^ 1'd1);

assign xor_ln785_fu_1164_p2 = (p_Result_s_reg_1471 ^ 1'd1);

assign zext_ln1118_1_fu_995_p1 = shl_ln1_fu_987_p3;

assign zext_ln1118_2_fu_1029_p1 = src_kernel_win_0_va_1_fu_132;

assign zext_ln1118_fu_970_p1 = src_kernel_win_0_va_5_fu_148;

assign zext_ln703_1_fu_1025_p1 = shl_ln1118_1_fu_1018_p3;

assign zext_ln703_2_fu_1047_p1 = src_kernel_win_0_va_6_reg_1450;

assign zext_ln703_fu_974_p1 = src_kernel_win_0_va_8_reg_1464;

assign zext_ln835_fu_794_p1 = x_reg_1403;

always @ (posedge ap_clk) begin
    add_ln147_1_reg_1310[0] <= 1'b0;
    add_ln147_reg_1317[0] <= 1'b0;
end

endmodule //Filter2D
