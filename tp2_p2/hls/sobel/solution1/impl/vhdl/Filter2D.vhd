-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
-- Version: 2019.2
-- Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity Filter2D is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    p_src_rows_V_read : IN STD_LOGIC_VECTOR (31 downto 0);
    p_src_cols_V_read : IN STD_LOGIC_VECTOR (31 downto 0);
    p_src_data_stream_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    p_src_data_stream_V_empty_n : IN STD_LOGIC;
    p_src_data_stream_V_read : OUT STD_LOGIC;
    p_dst_data_stream_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
    p_dst_data_stream_V_full_n : IN STD_LOGIC;
    p_dst_data_stream_V_write : OUT STD_LOGIC );
end;


architecture behav of Filter2D is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (4 downto 0) := "00010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (4 downto 0) := "00100";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (4 downto 0) := "01000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (4 downto 0) := "10000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_FFFFFFFF : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111111111111111111";
    constant ap_const_lv32_FFFFFFFE : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111111111111111110";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv31_0 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000000000";
    constant ap_const_lv32_FFFFFFFD : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111111111111111101";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv10_0 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    constant ap_const_lv9_0 : STD_LOGIC_VECTOR (8 downto 0) := "000000000";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv8_1 : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    constant ap_const_lv8_FF : STD_LOGIC_VECTOR (7 downto 0) := "11111111";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal p_src_data_stream_V_blk_n : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal icmp_ln444_reg_1390 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln118_reg_1399 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln899_reg_1335 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln887_reg_1330 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_dst_data_stream_V_blk_n : STD_LOGIC;
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal and_ln512_reg_1416 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln512_reg_1416_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal t_V_2_reg_279 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln443_fu_290_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln443_reg_1288 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln443_1_fu_296_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln443_1_reg_1293 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln506_fu_302_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln506_reg_1298 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln458_fu_308_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln458_reg_1305 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln147_1_fu_320_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln147_1_reg_1310 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln147_fu_332_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln147_reg_1317 : STD_LOGIC_VECTOR (31 downto 0);
    signal i_V_fu_343_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal i_V_reg_1325 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal icmp_ln887_fu_349_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln443_fu_338_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln899_fu_364_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln879_fu_370_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln879_reg_1340 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln879_1_fu_376_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln879_1_reg_1344 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln899_1_fu_382_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln899_1_reg_1348 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln118_fu_584_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln118_reg_1355 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln118_1_fu_600_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln118_1_reg_1360 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln118_2_fu_616_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln118_2_reg_1365 : STD_LOGIC_VECTOR (31 downto 0);
    signal xor_ln457_fu_624_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln457_reg_1370 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal trunc_ln493_fu_633_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln493_reg_1375 : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln493_1_fu_641_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln493_1_reg_1380 : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln493_2_fu_649_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln493_2_reg_1385 : STD_LOGIC_VECTOR (1 downto 0);
    signal icmp_ln444_fu_653_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state4_pp0_stage0_iter0 : BOOLEAN;
    signal ap_predicate_op140_read_state5 : BOOLEAN;
    signal ap_predicate_op147_read_state5 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter4 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal icmp_ln444_reg_1390_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln444_reg_1390_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal j_V_fu_658_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal and_ln118_fu_705_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln118_reg_1399_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal x_fu_769_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal x_reg_1403 : STD_LOGIC_VECTOR (31 downto 0);
    signal or_ln457_fu_777_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln457_reg_1409 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln457_reg_1409_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln512_fu_782_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln512_reg_1416_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln512_reg_1416_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal right_border_buf_0_6_reg_1420 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln493_3_fu_800_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln493_3_reg_1431 : STD_LOGIC_VECTOR (1 downto 0);
    signal k_buf_0_val_4_addr_reg_1438 : STD_LOGIC_VECTOR (9 downto 0);
    signal k_buf_0_val_5_addr_reg_1444 : STD_LOGIC_VECTOR (9 downto 0);
    signal src_kernel_win_0_va_6_fu_918_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_6_reg_1450 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_7_fu_936_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_7_reg_1457 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_7_reg_1457_pp0_iter3_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_8_fu_954_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_8_reg_1464 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Result_s_reg_1471 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln703_4_fu_1086_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln703_4_reg_1477 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln703_5_fu_1092_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln703_5_reg_1482 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln785_fu_1107_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln785_reg_1487 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_condition_pp0_exit_iter1_state5 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal k_buf_0_val_3_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal k_buf_0_val_3_ce0 : STD_LOGIC;
    signal k_buf_0_val_3_we0 : STD_LOGIC;
    signal k_buf_0_val_3_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal k_buf_0_val_3_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal k_buf_0_val_3_ce1 : STD_LOGIC;
    signal k_buf_0_val_3_we1 : STD_LOGIC;
    signal k_buf_0_val_4_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal k_buf_0_val_4_ce0 : STD_LOGIC;
    signal k_buf_0_val_4_we0 : STD_LOGIC;
    signal k_buf_0_val_4_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal k_buf_0_val_4_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal k_buf_0_val_4_ce1 : STD_LOGIC;
    signal k_buf_0_val_4_we1 : STD_LOGIC;
    signal k_buf_0_val_5_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal k_buf_0_val_5_ce0 : STD_LOGIC;
    signal k_buf_0_val_5_we0 : STD_LOGIC;
    signal k_buf_0_val_5_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal k_buf_0_val_5_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal k_buf_0_val_5_ce1 : STD_LOGIC;
    signal k_buf_0_val_5_we1 : STD_LOGIC;
    signal t_V_reg_268 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal zext_ln835_fu_794_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal src_kernel_win_0_va_fu_128 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_1_fu_132 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_2_fu_136 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_3_fu_140 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_4_fu_144 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_5_fu_148 : STD_LOGIC_VECTOR (7 downto 0);
    signal right_border_buf_0_s_fu_152 : STD_LOGIC_VECTOR (7 downto 0);
    signal col_buf_0_val_0_0_fu_830_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal right_border_buf_0_1_fu_156 : STD_LOGIC_VECTOR (7 downto 0);
    signal right_border_buf_0_2_fu_160 : STD_LOGIC_VECTOR (7 downto 0);
    signal right_border_buf_0_3_fu_164 : STD_LOGIC_VECTOR (7 downto 0);
    signal col_buf_0_val_1_0_fu_848_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal right_border_buf_0_4_fu_168 : STD_LOGIC_VECTOR (7 downto 0);
    signal right_border_buf_0_5_fu_172 : STD_LOGIC_VECTOR (7 downto 0);
    signal col_buf_0_val_2_0_fu_865_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_sig_allocacmp_right_border_buf_0_6 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal shl_ln147_fu_314_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal shl_ln147_1_fu_326_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_fu_354_p4 : STD_LOGIC_VECTOR (30 downto 0);
    signal add_ln506_1_fu_387_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_1_fu_393_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln118_fu_407_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln118_1_fu_401_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_2_fu_418_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal sub_ln142_fu_426_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln139_1_fu_432_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln506_2_fu_450_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_11_fu_456_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln118_2_fu_470_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln118_2_fu_464_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_12_fu_481_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal sub_ln142_1_fu_489_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln139_2_fu_495_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln506_3_fu_513_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_13_fu_519_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln118_3_fu_533_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln118_3_fu_527_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_14_fu_544_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal sub_ln142_2_fu_552_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln139_3_fu_558_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln144_1_fu_440_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sub_ln147_fu_445_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal and_ln118_1_fu_412_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln144_fu_576_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln144_2_fu_503_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sub_ln147_1_fu_508_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal and_ln118_2_fu_475_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln144_1_fu_592_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln144_3_fu_566_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sub_ln147_2_fu_571_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal and_ln118_3_fu_538_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln144_2_fu_608_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_ln507_fu_629_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_ln507_1_fu_637_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_ln507_2_fu_645_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_15_fu_664_p4 : STD_LOGIC_VECTOR (30 downto 0);
    signal ImagLoc_x_fu_680_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_16_fu_686_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln118_1_fu_700_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln118_4_fu_694_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_17_fu_711_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal sub_ln142_3_fu_719_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln139_fu_725_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_ln147_3_fu_738_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal xor_ln118_5_fu_751_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln144_fu_733_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln118_fu_757_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln144_fu_763_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln118_3_fu_743_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln891_fu_674_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sub_ln458_fu_790_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_3_fu_819_p5 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_6_fu_837_p5 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_7_fu_855_p5 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_8_fu_907_p5 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_9_fu_925_p5 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_s_fu_943_p5 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln703_fu_974_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln1118_fu_970_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal sub_ln703_fu_977_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal shl_ln1_fu_987_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln1118_1_fu_995_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal sub_ln1118_fu_999_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal shl_ln1118_1_fu_1018_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln1118_2_fu_1029_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal sub_ln1118_1_fu_1033_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal sext_ln703_1_fu_1039_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal sext_ln703_fu_1005_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln703_2_fu_1047_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal sext_ln1118_fu_983_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln703_1_fu_1056_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln703_1_fu_1025_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal sext_ln703_2_fu_1062_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln703_fu_1050_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln703_2_fu_1066_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal p_Val2_s_fu_1072_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal trunc_ln703_fu_1014_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal sub_ln703_1_fu_1009_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln703_1_fu_1043_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_10_fu_1097_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal shl_ln703_fu_1149_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln703_6_fu_1154_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal xor_ln785_fu_1164_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal overflow_fu_1169_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln340_fu_1182_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln340_fu_1174_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Val2_1_fu_1159_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_block_pp0 : BOOLEAN;
    signal ap_predicate_op141_store_state5 : BOOLEAN;
    signal ap_enable_operation_141 : BOOLEAN;
    signal ap_enable_state5_pp0_iter1_stage0 : BOOLEAN;
    signal ap_predicate_op139_load_state5 : BOOLEAN;
    signal ap_enable_operation_139 : BOOLEAN;
    signal ap_enable_operation_164 : BOOLEAN;
    signal ap_enable_state6_pp0_iter2_stage0 : BOOLEAN;
    signal ap_predicate_op169_store_state6 : BOOLEAN;
    signal ap_enable_operation_169 : BOOLEAN;
    signal ap_predicate_op143_store_state5 : BOOLEAN;
    signal ap_enable_operation_143 : BOOLEAN;
    signal ap_enable_operation_137 : BOOLEAN;
    signal ap_enable_operation_161 : BOOLEAN;
    signal ap_predicate_op170_store_state6 : BOOLEAN;
    signal ap_enable_operation_170 : BOOLEAN;
    signal ap_predicate_op145_store_state5 : BOOLEAN;
    signal ap_enable_operation_145 : BOOLEAN;
    signal ap_enable_operation_134 : BOOLEAN;
    signal ap_enable_operation_158 : BOOLEAN;
    signal ap_predicate_op148_store_state5 : BOOLEAN;
    signal ap_enable_operation_148 : BOOLEAN;
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;

    component sobel_mux_32_8_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (7 downto 0);
        din1 : IN STD_LOGIC_VECTOR (7 downto 0);
        din2 : IN STD_LOGIC_VECTOR (7 downto 0);
        din3 : IN STD_LOGIC_VECTOR (1 downto 0);
        dout : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component Filter2D_k_buf_0_bkb IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (7 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        address1 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce1 : IN STD_LOGIC;
        we1 : IN STD_LOGIC;
        d1 : IN STD_LOGIC_VECTOR (7 downto 0) );
    end component;



begin
    k_buf_0_val_3_U : component Filter2D_k_buf_0_bkb
    generic map (
        DataWidth => 8,
        AddressRange => 640,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => k_buf_0_val_3_address0,
        ce0 => k_buf_0_val_3_ce0,
        we0 => k_buf_0_val_3_we0,
        d0 => p_src_data_stream_V_dout,
        q0 => k_buf_0_val_3_q0,
        address1 => k_buf_0_val_3_address1,
        ce1 => k_buf_0_val_3_ce1,
        we1 => k_buf_0_val_3_we1,
        d1 => p_src_data_stream_V_dout);

    k_buf_0_val_4_U : component Filter2D_k_buf_0_bkb
    generic map (
        DataWidth => 8,
        AddressRange => 640,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => k_buf_0_val_4_address0,
        ce0 => k_buf_0_val_4_ce0,
        we0 => k_buf_0_val_4_we0,
        d0 => p_src_data_stream_V_dout,
        q0 => k_buf_0_val_4_q0,
        address1 => k_buf_0_val_4_address1,
        ce1 => k_buf_0_val_4_ce1,
        we1 => k_buf_0_val_4_we1,
        d1 => k_buf_0_val_3_q0);

    k_buf_0_val_5_U : component Filter2D_k_buf_0_bkb
    generic map (
        DataWidth => 8,
        AddressRange => 640,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => k_buf_0_val_5_address0,
        ce0 => k_buf_0_val_5_ce0,
        we0 => k_buf_0_val_5_we0,
        d0 => p_src_data_stream_V_dout,
        q0 => k_buf_0_val_5_q0,
        address1 => k_buf_0_val_5_address1,
        ce1 => k_buf_0_val_5_ce1,
        we1 => k_buf_0_val_5_we1,
        d1 => k_buf_0_val_4_q0);

    sobel_mux_32_8_1_1_U20 : component sobel_mux_32_8_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din0 => right_border_buf_0_s_fu_152,
        din1 => right_border_buf_0_1_fu_156,
        din2 => ap_const_lv8_0,
        din3 => trunc_ln493_3_reg_1431,
        dout => tmp_3_fu_819_p5);

    sobel_mux_32_8_1_1_U21 : component sobel_mux_32_8_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din0 => right_border_buf_0_3_fu_164,
        din1 => right_border_buf_0_4_fu_168,
        din2 => ap_const_lv8_0,
        din3 => trunc_ln493_3_reg_1431,
        dout => tmp_6_fu_837_p5);

    sobel_mux_32_8_1_1_U22 : component sobel_mux_32_8_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din0 => right_border_buf_0_6_reg_1420,
        din1 => right_border_buf_0_2_fu_160,
        din2 => ap_const_lv8_0,
        din3 => trunc_ln493_3_reg_1431,
        dout => tmp_7_fu_855_p5);

    sobel_mux_32_8_1_1_U23 : component sobel_mux_32_8_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din0 => col_buf_0_val_0_0_fu_830_p3,
        din1 => col_buf_0_val_1_0_fu_848_p3,
        din2 => col_buf_0_val_2_0_fu_865_p3,
        din3 => trunc_ln493_reg_1375,
        dout => tmp_8_fu_907_p5);

    sobel_mux_32_8_1_1_U24 : component sobel_mux_32_8_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din0 => col_buf_0_val_0_0_fu_830_p3,
        din1 => col_buf_0_val_1_0_fu_848_p3,
        din2 => col_buf_0_val_2_0_fu_865_p3,
        din3 => trunc_ln493_1_reg_1380,
        dout => tmp_9_fu_925_p5);

    sobel_mux_32_8_1_1_U25 : component sobel_mux_32_8_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din0 => col_buf_0_val_0_0_fu_830_p3,
        din1 => col_buf_0_val_1_0_fu_848_p3,
        din2 => col_buf_0_val_2_0_fu_865_p3,
        din3 => trunc_ln493_2_reg_1385,
        dout => tmp_s_fu_943_p5);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((icmp_ln444_fu_653_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then
                    if ((ap_const_logic_1 = ap_condition_pp0_exit_iter1_state5)) then 
                        ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter0;
                    elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                        ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
                    ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    t_V_2_reg_279_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln444_fu_653_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                t_V_2_reg_279 <= j_V_fu_658_p2;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
                t_V_2_reg_279 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;

    t_V_reg_268_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
                t_V_reg_268 <= i_V_reg_1325;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                t_V_reg_268 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                    add_ln147_1_reg_1310(31 downto 1) <= add_ln147_1_fu_320_p2(31 downto 1);
                    add_ln147_reg_1317(31 downto 1) <= add_ln147_fu_332_p2(31 downto 1);
                add_ln443_1_reg_1293 <= add_ln443_1_fu_296_p2;
                add_ln443_reg_1288 <= add_ln443_fu_290_p2;
                add_ln458_reg_1305 <= add_ln458_fu_308_p2;
                add_ln506_reg_1298 <= add_ln506_fu_302_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = and_ln512_reg_1416_pp0_iter2_reg) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                add_ln703_4_reg_1477 <= add_ln703_4_fu_1086_p2;
                add_ln703_5_reg_1482 <= add_ln703_5_fu_1092_p2;
                icmp_ln785_reg_1487 <= icmp_ln785_fu_1107_p2;
                p_Result_s_reg_1471 <= p_Val2_s_fu_1072_p2(10 downto 10);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln444_fu_653_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                and_ln118_reg_1399 <= and_ln118_fu_705_p2;
                and_ln512_reg_1416 <= and_ln512_fu_782_p2;
                or_ln457_reg_1409 <= or_ln457_fu_777_p2;
                x_reg_1403 <= x_fu_769_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                and_ln118_reg_1399_pp0_iter1_reg <= and_ln118_reg_1399;
                and_ln512_reg_1416_pp0_iter1_reg <= and_ln512_reg_1416;
                icmp_ln444_reg_1390 <= icmp_ln444_fu_653_p2;
                icmp_ln444_reg_1390_pp0_iter1_reg <= icmp_ln444_reg_1390;
                or_ln457_reg_1409_pp0_iter1_reg <= or_ln457_reg_1409;
                right_border_buf_0_6_reg_1420 <= ap_sig_allocacmp_right_border_buf_0_6;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                and_ln512_reg_1416_pp0_iter2_reg <= and_ln512_reg_1416_pp0_iter1_reg;
                and_ln512_reg_1416_pp0_iter3_reg <= and_ln512_reg_1416_pp0_iter2_reg;
                icmp_ln444_reg_1390_pp0_iter2_reg <= icmp_ln444_reg_1390_pp0_iter1_reg;
                src_kernel_win_0_va_6_reg_1450 <= src_kernel_win_0_va_6_fu_918_p3;
                src_kernel_win_0_va_7_reg_1457 <= src_kernel_win_0_va_7_fu_936_p3;
                src_kernel_win_0_va_7_reg_1457_pp0_iter3_reg <= src_kernel_win_0_va_7_reg_1457;
                src_kernel_win_0_va_8_reg_1464 <= src_kernel_win_0_va_8_fu_954_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                i_V_reg_1325 <= i_V_fu_343_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln443_fu_338_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                icmp_ln879_1_reg_1344 <= icmp_ln879_1_fu_376_p2;
                icmp_ln879_reg_1340 <= icmp_ln879_fu_370_p2;
                icmp_ln887_reg_1330 <= icmp_ln887_fu_349_p2;
                icmp_ln899_1_reg_1348 <= icmp_ln899_1_fu_382_p2;
                icmp_ln899_reg_1335 <= icmp_ln899_fu_364_p2;
                select_ln118_1_reg_1360 <= select_ln118_1_fu_600_p3;
                select_ln118_2_reg_1365 <= select_ln118_2_fu_616_p3;
                select_ln118_reg_1355 <= select_ln118_fu_584_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln444_reg_1390 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                k_buf_0_val_4_addr_reg_1438 <= zext_ln835_fu_794_p1(10 - 1 downto 0);
                k_buf_0_val_5_addr_reg_1444 <= zext_ln835_fu_794_p1(10 - 1 downto 0);
                trunc_ln493_3_reg_1431 <= trunc_ln493_3_fu_800_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln887_reg_1330 = ap_const_lv1_1) and (icmp_ln899_reg_1335 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln118_reg_1399_pp0_iter1_reg) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                right_border_buf_0_1_fu_156 <= right_border_buf_0_s_fu_152;
                right_border_buf_0_2_fu_160 <= right_border_buf_0_6_reg_1420;
                right_border_buf_0_3_fu_164 <= col_buf_0_val_1_0_fu_848_p3;
                right_border_buf_0_4_fu_168 <= right_border_buf_0_3_fu_164;
                right_border_buf_0_5_fu_172 <= col_buf_0_val_2_0_fu_865_p3;
                right_border_buf_0_s_fu_152 <= col_buf_0_val_0_0_fu_830_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln444_reg_1390_pp0_iter2_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                src_kernel_win_0_va_1_fu_132 <= src_kernel_win_0_va_fu_128;
                src_kernel_win_0_va_2_fu_136 <= src_kernel_win_0_va_7_reg_1457;
                src_kernel_win_0_va_3_fu_140 <= src_kernel_win_0_va_2_fu_136;
                src_kernel_win_0_va_4_fu_144 <= src_kernel_win_0_va_8_reg_1464;
                src_kernel_win_0_va_5_fu_148 <= src_kernel_win_0_va_4_fu_144;
                src_kernel_win_0_va_fu_128 <= src_kernel_win_0_va_6_reg_1450;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln899_1_reg_1348 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                trunc_ln493_1_reg_1380 <= trunc_ln493_1_fu_641_p1;
                trunc_ln493_2_reg_1385 <= trunc_ln493_2_fu_649_p1;
                trunc_ln493_reg_1375 <= trunc_ln493_fu_633_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state3)) then
                xor_ln457_reg_1370 <= xor_ln457_fu_624_p2;
            end if;
        end if;
    end process;
    add_ln147_1_reg_1310(0) <= '0';
    add_ln147_reg_1317(0) <= '0';

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter4, ap_CS_fsm_state2, icmp_ln443_fu_338_p2, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_subdone, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((icmp_ln443_fu_338_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state3 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) and not(((ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif ((((ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0)))) then
                    ap_NS_fsm <= ap_ST_fsm_state9;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_state9 => 
                ap_NS_fsm <= ap_ST_fsm_state2;
            when others =>  
                ap_NS_fsm <= "XXXXX";
        end case;
    end process;
    ImagLoc_x_fu_680_p2 <= std_logic_vector(signed(ap_const_lv32_FFFFFFFF) + signed(t_V_2_reg_279));
    add_ln147_1_fu_320_p2 <= std_logic_vector(unsigned(ap_const_lv32_2) + unsigned(shl_ln147_fu_314_p2));
    add_ln147_fu_332_p2 <= std_logic_vector(signed(ap_const_lv32_FFFFFFFE) + signed(shl_ln147_1_fu_326_p2));
    add_ln443_1_fu_296_p2 <= std_logic_vector(unsigned(ap_const_lv32_2) + unsigned(p_src_rows_V_read));
    add_ln443_fu_290_p2 <= std_logic_vector(unsigned(ap_const_lv32_2) + unsigned(p_src_cols_V_read));
    add_ln458_fu_308_p2 <= std_logic_vector(unsigned(ap_const_lv32_3) + unsigned(p_src_cols_V_read));
    add_ln506_1_fu_387_p2 <= std_logic_vector(signed(ap_const_lv32_FFFFFFFF) + signed(t_V_reg_268));
    add_ln506_2_fu_450_p2 <= std_logic_vector(signed(ap_const_lv32_FFFFFFFE) + signed(t_V_reg_268));
    add_ln506_3_fu_513_p2 <= std_logic_vector(signed(ap_const_lv32_FFFFFFFD) + signed(t_V_reg_268));
    add_ln506_fu_302_p2 <= std_logic_vector(signed(ap_const_lv32_FFFFFFFF) + signed(p_src_rows_V_read));
    add_ln703_1_fu_1056_p2 <= std_logic_vector(unsigned(zext_ln703_2_fu_1047_p1) + unsigned(sext_ln1118_fu_983_p1));
    add_ln703_2_fu_1066_p2 <= std_logic_vector(unsigned(zext_ln703_1_fu_1025_p1) + unsigned(sext_ln703_2_fu_1062_p1));
    add_ln703_4_fu_1086_p2 <= std_logic_vector(unsigned(trunc_ln703_fu_1014_p1) + unsigned(sub_ln703_1_fu_1009_p2));
    add_ln703_5_fu_1092_p2 <= std_logic_vector(unsigned(src_kernel_win_0_va_6_reg_1450) + unsigned(trunc_ln703_1_fu_1043_p1));
    add_ln703_6_fu_1154_p2 <= std_logic_vector(unsigned(shl_ln703_fu_1149_p2) + unsigned(add_ln703_5_reg_1482));
    add_ln703_fu_1050_p2 <= std_logic_vector(signed(sext_ln703_1_fu_1039_p1) + signed(sext_ln703_fu_1005_p1));
    and_ln118_1_fu_412_p2 <= (xor_ln118_1_fu_401_p2 and icmp_ln118_fu_407_p2);
    and_ln118_2_fu_475_p2 <= (xor_ln118_2_fu_464_p2 and icmp_ln118_2_fu_470_p2);
    and_ln118_3_fu_538_p2 <= (xor_ln118_3_fu_527_p2 and icmp_ln118_3_fu_533_p2);
    and_ln118_fu_705_p2 <= (xor_ln118_4_fu_694_p2 and icmp_ln118_1_fu_700_p2);
    and_ln144_fu_763_p2 <= (or_ln118_fu_757_p2 and icmp_ln144_fu_733_p2);
    and_ln512_fu_782_p2 <= (icmp_ln899_reg_1335 and icmp_ln891_fu_674_p2);
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(3);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state9 <= ap_CS_fsm(4);

    ap_block_pp0_assign_proc : process(ap_CS_fsm, ap_block_pp0_stage0_subdone)
    begin
                ap_block_pp0 <= ((ap_ST_fsm_pp0_stage0 = ap_CS_fsm) and (ap_const_boolean_1 = ap_block_pp0_stage0_subdone));
    end process;

        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_assign_proc : process(p_src_data_stream_V_empty_n, p_dst_data_stream_V_full_n, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter4, and_ln512_reg_1416_pp0_iter3_reg, ap_predicate_op140_read_state5, ap_predicate_op147_read_state5)
    begin
                ap_block_pp0_stage0_01001 <= (((ap_const_lv1_1 = and_ln512_reg_1416_pp0_iter3_reg) and (p_dst_data_stream_V_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (((p_src_data_stream_V_empty_n = ap_const_logic_0) and (ap_predicate_op147_read_state5 = ap_const_boolean_1)) or ((p_src_data_stream_V_empty_n = ap_const_logic_0) and (ap_predicate_op140_read_state5 = ap_const_boolean_1)))));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(p_src_data_stream_V_empty_n, p_dst_data_stream_V_full_n, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter4, and_ln512_reg_1416_pp0_iter3_reg, ap_predicate_op140_read_state5, ap_predicate_op147_read_state5)
    begin
                ap_block_pp0_stage0_11001 <= (((ap_const_lv1_1 = and_ln512_reg_1416_pp0_iter3_reg) and (p_dst_data_stream_V_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (((p_src_data_stream_V_empty_n = ap_const_logic_0) and (ap_predicate_op147_read_state5 = ap_const_boolean_1)) or ((p_src_data_stream_V_empty_n = ap_const_logic_0) and (ap_predicate_op140_read_state5 = ap_const_boolean_1)))));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(p_src_data_stream_V_empty_n, p_dst_data_stream_V_full_n, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter4, and_ln512_reg_1416_pp0_iter3_reg, ap_predicate_op140_read_state5, ap_predicate_op147_read_state5)
    begin
                ap_block_pp0_stage0_subdone <= (((ap_const_lv1_1 = and_ln512_reg_1416_pp0_iter3_reg) and (p_dst_data_stream_V_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (((p_src_data_stream_V_empty_n = ap_const_logic_0) and (ap_predicate_op147_read_state5 = ap_const_boolean_1)) or ((p_src_data_stream_V_empty_n = ap_const_logic_0) and (ap_predicate_op140_read_state5 = ap_const_boolean_1)))));
    end process;

        ap_block_state4_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state5_pp0_stage0_iter1_assign_proc : process(p_src_data_stream_V_empty_n, ap_predicate_op140_read_state5, ap_predicate_op147_read_state5)
    begin
                ap_block_state5_pp0_stage0_iter1 <= (((p_src_data_stream_V_empty_n = ap_const_logic_0) and (ap_predicate_op147_read_state5 = ap_const_boolean_1)) or ((p_src_data_stream_V_empty_n = ap_const_logic_0) and (ap_predicate_op140_read_state5 = ap_const_boolean_1)));
    end process;

        ap_block_state6_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state8_pp0_stage0_iter4_assign_proc : process(p_dst_data_stream_V_full_n, and_ln512_reg_1416_pp0_iter3_reg)
    begin
                ap_block_state8_pp0_stage0_iter4 <= ((ap_const_lv1_1 = and_ln512_reg_1416_pp0_iter3_reg) and (p_dst_data_stream_V_full_n = ap_const_logic_0));
    end process;


    ap_condition_pp0_exit_iter1_state5_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter0)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_condition_pp0_exit_iter1_state5 <= ap_const_logic_1;
        else 
            ap_condition_pp0_exit_iter1_state5 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state2, icmp_ln443_fu_338_p2)
    begin
        if ((((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((icmp_ln443_fu_338_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_enable_operation_134_assign_proc : process(icmp_ln444_reg_1390)
    begin
                ap_enable_operation_134 <= (icmp_ln444_reg_1390 = ap_const_lv1_0);
    end process;


    ap_enable_operation_137_assign_proc : process(icmp_ln444_reg_1390)
    begin
                ap_enable_operation_137 <= (icmp_ln444_reg_1390 = ap_const_lv1_0);
    end process;


    ap_enable_operation_139_assign_proc : process(ap_predicate_op139_load_state5)
    begin
                ap_enable_operation_139 <= (ap_predicate_op139_load_state5 = ap_const_boolean_1);
    end process;


    ap_enable_operation_141_assign_proc : process(ap_predicate_op141_store_state5)
    begin
                ap_enable_operation_141 <= (ap_predicate_op141_store_state5 = ap_const_boolean_1);
    end process;


    ap_enable_operation_143_assign_proc : process(ap_predicate_op143_store_state5)
    begin
                ap_enable_operation_143 <= (ap_predicate_op143_store_state5 = ap_const_boolean_1);
    end process;


    ap_enable_operation_145_assign_proc : process(ap_predicate_op145_store_state5)
    begin
                ap_enable_operation_145 <= (ap_predicate_op145_store_state5 = ap_const_boolean_1);
    end process;


    ap_enable_operation_148_assign_proc : process(ap_predicate_op148_store_state5)
    begin
                ap_enable_operation_148 <= (ap_predicate_op148_store_state5 = ap_const_boolean_1);
    end process;

        ap_enable_operation_158 <= (ap_const_boolean_1 = ap_const_boolean_1);
        ap_enable_operation_161 <= (ap_const_boolean_1 = ap_const_boolean_1);

    ap_enable_operation_164_assign_proc : process(or_ln457_reg_1409_pp0_iter1_reg)
    begin
                ap_enable_operation_164 <= (or_ln457_reg_1409_pp0_iter1_reg = ap_const_lv1_1);
    end process;


    ap_enable_operation_169_assign_proc : process(ap_predicate_op169_store_state6)
    begin
                ap_enable_operation_169 <= (ap_predicate_op169_store_state6 = ap_const_boolean_1);
    end process;


    ap_enable_operation_170_assign_proc : process(ap_predicate_op170_store_state6)
    begin
                ap_enable_operation_170 <= (ap_predicate_op170_store_state6 = ap_const_boolean_1);
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_enable_state5_pp0_iter1_stage0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1)
    begin
                ap_enable_state5_pp0_iter1_stage0 <= ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0));
    end process;


    ap_enable_state6_pp0_iter2_stage0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter2)
    begin
                ap_enable_state6_pp0_iter2_stage0 <= ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1));
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3)
    begin
        if (((ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_predicate_op139_load_state5_assign_proc : process(icmp_ln444_reg_1390, or_ln457_reg_1409)
    begin
                ap_predicate_op139_load_state5 <= ((or_ln457_reg_1409 = ap_const_lv1_1) and (icmp_ln444_reg_1390 = ap_const_lv1_0));
    end process;


    ap_predicate_op140_read_state5_assign_proc : process(icmp_ln444_reg_1390, and_ln118_reg_1399, icmp_ln899_reg_1335)
    begin
                ap_predicate_op140_read_state5 <= ((ap_const_lv1_1 = and_ln118_reg_1399) and (icmp_ln899_reg_1335 = ap_const_lv1_0) and (icmp_ln444_reg_1390 = ap_const_lv1_0));
    end process;


    ap_predicate_op141_store_state5_assign_proc : process(icmp_ln444_reg_1390, and_ln118_reg_1399, icmp_ln899_reg_1335, icmp_ln879_reg_1340)
    begin
                ap_predicate_op141_store_state5 <= ((icmp_ln879_reg_1340 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln118_reg_1399) and (icmp_ln899_reg_1335 = ap_const_lv1_0) and (icmp_ln444_reg_1390 = ap_const_lv1_0));
    end process;


    ap_predicate_op143_store_state5_assign_proc : process(icmp_ln444_reg_1390, and_ln118_reg_1399, icmp_ln899_reg_1335, icmp_ln879_1_reg_1344)
    begin
                ap_predicate_op143_store_state5 <= ((icmp_ln879_1_reg_1344 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln118_reg_1399) and (icmp_ln899_reg_1335 = ap_const_lv1_0) and (icmp_ln444_reg_1390 = ap_const_lv1_0));
    end process;


    ap_predicate_op145_store_state5_assign_proc : process(icmp_ln444_reg_1390, and_ln118_reg_1399, icmp_ln899_reg_1335, icmp_ln879_reg_1340)
    begin
                ap_predicate_op145_store_state5 <= ((icmp_ln879_reg_1340 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln118_reg_1399) and (icmp_ln899_reg_1335 = ap_const_lv1_0) and (icmp_ln444_reg_1390 = ap_const_lv1_0));
    end process;


    ap_predicate_op147_read_state5_assign_proc : process(icmp_ln444_reg_1390, and_ln118_reg_1399, icmp_ln899_reg_1335, icmp_ln887_reg_1330)
    begin
                ap_predicate_op147_read_state5 <= ((icmp_ln887_reg_1330 = ap_const_lv1_1) and (icmp_ln899_reg_1335 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln118_reg_1399) and (icmp_ln444_reg_1390 = ap_const_lv1_0));
    end process;


    ap_predicate_op148_store_state5_assign_proc : process(icmp_ln444_reg_1390, and_ln118_reg_1399, icmp_ln899_reg_1335, icmp_ln887_reg_1330)
    begin
                ap_predicate_op148_store_state5 <= ((icmp_ln887_reg_1330 = ap_const_lv1_1) and (icmp_ln899_reg_1335 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln118_reg_1399) and (icmp_ln444_reg_1390 = ap_const_lv1_0));
    end process;


    ap_predicate_op169_store_state6_assign_proc : process(icmp_ln899_reg_1335, icmp_ln887_reg_1330, and_ln118_reg_1399_pp0_iter1_reg)
    begin
                ap_predicate_op169_store_state6 <= ((icmp_ln887_reg_1330 = ap_const_lv1_1) and (icmp_ln899_reg_1335 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln118_reg_1399_pp0_iter1_reg));
    end process;


    ap_predicate_op170_store_state6_assign_proc : process(icmp_ln899_reg_1335, icmp_ln887_reg_1330, and_ln118_reg_1399_pp0_iter1_reg)
    begin
                ap_predicate_op170_store_state6 <= ((icmp_ln887_reg_1330 = ap_const_lv1_1) and (icmp_ln899_reg_1335 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln118_reg_1399_pp0_iter1_reg));
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state2, icmp_ln443_fu_338_p2)
    begin
        if (((icmp_ln443_fu_338_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_allocacmp_right_border_buf_0_6_assign_proc : process(ap_block_pp0_stage0, icmp_ln899_reg_1335, icmp_ln887_reg_1330, and_ln118_reg_1399_pp0_iter1_reg, ap_enable_reg_pp0_iter2, right_border_buf_0_5_fu_172, col_buf_0_val_2_0_fu_865_p3)
    begin
        if (((icmp_ln887_reg_1330 = ap_const_lv1_1) and (icmp_ln899_reg_1335 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln118_reg_1399_pp0_iter1_reg) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            ap_sig_allocacmp_right_border_buf_0_6 <= col_buf_0_val_2_0_fu_865_p3;
        else 
            ap_sig_allocacmp_right_border_buf_0_6 <= right_border_buf_0_5_fu_172;
        end if; 
    end process;

    col_buf_0_val_0_0_fu_830_p3 <= 
        k_buf_0_val_3_q0 when (or_ln457_reg_1409_pp0_iter1_reg(0) = '1') else 
        tmp_3_fu_819_p5;
    col_buf_0_val_1_0_fu_848_p3 <= 
        k_buf_0_val_4_q0 when (or_ln457_reg_1409_pp0_iter1_reg(0) = '1') else 
        tmp_6_fu_837_p5;
    col_buf_0_val_2_0_fu_865_p3 <= 
        k_buf_0_val_5_q0 when (or_ln457_reg_1409_pp0_iter1_reg(0) = '1') else 
        tmp_7_fu_855_p5;
    i_V_fu_343_p2 <= std_logic_vector(unsigned(t_V_reg_268) + unsigned(ap_const_lv32_1));
    icmp_ln118_1_fu_700_p2 <= "1" when (signed(ImagLoc_x_fu_680_p2) < signed(p_src_cols_V_read)) else "0";
    icmp_ln118_2_fu_470_p2 <= "1" when (signed(add_ln506_2_fu_450_p2) < signed(p_src_rows_V_read)) else "0";
    icmp_ln118_3_fu_533_p2 <= "1" when (signed(add_ln506_3_fu_513_p2) < signed(p_src_rows_V_read)) else "0";
    icmp_ln118_fu_407_p2 <= "1" when (signed(add_ln506_1_fu_387_p2) < signed(p_src_rows_V_read)) else "0";
    icmp_ln144_1_fu_440_p2 <= "1" when (signed(select_ln139_1_fu_432_p3) < signed(p_src_rows_V_read)) else "0";
    icmp_ln144_2_fu_503_p2 <= "1" when (signed(select_ln139_2_fu_495_p3) < signed(p_src_rows_V_read)) else "0";
    icmp_ln144_3_fu_566_p2 <= "1" when (signed(select_ln139_3_fu_558_p3) < signed(p_src_rows_V_read)) else "0";
    icmp_ln144_fu_733_p2 <= "1" when (signed(select_ln139_fu_725_p3) < signed(p_src_cols_V_read)) else "0";
    icmp_ln443_fu_338_p2 <= "1" when (t_V_reg_268 = add_ln443_1_reg_1293) else "0";
    icmp_ln444_fu_653_p2 <= "1" when (t_V_2_reg_279 = add_ln443_reg_1288) else "0";
    icmp_ln785_fu_1107_p2 <= "0" when (tmp_10_fu_1097_p4 = ap_const_lv3_0) else "1";
    icmp_ln879_1_fu_376_p2 <= "1" when (t_V_reg_268 = ap_const_lv32_0) else "0";
    icmp_ln879_fu_370_p2 <= "1" when (t_V_reg_268 = ap_const_lv32_1) else "0";
    icmp_ln887_fu_349_p2 <= "1" when (unsigned(t_V_reg_268) < unsigned(p_src_rows_V_read)) else "0";
    icmp_ln891_fu_674_p2 <= "0" when (tmp_15_fu_664_p4 = ap_const_lv31_0) else "1";
    icmp_ln899_1_fu_382_p2 <= "1" when (unsigned(t_V_reg_268) > unsigned(p_src_rows_V_read)) else "0";
    icmp_ln899_fu_364_p2 <= "0" when (tmp_fu_354_p4 = ap_const_lv31_0) else "1";
    j_V_fu_658_p2 <= std_logic_vector(unsigned(t_V_2_reg_279) + unsigned(ap_const_lv32_1));
    k_buf_0_val_3_address0 <= zext_ln835_fu_794_p1(10 - 1 downto 0);
    k_buf_0_val_3_address1 <= zext_ln835_fu_794_p1(10 - 1 downto 0);

    k_buf_0_val_3_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln444_reg_1390, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln444_reg_1390 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            k_buf_0_val_3_ce0 <= ap_const_logic_1;
        else 
            k_buf_0_val_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    k_buf_0_val_3_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            k_buf_0_val_3_ce1 <= ap_const_logic_1;
        else 
            k_buf_0_val_3_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    k_buf_0_val_3_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln444_reg_1390, and_ln118_reg_1399, icmp_ln899_reg_1335, icmp_ln879_reg_1340, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln879_reg_1340 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln118_reg_1399) and (icmp_ln899_reg_1335 = ap_const_lv1_0) and (icmp_ln444_reg_1390 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            k_buf_0_val_3_we0 <= ap_const_logic_1;
        else 
            k_buf_0_val_3_we0 <= ap_const_logic_0;
        end if; 
    end process;


    k_buf_0_val_3_we1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln444_reg_1390, and_ln118_reg_1399, icmp_ln899_reg_1335, icmp_ln887_reg_1330, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln887_reg_1330 = ap_const_lv1_1) and (icmp_ln899_reg_1335 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln118_reg_1399) and (icmp_ln444_reg_1390 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            k_buf_0_val_3_we1 <= ap_const_logic_1;
        else 
            k_buf_0_val_3_we1 <= ap_const_logic_0;
        end if; 
    end process;

    k_buf_0_val_4_address0 <= zext_ln835_fu_794_p1(10 - 1 downto 0);
    k_buf_0_val_4_address1 <= k_buf_0_val_4_addr_reg_1438;

    k_buf_0_val_4_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln444_reg_1390, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln444_reg_1390 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            k_buf_0_val_4_ce0 <= ap_const_logic_1;
        else 
            k_buf_0_val_4_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    k_buf_0_val_4_ce1_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            k_buf_0_val_4_ce1 <= ap_const_logic_1;
        else 
            k_buf_0_val_4_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    k_buf_0_val_4_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln444_reg_1390, and_ln118_reg_1399, icmp_ln899_reg_1335, icmp_ln879_1_reg_1344, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln879_1_reg_1344 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln118_reg_1399) and (icmp_ln899_reg_1335 = ap_const_lv1_0) and (icmp_ln444_reg_1390 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            k_buf_0_val_4_we0 <= ap_const_logic_1;
        else 
            k_buf_0_val_4_we0 <= ap_const_logic_0;
        end if; 
    end process;


    k_buf_0_val_4_we1_assign_proc : process(icmp_ln899_reg_1335, icmp_ln887_reg_1330, ap_block_pp0_stage0_11001, and_ln118_reg_1399_pp0_iter1_reg, ap_enable_reg_pp0_iter2)
    begin
        if (((icmp_ln887_reg_1330 = ap_const_lv1_1) and (icmp_ln899_reg_1335 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln118_reg_1399_pp0_iter1_reg) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            k_buf_0_val_4_we1 <= ap_const_logic_1;
        else 
            k_buf_0_val_4_we1 <= ap_const_logic_0;
        end if; 
    end process;

    k_buf_0_val_5_address0 <= zext_ln835_fu_794_p1(10 - 1 downto 0);
    k_buf_0_val_5_address1 <= k_buf_0_val_5_addr_reg_1444;

    k_buf_0_val_5_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln444_reg_1390, and_ln118_reg_1399, icmp_ln899_reg_1335, icmp_ln879_reg_1340, ap_block_pp0_stage0_11001, or_ln457_reg_1409)
    begin
        if ((((icmp_ln879_reg_1340 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln118_reg_1399) and (icmp_ln899_reg_1335 = ap_const_lv1_0) and (icmp_ln444_reg_1390 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((or_ln457_reg_1409 = ap_const_lv1_1) and (icmp_ln444_reg_1390 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            k_buf_0_val_5_ce0 <= ap_const_logic_1;
        else 
            k_buf_0_val_5_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    k_buf_0_val_5_ce1_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            k_buf_0_val_5_ce1 <= ap_const_logic_1;
        else 
            k_buf_0_val_5_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    k_buf_0_val_5_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln444_reg_1390, and_ln118_reg_1399, icmp_ln899_reg_1335, icmp_ln879_reg_1340, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln879_reg_1340 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln118_reg_1399) and (icmp_ln899_reg_1335 = ap_const_lv1_0) and (icmp_ln444_reg_1390 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            k_buf_0_val_5_we0 <= ap_const_logic_1;
        else 
            k_buf_0_val_5_we0 <= ap_const_logic_0;
        end if; 
    end process;


    k_buf_0_val_5_we1_assign_proc : process(icmp_ln899_reg_1335, icmp_ln887_reg_1330, ap_block_pp0_stage0_11001, and_ln118_reg_1399_pp0_iter1_reg, ap_enable_reg_pp0_iter2)
    begin
        if (((icmp_ln887_reg_1330 = ap_const_lv1_1) and (icmp_ln899_reg_1335 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln118_reg_1399_pp0_iter1_reg) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            k_buf_0_val_5_we1 <= ap_const_logic_1;
        else 
            k_buf_0_val_5_we1 <= ap_const_logic_0;
        end if; 
    end process;

    or_ln118_fu_757_p2 <= (xor_ln118_5_fu_751_p2 or tmp_16_fu_686_p3);
    or_ln340_fu_1182_p2 <= (p_Result_s_reg_1471 or overflow_fu_1169_p2);
    or_ln457_fu_777_p2 <= (xor_ln457_reg_1370 or icmp_ln118_1_fu_700_p2);
    overflow_fu_1169_p2 <= (xor_ln785_fu_1164_p2 and icmp_ln785_reg_1487);
    p_Val2_1_fu_1159_p2 <= std_logic_vector(unsigned(add_ln703_4_reg_1477) + unsigned(add_ln703_6_fu_1154_p2));
    p_Val2_s_fu_1072_p2 <= std_logic_vector(unsigned(add_ln703_fu_1050_p2) + unsigned(add_ln703_2_fu_1066_p2));

    p_dst_data_stream_V_blk_n_assign_proc : process(p_dst_data_stream_V_full_n, ap_block_pp0_stage0, ap_enable_reg_pp0_iter4, and_ln512_reg_1416_pp0_iter3_reg)
    begin
        if (((ap_const_lv1_1 = and_ln512_reg_1416_pp0_iter3_reg) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1))) then 
            p_dst_data_stream_V_blk_n <= p_dst_data_stream_V_full_n;
        else 
            p_dst_data_stream_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    p_dst_data_stream_V_din <= 
        select_ln340_fu_1174_p3 when (or_ln340_fu_1182_p2(0) = '1') else 
        p_Val2_1_fu_1159_p2;

    p_dst_data_stream_V_write_assign_proc : process(ap_enable_reg_pp0_iter4, and_ln512_reg_1416_pp0_iter3_reg, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_lv1_1 = and_ln512_reg_1416_pp0_iter3_reg) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            p_dst_data_stream_V_write <= ap_const_logic_1;
        else 
            p_dst_data_stream_V_write <= ap_const_logic_0;
        end if; 
    end process;


    p_src_data_stream_V_blk_n_assign_proc : process(p_src_data_stream_V_empty_n, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, icmp_ln444_reg_1390, and_ln118_reg_1399, icmp_ln899_reg_1335, icmp_ln887_reg_1330)
    begin
        if ((((icmp_ln887_reg_1330 = ap_const_lv1_1) and (icmp_ln899_reg_1335 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln118_reg_1399) and (icmp_ln444_reg_1390 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_lv1_1 = and_ln118_reg_1399) and (icmp_ln899_reg_1335 = ap_const_lv1_0) and (icmp_ln444_reg_1390 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            p_src_data_stream_V_blk_n <= p_src_data_stream_V_empty_n;
        else 
            p_src_data_stream_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    p_src_data_stream_V_read_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_predicate_op140_read_state5, ap_predicate_op147_read_state5, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_predicate_op147_read_state5 = ap_const_boolean_1)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_predicate_op140_read_state5 = ap_const_boolean_1)))) then 
            p_src_data_stream_V_read <= ap_const_logic_1;
        else 
            p_src_data_stream_V_read <= ap_const_logic_0;
        end if; 
    end process;

    select_ln118_1_fu_600_p3 <= 
        add_ln506_2_fu_450_p2 when (and_ln118_2_fu_475_p2(0) = '1') else 
        select_ln144_1_fu_592_p3;
    select_ln118_2_fu_616_p3 <= 
        add_ln506_3_fu_513_p2 when (and_ln118_3_fu_538_p2(0) = '1') else 
        select_ln144_2_fu_608_p3;
    select_ln118_3_fu_743_p3 <= 
        ImagLoc_x_fu_680_p2 when (and_ln118_fu_705_p2(0) = '1') else 
        sub_ln147_3_fu_738_p2;
    select_ln118_fu_584_p3 <= 
        add_ln506_1_fu_387_p2 when (and_ln118_1_fu_412_p2(0) = '1') else 
        select_ln144_fu_576_p3;
    select_ln139_1_fu_432_p3 <= 
        sub_ln142_fu_426_p2 when (tmp_2_fu_418_p3(0) = '1') else 
        add_ln506_1_fu_387_p2;
    select_ln139_2_fu_495_p3 <= 
        sub_ln142_1_fu_489_p2 when (tmp_12_fu_481_p3(0) = '1') else 
        add_ln506_2_fu_450_p2;
    select_ln139_3_fu_558_p3 <= 
        sub_ln142_2_fu_552_p2 when (tmp_14_fu_544_p3(0) = '1') else 
        add_ln506_3_fu_513_p2;
    select_ln139_fu_725_p3 <= 
        sub_ln142_3_fu_719_p2 when (tmp_17_fu_711_p3(0) = '1') else 
        ImagLoc_x_fu_680_p2;
    select_ln144_1_fu_592_p3 <= 
        select_ln139_2_fu_495_p3 when (icmp_ln144_2_fu_503_p2(0) = '1') else 
        sub_ln147_1_fu_508_p2;
    select_ln144_2_fu_608_p3 <= 
        select_ln139_3_fu_558_p3 when (icmp_ln144_3_fu_566_p2(0) = '1') else 
        sub_ln147_2_fu_571_p2;
    select_ln144_fu_576_p3 <= 
        select_ln139_1_fu_432_p3 when (icmp_ln144_1_fu_440_p2(0) = '1') else 
        sub_ln147_fu_445_p2;
    select_ln340_fu_1174_p3 <= 
        ap_const_lv8_FF when (xor_ln785_fu_1164_p2(0) = '1') else 
        ap_const_lv8_0;
        sext_ln1118_fu_983_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sub_ln703_fu_977_p2),10));

        sext_ln703_1_fu_1039_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sub_ln1118_1_fu_1033_p2),11));

        sext_ln703_2_fu_1062_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln703_1_fu_1056_p2),11));

        sext_ln703_fu_1005_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sub_ln1118_fu_999_p2),11));

    shl_ln1118_1_fu_1018_p3 <= (src_kernel_win_0_va_7_reg_1457 & ap_const_lv1_0);
    shl_ln147_1_fu_326_p2 <= std_logic_vector(shift_left(unsigned(p_src_cols_V_read),to_integer(unsigned('0' & ap_const_lv32_1(31-1 downto 0)))));
    shl_ln147_fu_314_p2 <= std_logic_vector(shift_left(unsigned(p_src_rows_V_read),to_integer(unsigned('0' & ap_const_lv32_1(31-1 downto 0)))));
    shl_ln1_fu_987_p3 <= (src_kernel_win_0_va_3_fu_140 & ap_const_lv1_0);
    shl_ln703_fu_1149_p2 <= std_logic_vector(shift_left(unsigned(src_kernel_win_0_va_7_reg_1457_pp0_iter3_reg),to_integer(unsigned('0' & ap_const_lv8_1(8-1 downto 0)))));
    src_kernel_win_0_va_6_fu_918_p3 <= 
        tmp_8_fu_907_p5 when (icmp_ln899_1_reg_1348(0) = '1') else 
        col_buf_0_val_0_0_fu_830_p3;
    src_kernel_win_0_va_7_fu_936_p3 <= 
        tmp_9_fu_925_p5 when (icmp_ln899_1_reg_1348(0) = '1') else 
        col_buf_0_val_1_0_fu_848_p3;
    src_kernel_win_0_va_8_fu_954_p3 <= 
        tmp_s_fu_943_p5 when (icmp_ln899_1_reg_1348(0) = '1') else 
        col_buf_0_val_2_0_fu_865_p3;
    sub_ln1118_1_fu_1033_p2 <= std_logic_vector(unsigned(ap_const_lv9_0) - unsigned(zext_ln1118_2_fu_1029_p1));
    sub_ln1118_fu_999_p2 <= std_logic_vector(unsigned(ap_const_lv10_0) - unsigned(zext_ln1118_1_fu_995_p1));
    sub_ln142_1_fu_489_p2 <= std_logic_vector(unsigned(ap_const_lv32_2) - unsigned(t_V_reg_268));
    sub_ln142_2_fu_552_p2 <= std_logic_vector(unsigned(ap_const_lv32_3) - unsigned(t_V_reg_268));
    sub_ln142_3_fu_719_p2 <= std_logic_vector(unsigned(ap_const_lv32_1) - unsigned(t_V_2_reg_279));
    sub_ln142_fu_426_p2 <= std_logic_vector(unsigned(ap_const_lv32_1) - unsigned(t_V_reg_268));
    sub_ln147_1_fu_508_p2 <= std_logic_vector(unsigned(add_ln147_1_reg_1310) - unsigned(select_ln139_2_fu_495_p3));
    sub_ln147_2_fu_571_p2 <= std_logic_vector(unsigned(add_ln147_1_reg_1310) - unsigned(select_ln139_3_fu_558_p3));
    sub_ln147_3_fu_738_p2 <= std_logic_vector(unsigned(add_ln147_reg_1317) - unsigned(select_ln139_fu_725_p3));
    sub_ln147_fu_445_p2 <= std_logic_vector(unsigned(add_ln147_1_reg_1310) - unsigned(select_ln139_1_fu_432_p3));
    sub_ln458_fu_790_p2 <= std_logic_vector(unsigned(add_ln458_reg_1305) - unsigned(x_reg_1403));
    sub_ln507_1_fu_637_p2 <= std_logic_vector(unsigned(add_ln506_reg_1298) - unsigned(select_ln118_1_reg_1360));
    sub_ln507_2_fu_645_p2 <= std_logic_vector(unsigned(add_ln506_reg_1298) - unsigned(select_ln118_2_reg_1365));
    sub_ln507_fu_629_p2 <= std_logic_vector(unsigned(add_ln506_reg_1298) - unsigned(select_ln118_reg_1355));
    sub_ln703_1_fu_1009_p2 <= std_logic_vector(unsigned(src_kernel_win_0_va_8_reg_1464) - unsigned(src_kernel_win_0_va_5_fu_148));
    sub_ln703_fu_977_p2 <= std_logic_vector(unsigned(zext_ln703_fu_974_p1) - unsigned(zext_ln1118_fu_970_p1));
    tmp_10_fu_1097_p4 <= p_Val2_s_fu_1072_p2(10 downto 8);
    tmp_11_fu_456_p3 <= add_ln506_2_fu_450_p2(31 downto 31);
    tmp_12_fu_481_p3 <= add_ln506_2_fu_450_p2(31 downto 31);
    tmp_13_fu_519_p3 <= add_ln506_3_fu_513_p2(31 downto 31);
    tmp_14_fu_544_p3 <= add_ln506_3_fu_513_p2(31 downto 31);
    tmp_15_fu_664_p4 <= t_V_2_reg_279(31 downto 1);
    tmp_16_fu_686_p3 <= ImagLoc_x_fu_680_p2(31 downto 31);
    tmp_17_fu_711_p3 <= ImagLoc_x_fu_680_p2(31 downto 31);
    tmp_1_fu_393_p3 <= add_ln506_1_fu_387_p2(31 downto 31);
    tmp_2_fu_418_p3 <= add_ln506_1_fu_387_p2(31 downto 31);
    tmp_fu_354_p4 <= t_V_reg_268(31 downto 1);
    trunc_ln493_1_fu_641_p1 <= sub_ln507_1_fu_637_p2(2 - 1 downto 0);
    trunc_ln493_2_fu_649_p1 <= sub_ln507_2_fu_645_p2(2 - 1 downto 0);
    trunc_ln493_3_fu_800_p1 <= sub_ln458_fu_790_p2(2 - 1 downto 0);
    trunc_ln493_fu_633_p1 <= sub_ln507_fu_629_p2(2 - 1 downto 0);
    trunc_ln703_1_fu_1043_p1 <= sub_ln1118_1_fu_1033_p2(8 - 1 downto 0);
    trunc_ln703_fu_1014_p1 <= sub_ln1118_fu_999_p2(8 - 1 downto 0);
    x_fu_769_p3 <= 
        select_ln139_fu_725_p3 when (and_ln144_fu_763_p2(0) = '1') else 
        select_ln118_3_fu_743_p3;
    xor_ln118_1_fu_401_p2 <= (tmp_1_fu_393_p3 xor ap_const_lv1_1);
    xor_ln118_2_fu_464_p2 <= (tmp_11_fu_456_p3 xor ap_const_lv1_1);
    xor_ln118_3_fu_527_p2 <= (tmp_13_fu_519_p3 xor ap_const_lv1_1);
    xor_ln118_4_fu_694_p2 <= (tmp_16_fu_686_p3 xor ap_const_lv1_1);
    xor_ln118_5_fu_751_p2 <= (icmp_ln118_1_fu_700_p2 xor ap_const_lv1_1);
    xor_ln457_fu_624_p2 <= (icmp_ln887_reg_1330 xor ap_const_lv1_1);
    xor_ln785_fu_1164_p2 <= (p_Result_s_reg_1471 xor ap_const_lv1_1);
    zext_ln1118_1_fu_995_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln1_fu_987_p3),10));
    zext_ln1118_2_fu_1029_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(src_kernel_win_0_va_1_fu_132),9));
    zext_ln1118_fu_970_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(src_kernel_win_0_va_5_fu_148),9));
    zext_ln703_1_fu_1025_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln1118_1_fu_1018_p3),11));
    zext_ln703_2_fu_1047_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(src_kernel_win_0_va_6_reg_1450),10));
    zext_ln703_fu_974_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(src_kernel_win_0_va_8_reg_1464),9));
    zext_ln835_fu_794_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(x_reg_1403),64));
end behav;
