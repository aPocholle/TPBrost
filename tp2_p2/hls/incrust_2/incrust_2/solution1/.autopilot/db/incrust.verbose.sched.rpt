

================================================================
== Vivado HLS Report for 'incrust'
================================================================
* Date:           Wed Nov 15 16:20:51 2023

* Version:        2019.2 (Build 2704478 on Wed Nov 06 22:10:23 MST 2019)
* Project:        incrust_2
* Solution:       solution1
* Product family: zynq
* Target device:  xc7z020-clg484-1


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  | 10.00 ns | 5.918 ns |   1.25 ns  |
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+----------+----------+--------+--------+---------+
    |  Latency (cycles) |  Latency (absolute) |     Interval    | Pipeline|
    |   min   |   max   |    min   |    max   |   min  |   max  |   Type  |
    +---------+---------+----------+----------+--------+--------+---------+
    |   922561|   922561| 9.226 ms | 9.226 ms |  922561|  922561|   none  |
    +---------+---------+----------+----------+--------+--------+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +-------------+---------+---------+----------+-----------+-----------+------+----------+
        |             |  Latency (cycles) | Iteration|  Initiation Interval  | Trip |          |
        |  Loop Name  |   min   |   max   |  Latency |  achieved |   target  | Count| Pipelined|
        +-------------+---------+---------+----------+-----------+-----------+------+----------+
        |- Loop 1     |   922560|   922560|      1922|          -|          -|   480|    no    |
        | + Loop 1.1  |     1920|     1920|         3|          -|          -|   640|    no    |
        +-------------+---------+---------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 5
* Pipeline : 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 
3 --> 4 2 
4 --> 5 
5 --> 3 

* FSM state operations: 

State 1 <SV = 0> <Delay = 3.55>
ST_1 : Operation 6 [1/1] (0.00ns)   --->   "%pixel_1 = alloca i32"   --->   Operation 6 'alloca' 'pixel_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 7 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i8* %s_axis_video_V_data_V), !map !43"   --->   Operation 7 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 8 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i1* %s_axis_video_V_keep_V), !map !47"   --->   Operation 8 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 9 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i1* %s_axis_video_V_strb_V), !map !51"   --->   Operation 9 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 10 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i1* %s_axis_video_V_user_V), !map !55"   --->   Operation 10 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 11 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i1* %s_axis_video_V_last_V), !map !59"   --->   Operation 11 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 12 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i1* %s_axis_video_V_id_V), !map !63"   --->   Operation 12 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 13 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i1* %s_axis_video_V_dest_V), !map !67"   --->   Operation 13 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 14 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i8* %m_axis_video_V_data_V), !map !71"   --->   Operation 14 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 15 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i1* %m_axis_video_V_keep_V), !map !75"   --->   Operation 15 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 16 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i1* %m_axis_video_V_strb_V), !map !79"   --->   Operation 16 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 17 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i1* %m_axis_video_V_user_V), !map !83"   --->   Operation 17 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 18 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i1* %m_axis_video_V_last_V), !map !87"   --->   Operation 18 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 19 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i1* %m_axis_video_V_id_V), !map !91"   --->   Operation 19 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 20 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i1* %m_axis_video_V_dest_V), !map !95"   --->   Operation 20 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 21 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i32 %start_x), !map !99"   --->   Operation 21 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 22 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i32 %start_y), !map !105"   --->   Operation 22 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 23 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecTopModule([8 x i8]* @incrust_str) nounwind"   --->   Operation 23 'spectopmodule' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 24 [1/1] (1.00ns)   --->   "%start_y_read = call i32 @_ssdm_op_Read.s_axilite.i32(i32 %start_y)"   --->   Operation 24 'read' 'start_y_read' <Predicate = true> <Delay = 1.00> <Core = "s_axilite">   --->   Core 10 's_axilite' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write'>
ST_1 : Operation 25 [1/1] (1.00ns)   --->   "%start_x_read = call i32 @_ssdm_op_Read.s_axilite.i32(i32 %start_x)"   --->   Operation 25 'read' 'start_x_read' <Predicate = true> <Delay = 1.00> <Core = "s_axilite">   --->   Core 10 's_axilite' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write'>
ST_1 : Operation 26 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i32 0, [13 x i8]* @p_str, i32 0, i32 0, [1 x i8]* @p_str2, i32 0, i32 0, [1 x i8]* @p_str2, [1 x i8]* @p_str2, [1 x i8]* @p_str2, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str2, [1 x i8]* @p_str2) nounwind" [incrust_2/incrust.cpp:11]   --->   Operation 26 'specinterface' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 27 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i8* %s_axis_video_V_data_V, i1* %s_axis_video_V_keep_V, i1* %s_axis_video_V_strb_V, i1* %s_axis_video_V_user_V, i1* %s_axis_video_V_last_V, i1* %s_axis_video_V_id_V, i1* %s_axis_video_V_dest_V, [5 x i8]* @p_str3, i32 1, i32 1, [5 x i8]* @p_str4, i32 0, i32 0, [1 x i8]* @p_str2, [1 x i8]* @p_str2, [1 x i8]* @p_str2, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str2, [1 x i8]* @p_str2) nounwind" [incrust_2/incrust.cpp:11]   --->   Operation 27 'specinterface' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 28 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i8* %m_axis_video_V_data_V, i1* %m_axis_video_V_keep_V, i1* %m_axis_video_V_strb_V, i1* %m_axis_video_V_user_V, i1* %m_axis_video_V_last_V, i1* %m_axis_video_V_id_V, i1* %m_axis_video_V_dest_V, [5 x i8]* @p_str3, i32 1, i32 1, [5 x i8]* @p_str4, i32 0, i32 0, [1 x i8]* @p_str2, [1 x i8]* @p_str2, [1 x i8]* @p_str2, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str2, [1 x i8]* @p_str2) nounwind" [incrust_2/incrust.cpp:12]   --->   Operation 28 'specinterface' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 29 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i32 %start_x, [10 x i8]* @p_str5, i32 0, i32 0, [1 x i8]* @p_str2, i32 0, i32 0, [1 x i8]* @p_str2, [1 x i8]* @p_str2, [1 x i8]* @p_str2, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str2, [1 x i8]* @p_str2) nounwind" [incrust_2/incrust.cpp:13]   --->   Operation 29 'specinterface' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 30 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i32 %start_y, [10 x i8]* @p_str5, i32 0, i32 0, [1 x i8]* @p_str2, i32 0, i32 0, [1 x i8]* @p_str2, [1 x i8]* @p_str2, [1 x i8]* @p_str2, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str2, [1 x i8]* @p_str2) nounwind" [incrust_2/incrust.cpp:14]   --->   Operation 30 'specinterface' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 31 [1/1] (2.55ns)   --->   "%add_ln24 = add nsw i32 %start_x_read, 148" [incrust_2/incrust.cpp:24]   --->   Operation 31 'add' 'add_ln24' <Predicate = true> <Delay = 2.55> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 32 [1/1] (2.55ns)   --->   "%add_ln24_1 = add nsw i32 %start_y_read, 69" [incrust_2/incrust.cpp:24]   --->   Operation 32 'add' 'add_ln24_1' <Predicate = true> <Delay = 2.55> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 33 [1/1] (1.76ns)   --->   "store i32 0, i32* %pixel_1" [incrust_2/incrust.cpp:18]   --->   Operation 33 'store' <Predicate = true> <Delay = 1.76>
ST_1 : Operation 34 [1/1] (1.76ns)   --->   "br label %.loopexit" [incrust_2/incrust.cpp:18]   --->   Operation 34 'br' <Predicate = true> <Delay = 1.76>

State 2 <SV = 1> <Delay = 2.47>
ST_2 : Operation 35 [1/1] (0.00ns)   --->   "%i_0 = phi i9 [ 0, %0 ], [ %i, %.loopexit.loopexit ]"   --->   Operation 35 'phi' 'i_0' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 36 [1/1] (0.00ns)   --->   "%zext_ln18 = zext i9 %i_0 to i32" [incrust_2/incrust.cpp:18]   --->   Operation 36 'zext' 'zext_ln18' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 37 [1/1] (1.66ns)   --->   "%icmp_ln18 = icmp eq i9 %i_0, -32" [incrust_2/incrust.cpp:18]   --->   Operation 37 'icmp' 'icmp_ln18' <Predicate = true> <Delay = 1.66> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.47> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 38 [1/1] (0.00ns)   --->   "%empty = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 480, i64 480, i64 480)"   --->   Operation 38 'speclooptripcount' 'empty' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 39 [1/1] (1.82ns)   --->   "%i = add i9 %i_0, 1" [incrust_2/incrust.cpp:18]   --->   Operation 39 'add' 'i' <Predicate = true> <Delay = 1.82> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 40 [1/1] (0.00ns)   --->   "br i1 %icmp_ln18, label %1, label %.preheader.preheader" [incrust_2/incrust.cpp:18]   --->   Operation 40 'br' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 41 [1/1] (2.47ns)   --->   "%icmp_ln24 = icmp slt i32 %zext_ln18, %start_y_read" [incrust_2/incrust.cpp:24]   --->   Operation 41 'icmp' 'icmp_ln24' <Predicate = (!icmp_ln18)> <Delay = 2.47> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.47> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 42 [1/1] (2.47ns)   --->   "%icmp_ln24_1 = icmp slt i32 %zext_ln18, %add_ln24_1" [incrust_2/incrust.cpp:24]   --->   Operation 42 'icmp' 'icmp_ln24_1' <Predicate = (!icmp_ln18)> <Delay = 2.47> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.47> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 43 [1/1] (1.76ns)   --->   "br label %.preheader" [incrust_2/incrust.cpp:20]   --->   Operation 43 'br' <Predicate = (!icmp_ln18)> <Delay = 1.76>
ST_2 : Operation 44 [1/1] (0.00ns)   --->   "ret void" [incrust_2/incrust.cpp:31]   --->   Operation 44 'ret' <Predicate = (icmp_ln18)> <Delay = 0.00>

State 3 <SV = 2> <Delay = 5.91>
ST_3 : Operation 45 [1/1] (0.00ns)   --->   "%j_0 = phi i10 [ %j, %_ifconv ], [ 0, %.preheader.preheader ]"   --->   Operation 45 'phi' 'j_0' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 46 [1/1] (0.00ns)   --->   "%zext_ln20 = zext i10 %j_0 to i32" [incrust_2/incrust.cpp:20]   --->   Operation 46 'zext' 'zext_ln20' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 47 [1/1] (1.77ns)   --->   "%icmp_ln20 = icmp eq i10 %j_0, -384" [incrust_2/incrust.cpp:20]   --->   Operation 47 'icmp' 'icmp_ln20' <Predicate = true> <Delay = 1.77> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.47> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 48 [1/1] (0.00ns)   --->   "%empty_3 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 640, i64 640, i64 640)"   --->   Operation 48 'speclooptripcount' 'empty_3' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 49 [1/1] (1.73ns)   --->   "%j = add i10 %j_0, 1" [incrust_2/incrust.cpp:20]   --->   Operation 49 'add' 'j' <Predicate = true> <Delay = 1.73> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 50 [1/1] (0.00ns)   --->   "br i1 %icmp_ln20, label %.loopexit.loopexit, label %_ifconv" [incrust_2/incrust.cpp:20]   --->   Operation 50 'br' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 51 [1/1] (0.00ns)   --->   "%pixel_1_load = load i32* %pixel_1" [incrust_2/incrust.cpp:26]   --->   Operation 51 'load' 'pixel_1_load' <Predicate = (!icmp_ln20)> <Delay = 0.00>
ST_3 : Operation 52 [1/1] (2.47ns)   --->   "%icmp_ln24_2 = icmp slt i32 %zext_ln20, %start_x_read" [incrust_2/incrust.cpp:24]   --->   Operation 52 'icmp' 'icmp_ln24_2' <Predicate = (!icmp_ln20)> <Delay = 2.47> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.47> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 53 [1/1] (2.47ns)   --->   "%icmp_ln24_3 = icmp slt i32 %zext_ln20, %add_ln24" [incrust_2/incrust.cpp:24]   --->   Operation 53 'icmp' 'icmp_ln24_3' <Predicate = (!icmp_ln20)> <Delay = 2.47> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.47> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 54 [1/1] (0.00ns) (grouped into LUT with out node and_ln24)   --->   "%xor_ln24_1 = xor i1 %icmp_ln24_3, true" [incrust_2/incrust.cpp:24]   --->   Operation 54 'xor' 'xor_ln24_1' <Predicate = (!icmp_ln20)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 55 [1/1] (0.00ns) (grouped into LUT with out node and_ln24)   --->   "%or_ln24 = or i1 %icmp_ln24_2, %icmp_ln24" [incrust_2/incrust.cpp:24]   --->   Operation 55 'or' 'or_ln24' <Predicate = (!icmp_ln20)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 56 [1/1] (0.00ns) (grouped into LUT with out node and_ln24)   --->   "%or_ln24_1 = or i1 %or_ln24, %xor_ln24_1" [incrust_2/incrust.cpp:24]   --->   Operation 56 'or' 'or_ln24_1' <Predicate = (!icmp_ln20)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 57 [1/1] (0.00ns) (grouped into LUT with out node and_ln24)   --->   "%xor_ln24 = xor i1 %or_ln24_1, true" [incrust_2/incrust.cpp:24]   --->   Operation 57 'xor' 'xor_ln24' <Predicate = (!icmp_ln20)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 58 [1/1] (0.97ns) (out node of the LUT)   --->   "%and_ln24 = and i1 %icmp_ln24_1, %xor_ln24" [incrust_2/incrust.cpp:24]   --->   Operation 58 'and' 'and_ln24' <Predicate = (!icmp_ln20)> <Delay = 0.97> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 59 [1/1] (0.00ns)   --->   "%sext_ln25 = sext i32 %pixel_1_load to i64" [incrust_2/incrust.cpp:25]   --->   Operation 59 'sext' 'sext_ln25' <Predicate = (!icmp_ln20)> <Delay = 0.00>
ST_3 : Operation 60 [1/1] (0.00ns)   --->   "%im_incrust_V_addr = getelementptr [10064 x i8]* @im_incrust_V, i64 0, i64 %sext_ln25" [incrust_2/incrust.cpp:25]   --->   Operation 60 'getelementptr' 'im_incrust_V_addr' <Predicate = (!icmp_ln20)> <Delay = 0.00>
ST_3 : Operation 61 [2/2] (3.25ns)   --->   "%video_data_V_1 = load i8* %im_incrust_V_addr, align 1" [incrust_2/incrust.cpp:25]   --->   Operation 61 'load' 'video_data_V_1' <Predicate = (!icmp_ln20)> <Delay = 3.25> <Core = "ROM_nP">   --->   Core 52 'ROM_nP' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load'> <Ports = 0> <Width = 8> <Depth = 10064> <ROM>
ST_3 : Operation 62 [1/1] (2.55ns)   --->   "%pixel = add nsw i32 %pixel_1_load, 1" [incrust_2/incrust.cpp:26]   --->   Operation 62 'add' 'pixel' <Predicate = (!icmp_ln20)> <Delay = 2.55> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 63 [1/1] (0.69ns)   --->   "%pixel_2 = select i1 %and_ln24, i32 %pixel, i32 %pixel_1_load" [incrust_2/incrust.cpp:24]   --->   Operation 63 'select' 'pixel_2' <Predicate = (!icmp_ln20)> <Delay = 0.69> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 64 [1/1] (1.76ns)   --->   "store i32 %pixel_2, i32* %pixel_1" [incrust_2/incrust.cpp:20]   --->   Operation 64 'store' <Predicate = (!icmp_ln20)> <Delay = 1.76>
ST_3 : Operation 65 [1/1] (0.00ns)   --->   "br label %.loopexit"   --->   Operation 65 'br' <Predicate = (icmp_ln20)> <Delay = 0.00>

State 4 <SV = 3> <Delay = 4.50>
ST_4 : Operation 66 [1/1] (0.00ns)   --->   "%empty_4 = call { i8, i1, i1, i1, i1, i1, i1 } @_ssdm_op_Read.axis.volatile.i8P.i1P.i1P.i1P.i1P.i1P.i1P(i8* %s_axis_video_V_data_V, i1* %s_axis_video_V_keep_V, i1* %s_axis_video_V_strb_V, i1* %s_axis_video_V_user_V, i1* %s_axis_video_V_last_V, i1* %s_axis_video_V_id_V, i1* %s_axis_video_V_dest_V)" [incrust_2/incrust.cpp:22]   --->   Operation 66 'read' 'empty_4' <Predicate = true> <Delay = 0.00> <Core = "AXI4Stream">   --->   Core 5 'AXI4Stream' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : >
ST_4 : Operation 67 [1/1] (0.00ns) (grouped into LUT with out node video_data_V)   --->   "%tmp_data_V_1 = extractvalue { i8, i1, i1, i1, i1, i1, i1 } %empty_4, 0" [incrust_2/incrust.cpp:22]   --->   Operation 67 'extractvalue' 'tmp_data_V_1' <Predicate = (!and_ln24)> <Delay = 0.00>
ST_4 : Operation 68 [1/1] (0.00ns)   --->   "%tmp_keep_V = extractvalue { i8, i1, i1, i1, i1, i1, i1 } %empty_4, 1" [incrust_2/incrust.cpp:22]   --->   Operation 68 'extractvalue' 'tmp_keep_V' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 69 [1/1] (0.00ns)   --->   "%tmp_strb_V = extractvalue { i8, i1, i1, i1, i1, i1, i1 } %empty_4, 2" [incrust_2/incrust.cpp:22]   --->   Operation 69 'extractvalue' 'tmp_strb_V' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 70 [1/1] (0.00ns)   --->   "%tmp_user_V = extractvalue { i8, i1, i1, i1, i1, i1, i1 } %empty_4, 3" [incrust_2/incrust.cpp:22]   --->   Operation 70 'extractvalue' 'tmp_user_V' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 71 [1/1] (0.00ns)   --->   "%tmp_last_V = extractvalue { i8, i1, i1, i1, i1, i1, i1 } %empty_4, 4" [incrust_2/incrust.cpp:22]   --->   Operation 71 'extractvalue' 'tmp_last_V' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 72 [1/1] (0.00ns)   --->   "%tmp_id_V = extractvalue { i8, i1, i1, i1, i1, i1, i1 } %empty_4, 5" [incrust_2/incrust.cpp:22]   --->   Operation 72 'extractvalue' 'tmp_id_V' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 73 [1/1] (0.00ns)   --->   "%tmp_dest_V = extractvalue { i8, i1, i1, i1, i1, i1, i1 } %empty_4, 6" [incrust_2/incrust.cpp:22]   --->   Operation 73 'extractvalue' 'tmp_dest_V' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 74 [1/2] (3.25ns)   --->   "%video_data_V_1 = load i8* %im_incrust_V_addr, align 1" [incrust_2/incrust.cpp:25]   --->   Operation 74 'load' 'video_data_V_1' <Predicate = true> <Delay = 3.25> <Core = "ROM_nP">   --->   Core 52 'ROM_nP' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load'> <Ports = 0> <Width = 8> <Depth = 10064> <ROM>
ST_4 : Operation 75 [1/1] (1.24ns) (out node of the LUT)   --->   "%video_data_V = select i1 %and_ln24, i8 %video_data_V_1, i8 %tmp_data_V_1" [incrust_2/incrust.cpp:24]   --->   Operation 75 'select' 'video_data_V' <Predicate = true> <Delay = 1.24> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_4 : Operation 76 [2/2] (0.00ns)   --->   "call void @_ssdm_op_Write.axis.volatile.i8P.i1P.i1P.i1P.i1P.i1P.i1P(i8* %m_axis_video_V_data_V, i1* %m_axis_video_V_keep_V, i1* %m_axis_video_V_strb_V, i1* %m_axis_video_V_user_V, i1* %m_axis_video_V_last_V, i1* %m_axis_video_V_id_V, i1* %m_axis_video_V_dest_V, i8 %video_data_V, i1 %tmp_keep_V, i1 %tmp_strb_V, i1 %tmp_user_V, i1 %tmp_last_V, i1 %tmp_id_V, i1 %tmp_dest_V)" [incrust_2/incrust.cpp:28]   --->   Operation 76 'write' <Predicate = true> <Delay = 0.00> <Core = "AXI4Stream">   --->   Core 5 'AXI4Stream' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : >

State 5 <SV = 4> <Delay = 0.00>
ST_5 : Operation 77 [1/2] (0.00ns)   --->   "call void @_ssdm_op_Write.axis.volatile.i8P.i1P.i1P.i1P.i1P.i1P.i1P(i8* %m_axis_video_V_data_V, i1* %m_axis_video_V_keep_V, i1* %m_axis_video_V_strb_V, i1* %m_axis_video_V_user_V, i1* %m_axis_video_V_last_V, i1* %m_axis_video_V_id_V, i1* %m_axis_video_V_dest_V, i8 %video_data_V, i1 %tmp_keep_V, i1 %tmp_strb_V, i1 %tmp_user_V, i1 %tmp_last_V, i1 %tmp_id_V, i1 %tmp_dest_V)" [incrust_2/incrust.cpp:28]   --->   Operation 77 'write' <Predicate = true> <Delay = 0.00> <Core = "AXI4Stream">   --->   Core 5 'AXI4Stream' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : >
ST_5 : Operation 78 [1/1] (0.00ns)   --->   "br label %.preheader" [incrust_2/incrust.cpp:20]   --->   Operation 78 'br' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 1.25ns.

 <State 1>: 3.55ns
The critical path consists of the following:
	s_axi read on port 'start_y' [37]  (1 ns)
	'add' operation ('add_ln24_1', incrust_2/incrust.cpp:24) [45]  (2.55 ns)

 <State 2>: 2.47ns
The critical path consists of the following:
	'phi' operation ('i') with incoming values : ('i', incrust_2/incrust.cpp:18) [49]  (0 ns)
	'icmp' operation ('icmp_ln24', incrust_2/incrust.cpp:24) [56]  (2.47 ns)

 <State 3>: 5.92ns
The critical path consists of the following:
	'phi' operation ('j') with incoming values : ('j', incrust_2/incrust.cpp:20) [60]  (0 ns)
	'icmp' operation ('icmp_ln24_2', incrust_2/incrust.cpp:24) [76]  (2.47 ns)
	'or' operation ('or_ln24', incrust_2/incrust.cpp:24) [79]  (0 ns)
	'or' operation ('or_ln24_1', incrust_2/incrust.cpp:24) [80]  (0 ns)
	'xor' operation ('xor_ln24', incrust_2/incrust.cpp:24) [81]  (0 ns)
	'and' operation ('and_ln24', incrust_2/incrust.cpp:24) [82]  (0.978 ns)
	'select' operation ('pixel', incrust_2/incrust.cpp:24) [88]  (0.698 ns)
	'store' operation ('store_ln20', incrust_2/incrust.cpp:20) of variable 'pixel', incrust_2/incrust.cpp:24 on local variable 'pixel' [90]  (1.77 ns)

 <State 4>: 4.5ns
The critical path consists of the following:
	'load' operation ('video.data.V', incrust_2/incrust.cpp:25) on array 'im_incrust_V' [85]  (3.25 ns)
	'select' operation ('video.data.V', incrust_2/incrust.cpp:24) [87]  (1.25 ns)

 <State 5>: 0ns
The critical path consists of the following:


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
