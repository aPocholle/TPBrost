// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _video_crop_HH_
#define _video_crop_HH_

#include "systemc.h"
#include "AESL_pkg.h"


namespace ap_rtl {

struct video_crop : public sc_module {
    // Port declarations 27
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst_n;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_in< sc_lv<1> > mode_V;
    sc_in< sc_lv<8> > s_axis_video_TDATA;
    sc_in< sc_logic > s_axis_video_TVALID;
    sc_out< sc_logic > s_axis_video_TREADY;
    sc_in< sc_lv<1> > s_axis_video_TKEEP;
    sc_in< sc_lv<1> > s_axis_video_TSTRB;
    sc_in< sc_lv<1> > s_axis_video_TUSER;
    sc_in< sc_lv<1> > s_axis_video_TLAST;
    sc_in< sc_lv<1> > s_axis_video_TID;
    sc_in< sc_lv<1> > s_axis_video_TDEST;
    sc_out< sc_lv<8> > m_axis_video_TDATA;
    sc_out< sc_logic > m_axis_video_TVALID;
    sc_in< sc_logic > m_axis_video_TREADY;
    sc_out< sc_lv<1> > m_axis_video_TKEEP;
    sc_out< sc_lv<1> > m_axis_video_TSTRB;
    sc_out< sc_lv<1> > m_axis_video_TUSER;
    sc_out< sc_lv<1> > m_axis_video_TLAST;
    sc_out< sc_lv<1> > m_axis_video_TID;
    sc_out< sc_lv<1> > m_axis_video_TDEST;
    sc_in< sc_lv<32> > hsize_in;
    sc_in< sc_lv<32> > vsize_in;
    sc_signal< sc_logic > ap_var_for_const0;
    sc_signal< sc_lv<1> > ap_var_for_const1;


    // Module declarations
    video_crop(sc_module_name name);
    SC_HAS_PROCESS(video_crop);

    ~video_crop();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    regslice_both<8>* regslice_both_s_axis_video_V_data_V_U;
    regslice_both<1>* regslice_both_s_axis_video_V_keep_V_U;
    regslice_both<1>* regslice_both_s_axis_video_V_strb_V_U;
    regslice_both<1>* regslice_both_s_axis_video_V_user_V_U;
    regslice_both<1>* regslice_both_s_axis_video_V_last_V_U;
    regslice_both<1>* regslice_both_s_axis_video_V_id_V_U;
    regslice_both<1>* regslice_both_s_axis_video_V_dest_V_U;
    regslice_both<8>* regslice_both_m_axis_video_V_data_V_U;
    regslice_both<1>* regslice_both_m_axis_video_V_keep_V_U;
    regslice_both<1>* regslice_both_m_axis_video_V_strb_V_U;
    regslice_both<1>* regslice_both_m_axis_video_V_user_V_U;
    regslice_both<1>* regslice_both_m_axis_video_V_last_V_U;
    regslice_both<1>* regslice_both_m_axis_video_V_id_V_U;
    regslice_both<1>* regslice_both_m_axis_video_V_dest_V_U;
    sc_signal< sc_logic > ap_rst_n_inv;
    sc_signal< sc_lv<3> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_logic > m_axis_video_TDATA_blk_n;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage0;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter1;
    sc_signal< bool > ap_block_pp0_stage0;
    sc_signal< sc_lv<1> > icmp_ln13_reg_252;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter2;
    sc_signal< sc_lv<1> > icmp_ln13_reg_252_pp0_iter1_reg;
    sc_signal< sc_lv<64> > indvar_flatten_reg_111;
    sc_signal< sc_lv<31> > i_0_reg_122;
    sc_signal< sc_lv<31> > val_assign_reg_133;
    sc_signal< sc_lv<32> > add_ln24_fu_144_p2;
    sc_signal< sc_lv<32> > add_ln24_reg_242;
    sc_signal< sc_lv<64> > bound_fu_158_p2;
    sc_signal< sc_lv<64> > bound_reg_247;
    sc_signal< sc_lv<1> > icmp_ln13_fu_173_p2;
    sc_signal< bool > ap_block_state2_pp0_stage0_iter0;
    sc_signal< bool > ap_block_state3_pp0_stage0_iter1;
    sc_signal< bool > ap_block_state3_io;
    sc_signal< bool > ap_block_state4_pp0_stage0_iter2;
    sc_signal< bool > ap_block_state4_io;
    sc_signal< bool > ap_block_pp0_stage0_11001;
    sc_signal< sc_lv<64> > add_ln13_fu_178_p2;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter0;
    sc_signal< sc_lv<31> > select_ln13_1_fu_202_p3;
    sc_signal< sc_lv<31> > select_ln13_1_reg_261;
    sc_signal< sc_lv<1> > tmp_user_V_fu_216_p2;
    sc_signal< sc_lv<1> > tmp_user_V_reg_266;
    sc_signal< sc_lv<1> > tmp_last_V_fu_222_p2;
    sc_signal< sc_lv<1> > tmp_last_V_reg_271;
    sc_signal< sc_lv<8> > video_data_V_fu_227_p1;
    sc_signal< sc_lv<8> > video_data_V_reg_276;
    sc_signal< sc_lv<31> > j_fu_231_p2;
    sc_signal< bool > ap_block_pp0_stage0_subdone;
    sc_signal< sc_logic > ap_condition_pp0_exit_iter0_state2;
    sc_signal< sc_lv<31> > ap_phi_mux_i_0_phi_fu_126_p4;
    sc_signal< bool > ap_block_pp0_stage0_01001;
    sc_signal< sc_lv<32> > bound_fu_158_p0;
    sc_signal< sc_lv<32> > bound_fu_158_p1;
    sc_signal< sc_lv<32> > zext_ln16_fu_164_p1;
    sc_signal< sc_lv<1> > icmp_ln16_fu_168_p2;
    sc_signal< sc_lv<31> > select_ln13_fu_184_p3;
    sc_signal< sc_lv<31> > add_ln13_1_fu_196_p2;
    sc_signal< sc_lv<31> > or_ln19_fu_210_p2;
    sc_signal< sc_lv<32> > zext_ln13_fu_192_p1;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_logic > regslice_both_m_axis_video_V_data_V_U_apdone_blk;
    sc_signal< sc_lv<3> > ap_NS_fsm;
    sc_signal< sc_logic > ap_idle_pp0;
    sc_signal< sc_logic > ap_enable_pp0;
    sc_signal< sc_logic > regslice_both_s_axis_video_V_data_V_U_apdone_blk;
    sc_signal< sc_lv<8> > s_axis_video_TDATA_int;
    sc_signal< sc_logic > s_axis_video_TVALID_int;
    sc_signal< sc_logic > regslice_both_s_axis_video_V_data_V_U_ack_in;
    sc_signal< sc_logic > regslice_both_s_axis_video_V_keep_V_U_apdone_blk;
    sc_signal< sc_lv<1> > s_axis_video_TKEEP_int;
    sc_signal< sc_logic > regslice_both_s_axis_video_V_keep_V_U_vld_out;
    sc_signal< sc_logic > regslice_both_s_axis_video_V_keep_V_U_ack_in;
    sc_signal< sc_logic > regslice_both_s_axis_video_V_strb_V_U_apdone_blk;
    sc_signal< sc_lv<1> > s_axis_video_TSTRB_int;
    sc_signal< sc_logic > regslice_both_s_axis_video_V_strb_V_U_vld_out;
    sc_signal< sc_logic > regslice_both_s_axis_video_V_strb_V_U_ack_in;
    sc_signal< sc_logic > regslice_both_s_axis_video_V_user_V_U_apdone_blk;
    sc_signal< sc_lv<1> > s_axis_video_TUSER_int;
    sc_signal< sc_logic > regslice_both_s_axis_video_V_user_V_U_vld_out;
    sc_signal< sc_logic > regslice_both_s_axis_video_V_user_V_U_ack_in;
    sc_signal< sc_logic > regslice_both_s_axis_video_V_last_V_U_apdone_blk;
    sc_signal< sc_lv<1> > s_axis_video_TLAST_int;
    sc_signal< sc_logic > regslice_both_s_axis_video_V_last_V_U_vld_out;
    sc_signal< sc_logic > regslice_both_s_axis_video_V_last_V_U_ack_in;
    sc_signal< sc_logic > regslice_both_s_axis_video_V_id_V_U_apdone_blk;
    sc_signal< sc_lv<1> > s_axis_video_TID_int;
    sc_signal< sc_logic > regslice_both_s_axis_video_V_id_V_U_vld_out;
    sc_signal< sc_logic > regslice_both_s_axis_video_V_id_V_U_ack_in;
    sc_signal< sc_logic > regslice_both_s_axis_video_V_dest_V_U_apdone_blk;
    sc_signal< sc_lv<1> > s_axis_video_TDEST_int;
    sc_signal< sc_logic > regslice_both_s_axis_video_V_dest_V_U_vld_out;
    sc_signal< sc_logic > regslice_both_s_axis_video_V_dest_V_U_ack_in;
    sc_signal< sc_logic > m_axis_video_TVALID_int;
    sc_signal< sc_logic > m_axis_video_TREADY_int;
    sc_signal< sc_logic > regslice_both_m_axis_video_V_data_V_U_vld_out;
    sc_signal< sc_logic > regslice_both_m_axis_video_V_keep_V_U_apdone_blk;
    sc_signal< sc_logic > regslice_both_m_axis_video_V_keep_V_U_ack_in_dummy;
    sc_signal< sc_logic > regslice_both_m_axis_video_V_keep_V_U_vld_out;
    sc_signal< sc_logic > regslice_both_m_axis_video_V_strb_V_U_apdone_blk;
    sc_signal< sc_logic > regslice_both_m_axis_video_V_strb_V_U_ack_in_dummy;
    sc_signal< sc_logic > regslice_both_m_axis_video_V_strb_V_U_vld_out;
    sc_signal< sc_logic > regslice_both_m_axis_video_V_user_V_U_apdone_blk;
    sc_signal< sc_logic > regslice_both_m_axis_video_V_user_V_U_ack_in_dummy;
    sc_signal< sc_logic > regslice_both_m_axis_video_V_user_V_U_vld_out;
    sc_signal< sc_logic > regslice_both_m_axis_video_V_last_V_U_apdone_blk;
    sc_signal< sc_logic > regslice_both_m_axis_video_V_last_V_U_ack_in_dummy;
    sc_signal< sc_logic > regslice_both_m_axis_video_V_last_V_U_vld_out;
    sc_signal< sc_logic > regslice_both_m_axis_video_V_id_V_U_apdone_blk;
    sc_signal< sc_logic > regslice_both_m_axis_video_V_id_V_U_ack_in_dummy;
    sc_signal< sc_logic > regslice_both_m_axis_video_V_id_V_U_vld_out;
    sc_signal< sc_logic > regslice_both_m_axis_video_V_dest_V_U_apdone_blk;
    sc_signal< sc_logic > regslice_both_m_axis_video_V_dest_V_U_ack_in_dummy;
    sc_signal< sc_logic > regslice_both_m_axis_video_V_dest_V_U_vld_out;
    sc_signal< sc_lv<64> > bound_fu_158_p00;
    sc_signal< sc_lv<64> > bound_fu_158_p10;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<3> ap_ST_fsm_state1;
    static const sc_lv<3> ap_ST_fsm_pp0_stage0;
    static const sc_lv<3> ap_ST_fsm_state5;
    static const sc_lv<32> ap_const_lv32_0;
    static const bool ap_const_boolean_1;
    static const sc_lv<32> ap_const_lv32_1;
    static const bool ap_const_boolean_0;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<64> ap_const_lv64_0;
    static const sc_lv<31> ap_const_lv31_0;
    static const sc_lv<32> ap_const_lv32_FFFFFFFF;
    static const sc_lv<64> ap_const_lv64_1;
    static const sc_lv<31> ap_const_lv31_1;
    static const sc_lv<32> ap_const_lv32_2;
    // Thread declarations
    void thread_ap_var_for_const0();
    void thread_ap_var_for_const1();
    void thread_ap_clk_no_reset_();
    void thread_add_ln13_1_fu_196_p2();
    void thread_add_ln13_fu_178_p2();
    void thread_add_ln24_fu_144_p2();
    void thread_ap_CS_fsm_pp0_stage0();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state5();
    void thread_ap_block_pp0_stage0();
    void thread_ap_block_pp0_stage0_01001();
    void thread_ap_block_pp0_stage0_11001();
    void thread_ap_block_pp0_stage0_subdone();
    void thread_ap_block_state2_pp0_stage0_iter0();
    void thread_ap_block_state3_io();
    void thread_ap_block_state3_pp0_stage0_iter1();
    void thread_ap_block_state4_io();
    void thread_ap_block_state4_pp0_stage0_iter2();
    void thread_ap_condition_pp0_exit_iter0_state2();
    void thread_ap_done();
    void thread_ap_enable_pp0();
    void thread_ap_idle();
    void thread_ap_idle_pp0();
    void thread_ap_phi_mux_i_0_phi_fu_126_p4();
    void thread_ap_ready();
    void thread_ap_rst_n_inv();
    void thread_bound_fu_158_p0();
    void thread_bound_fu_158_p00();
    void thread_bound_fu_158_p1();
    void thread_bound_fu_158_p10();
    void thread_bound_fu_158_p2();
    void thread_icmp_ln13_fu_173_p2();
    void thread_icmp_ln16_fu_168_p2();
    void thread_j_fu_231_p2();
    void thread_m_axis_video_TDATA_blk_n();
    void thread_m_axis_video_TVALID();
    void thread_m_axis_video_TVALID_int();
    void thread_or_ln19_fu_210_p2();
    void thread_s_axis_video_TREADY();
    void thread_select_ln13_1_fu_202_p3();
    void thread_select_ln13_fu_184_p3();
    void thread_tmp_last_V_fu_222_p2();
    void thread_tmp_user_V_fu_216_p2();
    void thread_video_data_V_fu_227_p1();
    void thread_zext_ln13_fu_192_p1();
    void thread_zext_ln16_fu_164_p1();
    void thread_ap_NS_fsm();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
