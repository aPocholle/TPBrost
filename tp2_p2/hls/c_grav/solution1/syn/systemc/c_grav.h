// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _c_grav_HH_
#define _c_grav_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "c_grav_udiv_32ns_bkb.h"

namespace ap_rtl {

struct c_grav : public sc_module {
    // Port declarations 27
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst_n;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_in< sc_lv<1> > cg_on_V;
    sc_in< sc_lv<8> > s_axis_video_TDATA;
    sc_in< sc_logic > s_axis_video_TVALID;
    sc_out< sc_logic > s_axis_video_TREADY;
    sc_in< sc_lv<1> > s_axis_video_TKEEP;
    sc_in< sc_lv<1> > s_axis_video_TSTRB;
    sc_in< sc_lv<1> > s_axis_video_TUSER;
    sc_in< sc_lv<1> > s_axis_video_TLAST;
    sc_in< sc_lv<1> > s_axis_video_TID;
    sc_in< sc_lv<1> > s_axis_video_TDEST;
    sc_out< sc_lv<8> > m_axis_video_TDATA;
    sc_out< sc_logic > m_axis_video_TVALID;
    sc_in< sc_logic > m_axis_video_TREADY;
    sc_out< sc_lv<1> > m_axis_video_TKEEP;
    sc_out< sc_lv<1> > m_axis_video_TSTRB;
    sc_out< sc_lv<1> > m_axis_video_TUSER;
    sc_out< sc_lv<1> > m_axis_video_TLAST;
    sc_out< sc_lv<1> > m_axis_video_TID;
    sc_out< sc_lv<1> > m_axis_video_TDEST;
    sc_in< sc_lv<32> > hsize_in;
    sc_in< sc_lv<32> > vsize_in;


    // Module declarations
    c_grav(sc_module_name name);
    SC_HAS_PROCESS(c_grav);

    ~c_grav();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    c_grav_udiv_32ns_bkb<1,36,32,32,32>* c_grav_udiv_32ns_bkb_U1;
    c_grav_udiv_32ns_bkb<1,36,32,32,32>* c_grav_udiv_32ns_bkb_U2;
    regslice_both<8>* regslice_both_s_axis_video_V_data_V_U;
    regslice_both<1>* regslice_both_s_axis_video_V_keep_V_U;
    regslice_both<1>* regslice_both_s_axis_video_V_strb_V_U;
    regslice_both<1>* regslice_both_s_axis_video_V_user_V_U;
    regslice_both<1>* regslice_both_s_axis_video_V_last_V_U;
    regslice_both<1>* regslice_both_s_axis_video_V_id_V_U;
    regslice_both<1>* regslice_both_s_axis_video_V_dest_V_U;
    regslice_both<8>* regslice_both_m_axis_video_V_data_V_U;
    regslice_both<1>* regslice_both_m_axis_video_V_keep_V_U;
    regslice_both<1>* regslice_both_m_axis_video_V_strb_V_U;
    regslice_both<1>* regslice_both_m_axis_video_V_user_V_U;
    regslice_both<1>* regslice_both_m_axis_video_V_last_V_U;
    regslice_both<1>* regslice_both_m_axis_video_V_id_V_U;
    regslice_both<1>* regslice_both_m_axis_video_V_dest_V_U;
    sc_signal< sc_logic > ap_rst_n_inv;
    sc_signal< sc_lv<38> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<32> > cgy_r;
    sc_signal< sc_lv<32> > cgx_r;
    sc_signal< sc_logic > s_axis_video_TDATA_blk_n;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage0;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter0;
    sc_signal< bool > ap_block_pp0_stage0;
    sc_signal< sc_lv<1> > icmp_ln19_fu_251_p2;
    sc_signal< sc_logic > m_axis_video_TDATA_blk_n;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter2;
    sc_signal< sc_lv<1> > icmp_ln19_reg_497;
    sc_signal< sc_lv<1> > icmp_ln19_reg_497_pp0_iter1_reg;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter3;
    sc_signal< sc_lv<1> > icmp_ln19_reg_497_pp0_iter2_reg;
    sc_signal< sc_lv<64> > indvar_flatten_reg_145;
    sc_signal< sc_lv<31> > i_0_reg_156;
    sc_signal< sc_lv<32> > nb_1_reg_167;
    sc_signal< sc_lv<32> > cgx_1_reg_179;
    sc_signal< sc_lv<32> > cgy_1_reg_191;
    sc_signal< sc_lv<31> > j_0_reg_203;
    sc_signal< sc_lv<64> > bound_fu_236_p2;
    sc_signal< sc_lv<64> > bound_reg_492;
    sc_signal< bool > ap_block_state2_pp0_stage0_iter0;
    sc_signal< bool > ap_block_state3_pp0_stage0_iter1;
    sc_signal< bool > ap_block_state4_pp0_stage0_iter2;
    sc_signal< bool > ap_block_state4_io;
    sc_signal< bool > ap_block_state5_pp0_stage0_iter3;
    sc_signal< bool > ap_block_state5_io;
    sc_signal< bool > ap_block_pp0_stage0_11001;
    sc_signal< sc_lv<64> > add_ln19_fu_256_p2;
    sc_signal< sc_lv<31> > select_ln19_1_fu_276_p3;
    sc_signal< sc_lv<31> > select_ln19_1_reg_506;
    sc_signal< sc_lv<8> > tmp_data_V_1_reg_512;
    sc_signal< sc_lv<8> > tmp_data_V_1_reg_512_pp0_iter1_reg;
    sc_signal< sc_lv<1> > tmp_keep_V_reg_519;
    sc_signal< sc_lv<1> > tmp_keep_V_reg_519_pp0_iter1_reg;
    sc_signal< sc_lv<1> > tmp_strb_V_reg_524;
    sc_signal< sc_lv<1> > tmp_strb_V_reg_524_pp0_iter1_reg;
    sc_signal< sc_lv<1> > tmp_user_V_reg_529;
    sc_signal< sc_lv<1> > tmp_user_V_reg_529_pp0_iter1_reg;
    sc_signal< sc_lv<1> > tmp_last_V_reg_534;
    sc_signal< sc_lv<1> > tmp_last_V_reg_534_pp0_iter1_reg;
    sc_signal< sc_lv<1> > tmp_id_V_reg_539;
    sc_signal< sc_lv<1> > tmp_id_V_reg_539_pp0_iter1_reg;
    sc_signal< sc_lv<1> > tmp_dest_V_reg_544;
    sc_signal< sc_lv<1> > tmp_dest_V_reg_544_pp0_iter1_reg;
    sc_signal< sc_lv<1> > and_ln26_fu_328_p2;
    sc_signal< sc_lv<1> > and_ln26_reg_549;
    sc_signal< sc_lv<32> > cgx_2_fu_340_p3;
    sc_signal< sc_lv<32> > cgx_2_reg_555;
    sc_signal< sc_lv<32> > sub_ln32_fu_352_p2;
    sc_signal< sc_lv<32> > sub_ln32_reg_560;
    sc_signal< sc_lv<31> > j_fu_358_p2;
    sc_signal< sc_lv<32> > nb_2_fu_379_p3;
    sc_signal< sc_lv<32> > nb_2_reg_572;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter1;
    sc_signal< sc_lv<32> > cgy_2_fu_386_p3;
    sc_signal< sc_lv<32> > cgy_2_reg_577;
    sc_signal< sc_lv<1> > icmp_ln32_fu_410_p2;
    sc_signal< sc_lv<1> > icmp_ln32_reg_582;
    sc_signal< sc_lv<1> > icmp_ln32_1_fu_446_p2;
    sc_signal< sc_lv<1> > icmp_ln32_1_reg_586;
    sc_signal< sc_lv<8> > select_ln34_fu_452_p3;
    sc_signal< bool > ap_block_pp0_stage0_subdone;
    sc_signal< sc_logic > ap_condition_pp0_exit_iter0_state2;
    sc_signal< sc_lv<31> > ap_phi_mux_i_0_phi_fu_160_p4;
    sc_signal< sc_lv<32> > ap_phi_mux_nb_1_phi_fu_171_p4;
    sc_signal< sc_lv<32> > ap_phi_mux_cgx_1_phi_fu_183_p4;
    sc_signal< sc_lv<32> > ap_phi_mux_cgy_1_phi_fu_195_p4;
    sc_signal< sc_lv<8> > ap_phi_mux_tmp_data_V_phi_fu_218_p6;
    sc_signal< sc_lv<8> > ap_phi_reg_pp0_iter0_tmp_data_V_reg_214;
    sc_signal< sc_lv<8> > ap_phi_reg_pp0_iter1_tmp_data_V_reg_214;
    sc_signal< sc_lv<8> > ap_phi_reg_pp0_iter2_tmp_data_V_reg_214;
    sc_signal< sc_lv<32> > grp_fu_464_p2;
    sc_signal< sc_logic > ap_CS_fsm_state41;
    sc_signal< sc_logic > regslice_both_m_axis_video_V_data_V_U_apdone_blk;
    sc_signal< sc_lv<32> > grp_fu_458_p2;
    sc_signal< bool > ap_block_pp0_stage0_01001;
    sc_signal< sc_lv<32> > bound_fu_236_p0;
    sc_signal< sc_lv<32> > bound_fu_236_p1;
    sc_signal< sc_lv<32> > zext_ln22_fu_242_p1;
    sc_signal< sc_lv<1> > icmp_ln22_fu_246_p2;
    sc_signal< sc_lv<31> > add_ln19_1_fu_270_p2;
    sc_signal< sc_lv<31> > select_ln19_fu_262_p3;
    sc_signal< sc_lv<1> > icmp_ln25_fu_316_p2;
    sc_signal< sc_lv<1> > icmp_ln887_fu_322_p2;
    sc_signal< sc_lv<32> > zext_ln19_1_fu_284_p1;
    sc_signal< sc_lv<32> > cgx_fu_334_p2;
    sc_signal< sc_lv<32> > zext_ln19_fu_364_p1;
    sc_signal< sc_lv<32> > nb_fu_367_p2;
    sc_signal< sc_lv<32> > cgy_fu_373_p2;
    sc_signal< sc_lv<1> > abscond_fu_398_p2;
    sc_signal< sc_lv<32> > neg_fu_393_p2;
    sc_signal< sc_lv<32> > abs_fu_403_p3;
    sc_signal< sc_lv<32> > sub_ln32_1_fu_420_p2;
    sc_signal< sc_lv<1> > abscond35_fu_432_p2;
    sc_signal< sc_lv<32> > neg34_fu_426_p2;
    sc_signal< sc_lv<32> > abs36_fu_438_p3;
    sc_signal< sc_logic > ap_CS_fsm_state6;
    sc_signal< sc_logic > grp_fu_458_ap_start;
    sc_signal< sc_logic > grp_fu_458_ap_done;
    sc_signal< sc_logic > grp_fu_458_ce;
    sc_signal< sc_logic > grp_fu_464_ap_start;
    sc_signal< sc_logic > grp_fu_464_ap_done;
    sc_signal< sc_logic > grp_fu_464_ce;
    sc_signal< sc_lv<38> > ap_NS_fsm;
    sc_signal< sc_logic > ap_idle_pp0;
    sc_signal< sc_logic > ap_enable_pp0;
    sc_signal< sc_logic > regslice_both_s_axis_video_V_data_V_U_apdone_blk;
    sc_signal< sc_lv<8> > s_axis_video_TDATA_int;
    sc_signal< sc_logic > s_axis_video_TVALID_int;
    sc_signal< sc_logic > s_axis_video_TREADY_int;
    sc_signal< sc_logic > regslice_both_s_axis_video_V_data_V_U_ack_in;
    sc_signal< sc_logic > regslice_both_s_axis_video_V_keep_V_U_apdone_blk;
    sc_signal< sc_lv<1> > s_axis_video_TKEEP_int;
    sc_signal< sc_logic > regslice_both_s_axis_video_V_keep_V_U_vld_out;
    sc_signal< sc_logic > regslice_both_s_axis_video_V_keep_V_U_ack_in;
    sc_signal< sc_logic > regslice_both_s_axis_video_V_strb_V_U_apdone_blk;
    sc_signal< sc_lv<1> > s_axis_video_TSTRB_int;
    sc_signal< sc_logic > regslice_both_s_axis_video_V_strb_V_U_vld_out;
    sc_signal< sc_logic > regslice_both_s_axis_video_V_strb_V_U_ack_in;
    sc_signal< sc_logic > regslice_both_s_axis_video_V_user_V_U_apdone_blk;
    sc_signal< sc_lv<1> > s_axis_video_TUSER_int;
    sc_signal< sc_logic > regslice_both_s_axis_video_V_user_V_U_vld_out;
    sc_signal< sc_logic > regslice_both_s_axis_video_V_user_V_U_ack_in;
    sc_signal< sc_logic > regslice_both_s_axis_video_V_last_V_U_apdone_blk;
    sc_signal< sc_lv<1> > s_axis_video_TLAST_int;
    sc_signal< sc_logic > regslice_both_s_axis_video_V_last_V_U_vld_out;
    sc_signal< sc_logic > regslice_both_s_axis_video_V_last_V_U_ack_in;
    sc_signal< sc_logic > regslice_both_s_axis_video_V_id_V_U_apdone_blk;
    sc_signal< sc_lv<1> > s_axis_video_TID_int;
    sc_signal< sc_logic > regslice_both_s_axis_video_V_id_V_U_vld_out;
    sc_signal< sc_logic > regslice_both_s_axis_video_V_id_V_U_ack_in;
    sc_signal< sc_logic > regslice_both_s_axis_video_V_dest_V_U_apdone_blk;
    sc_signal< sc_lv<1> > s_axis_video_TDEST_int;
    sc_signal< sc_logic > regslice_both_s_axis_video_V_dest_V_U_vld_out;
    sc_signal< sc_logic > regslice_both_s_axis_video_V_dest_V_U_ack_in;
    sc_signal< sc_logic > m_axis_video_TVALID_int;
    sc_signal< sc_logic > m_axis_video_TREADY_int;
    sc_signal< sc_logic > regslice_both_m_axis_video_V_data_V_U_vld_out;
    sc_signal< sc_logic > regslice_both_m_axis_video_V_keep_V_U_apdone_blk;
    sc_signal< sc_logic > regslice_both_m_axis_video_V_keep_V_U_ack_in_dummy;
    sc_signal< sc_logic > regslice_both_m_axis_video_V_keep_V_U_vld_out;
    sc_signal< sc_logic > regslice_both_m_axis_video_V_strb_V_U_apdone_blk;
    sc_signal< sc_logic > regslice_both_m_axis_video_V_strb_V_U_ack_in_dummy;
    sc_signal< sc_logic > regslice_both_m_axis_video_V_strb_V_U_vld_out;
    sc_signal< sc_logic > regslice_both_m_axis_video_V_user_V_U_apdone_blk;
    sc_signal< sc_logic > regslice_both_m_axis_video_V_user_V_U_ack_in_dummy;
    sc_signal< sc_logic > regslice_both_m_axis_video_V_user_V_U_vld_out;
    sc_signal< sc_logic > regslice_both_m_axis_video_V_last_V_U_apdone_blk;
    sc_signal< sc_logic > regslice_both_m_axis_video_V_last_V_U_ack_in_dummy;
    sc_signal< sc_logic > regslice_both_m_axis_video_V_last_V_U_vld_out;
    sc_signal< sc_logic > regslice_both_m_axis_video_V_id_V_U_apdone_blk;
    sc_signal< sc_logic > regslice_both_m_axis_video_V_id_V_U_ack_in_dummy;
    sc_signal< sc_logic > regslice_both_m_axis_video_V_id_V_U_vld_out;
    sc_signal< sc_logic > regslice_both_m_axis_video_V_dest_V_U_apdone_blk;
    sc_signal< sc_logic > regslice_both_m_axis_video_V_dest_V_U_ack_in_dummy;
    sc_signal< sc_logic > regslice_both_m_axis_video_V_dest_V_U_vld_out;
    sc_signal< sc_lv<64> > bound_fu_236_p00;
    sc_signal< sc_lv<64> > bound_fu_236_p10;
    sc_signal< bool > ap_condition_238;
    sc_signal< bool > ap_condition_217;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<38> ap_ST_fsm_state1;
    static const sc_lv<38> ap_ST_fsm_pp0_stage0;
    static const sc_lv<38> ap_ST_fsm_state6;
    static const sc_lv<38> ap_ST_fsm_state7;
    static const sc_lv<38> ap_ST_fsm_state8;
    static const sc_lv<38> ap_ST_fsm_state9;
    static const sc_lv<38> ap_ST_fsm_state10;
    static const sc_lv<38> ap_ST_fsm_state11;
    static const sc_lv<38> ap_ST_fsm_state12;
    static const sc_lv<38> ap_ST_fsm_state13;
    static const sc_lv<38> ap_ST_fsm_state14;
    static const sc_lv<38> ap_ST_fsm_state15;
    static const sc_lv<38> ap_ST_fsm_state16;
    static const sc_lv<38> ap_ST_fsm_state17;
    static const sc_lv<38> ap_ST_fsm_state18;
    static const sc_lv<38> ap_ST_fsm_state19;
    static const sc_lv<38> ap_ST_fsm_state20;
    static const sc_lv<38> ap_ST_fsm_state21;
    static const sc_lv<38> ap_ST_fsm_state22;
    static const sc_lv<38> ap_ST_fsm_state23;
    static const sc_lv<38> ap_ST_fsm_state24;
    static const sc_lv<38> ap_ST_fsm_state25;
    static const sc_lv<38> ap_ST_fsm_state26;
    static const sc_lv<38> ap_ST_fsm_state27;
    static const sc_lv<38> ap_ST_fsm_state28;
    static const sc_lv<38> ap_ST_fsm_state29;
    static const sc_lv<38> ap_ST_fsm_state30;
    static const sc_lv<38> ap_ST_fsm_state31;
    static const sc_lv<38> ap_ST_fsm_state32;
    static const sc_lv<38> ap_ST_fsm_state33;
    static const sc_lv<38> ap_ST_fsm_state34;
    static const sc_lv<38> ap_ST_fsm_state35;
    static const sc_lv<38> ap_ST_fsm_state36;
    static const sc_lv<38> ap_ST_fsm_state37;
    static const sc_lv<38> ap_ST_fsm_state38;
    static const sc_lv<38> ap_ST_fsm_state39;
    static const sc_lv<38> ap_ST_fsm_state40;
    static const sc_lv<38> ap_ST_fsm_state41;
    static const sc_lv<32> ap_const_lv32_0;
    static const bool ap_const_boolean_1;
    static const sc_lv<32> ap_const_lv32_1;
    static const bool ap_const_boolean_0;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<64> ap_const_lv64_0;
    static const sc_lv<31> ap_const_lv31_0;
    static const sc_lv<32> ap_const_lv32_25;
    static const sc_lv<64> ap_const_lv64_1;
    static const sc_lv<31> ap_const_lv31_1;
    static const sc_lv<31> ap_const_lv31_14;
    static const sc_lv<8> ap_const_lv8_50;
    static const sc_lv<32> ap_const_lv32_A;
    static const sc_lv<8> ap_const_lv8_FF;
    static const sc_lv<32> ap_const_lv32_2;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_abs36_fu_438_p3();
    void thread_abs_fu_403_p3();
    void thread_abscond35_fu_432_p2();
    void thread_abscond_fu_398_p2();
    void thread_add_ln19_1_fu_270_p2();
    void thread_add_ln19_fu_256_p2();
    void thread_and_ln26_fu_328_p2();
    void thread_ap_CS_fsm_pp0_stage0();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state41();
    void thread_ap_CS_fsm_state6();
    void thread_ap_block_pp0_stage0();
    void thread_ap_block_pp0_stage0_01001();
    void thread_ap_block_pp0_stage0_11001();
    void thread_ap_block_pp0_stage0_subdone();
    void thread_ap_block_state2_pp0_stage0_iter0();
    void thread_ap_block_state3_pp0_stage0_iter1();
    void thread_ap_block_state4_io();
    void thread_ap_block_state4_pp0_stage0_iter2();
    void thread_ap_block_state5_io();
    void thread_ap_block_state5_pp0_stage0_iter3();
    void thread_ap_condition_217();
    void thread_ap_condition_238();
    void thread_ap_condition_pp0_exit_iter0_state2();
    void thread_ap_done();
    void thread_ap_enable_pp0();
    void thread_ap_idle();
    void thread_ap_idle_pp0();
    void thread_ap_phi_mux_cgx_1_phi_fu_183_p4();
    void thread_ap_phi_mux_cgy_1_phi_fu_195_p4();
    void thread_ap_phi_mux_i_0_phi_fu_160_p4();
    void thread_ap_phi_mux_nb_1_phi_fu_171_p4();
    void thread_ap_phi_mux_tmp_data_V_phi_fu_218_p6();
    void thread_ap_phi_reg_pp0_iter0_tmp_data_V_reg_214();
    void thread_ap_ready();
    void thread_ap_rst_n_inv();
    void thread_bound_fu_236_p0();
    void thread_bound_fu_236_p00();
    void thread_bound_fu_236_p1();
    void thread_bound_fu_236_p10();
    void thread_bound_fu_236_p2();
    void thread_cgx_2_fu_340_p3();
    void thread_cgx_fu_334_p2();
    void thread_cgy_2_fu_386_p3();
    void thread_cgy_fu_373_p2();
    void thread_grp_fu_458_ap_start();
    void thread_grp_fu_458_ce();
    void thread_grp_fu_464_ap_start();
    void thread_grp_fu_464_ce();
    void thread_icmp_ln19_fu_251_p2();
    void thread_icmp_ln22_fu_246_p2();
    void thread_icmp_ln25_fu_316_p2();
    void thread_icmp_ln32_1_fu_446_p2();
    void thread_icmp_ln32_fu_410_p2();
    void thread_icmp_ln887_fu_322_p2();
    void thread_j_fu_358_p2();
    void thread_m_axis_video_TDATA_blk_n();
    void thread_m_axis_video_TVALID();
    void thread_m_axis_video_TVALID_int();
    void thread_nb_2_fu_379_p3();
    void thread_nb_fu_367_p2();
    void thread_neg34_fu_426_p2();
    void thread_neg_fu_393_p2();
    void thread_s_axis_video_TDATA_blk_n();
    void thread_s_axis_video_TREADY();
    void thread_s_axis_video_TREADY_int();
    void thread_select_ln19_1_fu_276_p3();
    void thread_select_ln19_fu_262_p3();
    void thread_select_ln34_fu_452_p3();
    void thread_sub_ln32_1_fu_420_p2();
    void thread_sub_ln32_fu_352_p2();
    void thread_zext_ln19_1_fu_284_p1();
    void thread_zext_ln19_fu_364_p1();
    void thread_zext_ln22_fu_242_p1();
    void thread_ap_NS_fsm();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
