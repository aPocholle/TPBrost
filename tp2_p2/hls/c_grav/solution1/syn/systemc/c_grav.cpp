// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "c_grav.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic c_grav::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic c_grav::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<38> c_grav::ap_ST_fsm_state1 = "1";
const sc_lv<38> c_grav::ap_ST_fsm_pp0_stage0 = "10";
const sc_lv<38> c_grav::ap_ST_fsm_state6 = "100";
const sc_lv<38> c_grav::ap_ST_fsm_state7 = "1000";
const sc_lv<38> c_grav::ap_ST_fsm_state8 = "10000";
const sc_lv<38> c_grav::ap_ST_fsm_state9 = "100000";
const sc_lv<38> c_grav::ap_ST_fsm_state10 = "1000000";
const sc_lv<38> c_grav::ap_ST_fsm_state11 = "10000000";
const sc_lv<38> c_grav::ap_ST_fsm_state12 = "100000000";
const sc_lv<38> c_grav::ap_ST_fsm_state13 = "1000000000";
const sc_lv<38> c_grav::ap_ST_fsm_state14 = "10000000000";
const sc_lv<38> c_grav::ap_ST_fsm_state15 = "100000000000";
const sc_lv<38> c_grav::ap_ST_fsm_state16 = "1000000000000";
const sc_lv<38> c_grav::ap_ST_fsm_state17 = "10000000000000";
const sc_lv<38> c_grav::ap_ST_fsm_state18 = "100000000000000";
const sc_lv<38> c_grav::ap_ST_fsm_state19 = "1000000000000000";
const sc_lv<38> c_grav::ap_ST_fsm_state20 = "10000000000000000";
const sc_lv<38> c_grav::ap_ST_fsm_state21 = "100000000000000000";
const sc_lv<38> c_grav::ap_ST_fsm_state22 = "1000000000000000000";
const sc_lv<38> c_grav::ap_ST_fsm_state23 = "10000000000000000000";
const sc_lv<38> c_grav::ap_ST_fsm_state24 = "100000000000000000000";
const sc_lv<38> c_grav::ap_ST_fsm_state25 = "1000000000000000000000";
const sc_lv<38> c_grav::ap_ST_fsm_state26 = "10000000000000000000000";
const sc_lv<38> c_grav::ap_ST_fsm_state27 = "100000000000000000000000";
const sc_lv<38> c_grav::ap_ST_fsm_state28 = "1000000000000000000000000";
const sc_lv<38> c_grav::ap_ST_fsm_state29 = "10000000000000000000000000";
const sc_lv<38> c_grav::ap_ST_fsm_state30 = "100000000000000000000000000";
const sc_lv<38> c_grav::ap_ST_fsm_state31 = "1000000000000000000000000000";
const sc_lv<38> c_grav::ap_ST_fsm_state32 = "10000000000000000000000000000";
const sc_lv<38> c_grav::ap_ST_fsm_state33 = "100000000000000000000000000000";
const sc_lv<38> c_grav::ap_ST_fsm_state34 = "1000000000000000000000000000000";
const sc_lv<38> c_grav::ap_ST_fsm_state35 = "10000000000000000000000000000000";
const sc_lv<38> c_grav::ap_ST_fsm_state36 = "100000000000000000000000000000000";
const sc_lv<38> c_grav::ap_ST_fsm_state37 = "1000000000000000000000000000000000";
const sc_lv<38> c_grav::ap_ST_fsm_state38 = "10000000000000000000000000000000000";
const sc_lv<38> c_grav::ap_ST_fsm_state39 = "100000000000000000000000000000000000";
const sc_lv<38> c_grav::ap_ST_fsm_state40 = "1000000000000000000000000000000000000";
const sc_lv<38> c_grav::ap_ST_fsm_state41 = "10000000000000000000000000000000000000";
const sc_lv<32> c_grav::ap_const_lv32_0 = "00000000000000000000000000000000";
const bool c_grav::ap_const_boolean_1 = true;
const sc_lv<32> c_grav::ap_const_lv32_1 = "1";
const bool c_grav::ap_const_boolean_0 = false;
const sc_lv<1> c_grav::ap_const_lv1_0 = "0";
const sc_lv<1> c_grav::ap_const_lv1_1 = "1";
const sc_lv<64> c_grav::ap_const_lv64_0 = "0000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<31> c_grav::ap_const_lv31_0 = "0000000000000000000000000000000";
const sc_lv<32> c_grav::ap_const_lv32_25 = "100101";
const sc_lv<64> c_grav::ap_const_lv64_1 = "1";
const sc_lv<31> c_grav::ap_const_lv31_1 = "1";
const sc_lv<31> c_grav::ap_const_lv31_14 = "10100";
const sc_lv<8> c_grav::ap_const_lv8_50 = "1010000";
const sc_lv<32> c_grav::ap_const_lv32_A = "1010";
const sc_lv<8> c_grav::ap_const_lv8_FF = "11111111";
const sc_lv<32> c_grav::ap_const_lv32_2 = "10";

c_grav::c_grav(sc_module_name name) : sc_module(name), mVcdFile(0) {
    c_grav_udiv_32ns_bkb_U1 = new c_grav_udiv_32ns_bkb<1,36,32,32,32>("c_grav_udiv_32ns_bkb_U1");
    c_grav_udiv_32ns_bkb_U1->clk(ap_clk);
    c_grav_udiv_32ns_bkb_U1->reset(ap_rst_n_inv);
    c_grav_udiv_32ns_bkb_U1->start(grp_fu_458_ap_start);
    c_grav_udiv_32ns_bkb_U1->done(grp_fu_458_ap_done);
    c_grav_udiv_32ns_bkb_U1->din0(cgx_1_reg_179);
    c_grav_udiv_32ns_bkb_U1->din1(nb_1_reg_167);
    c_grav_udiv_32ns_bkb_U1->ce(grp_fu_458_ce);
    c_grav_udiv_32ns_bkb_U1->dout(grp_fu_458_p2);
    c_grav_udiv_32ns_bkb_U2 = new c_grav_udiv_32ns_bkb<1,36,32,32,32>("c_grav_udiv_32ns_bkb_U2");
    c_grav_udiv_32ns_bkb_U2->clk(ap_clk);
    c_grav_udiv_32ns_bkb_U2->reset(ap_rst_n_inv);
    c_grav_udiv_32ns_bkb_U2->start(grp_fu_464_ap_start);
    c_grav_udiv_32ns_bkb_U2->done(grp_fu_464_ap_done);
    c_grav_udiv_32ns_bkb_U2->din0(cgy_1_reg_191);
    c_grav_udiv_32ns_bkb_U2->din1(nb_1_reg_167);
    c_grav_udiv_32ns_bkb_U2->ce(grp_fu_464_ce);
    c_grav_udiv_32ns_bkb_U2->dout(grp_fu_464_p2);
    regslice_both_s_axis_video_V_data_V_U = new regslice_both<8>("regslice_both_s_axis_video_V_data_V_U");
    regslice_both_s_axis_video_V_data_V_U->ap_clk(ap_clk);
    regslice_both_s_axis_video_V_data_V_U->ap_rst(ap_rst_n_inv);
    regslice_both_s_axis_video_V_data_V_U->data_in(s_axis_video_TDATA);
    regslice_both_s_axis_video_V_data_V_U->vld_in(s_axis_video_TVALID);
    regslice_both_s_axis_video_V_data_V_U->ack_in(regslice_both_s_axis_video_V_data_V_U_ack_in);
    regslice_both_s_axis_video_V_data_V_U->data_out(s_axis_video_TDATA_int);
    regslice_both_s_axis_video_V_data_V_U->vld_out(s_axis_video_TVALID_int);
    regslice_both_s_axis_video_V_data_V_U->ack_out(s_axis_video_TREADY_int);
    regslice_both_s_axis_video_V_data_V_U->apdone_blk(regslice_both_s_axis_video_V_data_V_U_apdone_blk);
    regslice_both_s_axis_video_V_keep_V_U = new regslice_both<1>("regslice_both_s_axis_video_V_keep_V_U");
    regslice_both_s_axis_video_V_keep_V_U->ap_clk(ap_clk);
    regslice_both_s_axis_video_V_keep_V_U->ap_rst(ap_rst_n_inv);
    regslice_both_s_axis_video_V_keep_V_U->data_in(s_axis_video_TKEEP);
    regslice_both_s_axis_video_V_keep_V_U->vld_in(s_axis_video_TVALID);
    regslice_both_s_axis_video_V_keep_V_U->ack_in(regslice_both_s_axis_video_V_keep_V_U_ack_in);
    regslice_both_s_axis_video_V_keep_V_U->data_out(s_axis_video_TKEEP_int);
    regslice_both_s_axis_video_V_keep_V_U->vld_out(regslice_both_s_axis_video_V_keep_V_U_vld_out);
    regslice_both_s_axis_video_V_keep_V_U->ack_out(s_axis_video_TREADY_int);
    regslice_both_s_axis_video_V_keep_V_U->apdone_blk(regslice_both_s_axis_video_V_keep_V_U_apdone_blk);
    regslice_both_s_axis_video_V_strb_V_U = new regslice_both<1>("regslice_both_s_axis_video_V_strb_V_U");
    regslice_both_s_axis_video_V_strb_V_U->ap_clk(ap_clk);
    regslice_both_s_axis_video_V_strb_V_U->ap_rst(ap_rst_n_inv);
    regslice_both_s_axis_video_V_strb_V_U->data_in(s_axis_video_TSTRB);
    regslice_both_s_axis_video_V_strb_V_U->vld_in(s_axis_video_TVALID);
    regslice_both_s_axis_video_V_strb_V_U->ack_in(regslice_both_s_axis_video_V_strb_V_U_ack_in);
    regslice_both_s_axis_video_V_strb_V_U->data_out(s_axis_video_TSTRB_int);
    regslice_both_s_axis_video_V_strb_V_U->vld_out(regslice_both_s_axis_video_V_strb_V_U_vld_out);
    regslice_both_s_axis_video_V_strb_V_U->ack_out(s_axis_video_TREADY_int);
    regslice_both_s_axis_video_V_strb_V_U->apdone_blk(regslice_both_s_axis_video_V_strb_V_U_apdone_blk);
    regslice_both_s_axis_video_V_user_V_U = new regslice_both<1>("regslice_both_s_axis_video_V_user_V_U");
    regslice_both_s_axis_video_V_user_V_U->ap_clk(ap_clk);
    regslice_both_s_axis_video_V_user_V_U->ap_rst(ap_rst_n_inv);
    regslice_both_s_axis_video_V_user_V_U->data_in(s_axis_video_TUSER);
    regslice_both_s_axis_video_V_user_V_U->vld_in(s_axis_video_TVALID);
    regslice_both_s_axis_video_V_user_V_U->ack_in(regslice_both_s_axis_video_V_user_V_U_ack_in);
    regslice_both_s_axis_video_V_user_V_U->data_out(s_axis_video_TUSER_int);
    regslice_both_s_axis_video_V_user_V_U->vld_out(regslice_both_s_axis_video_V_user_V_U_vld_out);
    regslice_both_s_axis_video_V_user_V_U->ack_out(s_axis_video_TREADY_int);
    regslice_both_s_axis_video_V_user_V_U->apdone_blk(regslice_both_s_axis_video_V_user_V_U_apdone_blk);
    regslice_both_s_axis_video_V_last_V_U = new regslice_both<1>("regslice_both_s_axis_video_V_last_V_U");
    regslice_both_s_axis_video_V_last_V_U->ap_clk(ap_clk);
    regslice_both_s_axis_video_V_last_V_U->ap_rst(ap_rst_n_inv);
    regslice_both_s_axis_video_V_last_V_U->data_in(s_axis_video_TLAST);
    regslice_both_s_axis_video_V_last_V_U->vld_in(s_axis_video_TVALID);
    regslice_both_s_axis_video_V_last_V_U->ack_in(regslice_both_s_axis_video_V_last_V_U_ack_in);
    regslice_both_s_axis_video_V_last_V_U->data_out(s_axis_video_TLAST_int);
    regslice_both_s_axis_video_V_last_V_U->vld_out(regslice_both_s_axis_video_V_last_V_U_vld_out);
    regslice_both_s_axis_video_V_last_V_U->ack_out(s_axis_video_TREADY_int);
    regslice_both_s_axis_video_V_last_V_U->apdone_blk(regslice_both_s_axis_video_V_last_V_U_apdone_blk);
    regslice_both_s_axis_video_V_id_V_U = new regslice_both<1>("regslice_both_s_axis_video_V_id_V_U");
    regslice_both_s_axis_video_V_id_V_U->ap_clk(ap_clk);
    regslice_both_s_axis_video_V_id_V_U->ap_rst(ap_rst_n_inv);
    regslice_both_s_axis_video_V_id_V_U->data_in(s_axis_video_TID);
    regslice_both_s_axis_video_V_id_V_U->vld_in(s_axis_video_TVALID);
    regslice_both_s_axis_video_V_id_V_U->ack_in(regslice_both_s_axis_video_V_id_V_U_ack_in);
    regslice_both_s_axis_video_V_id_V_U->data_out(s_axis_video_TID_int);
    regslice_both_s_axis_video_V_id_V_U->vld_out(regslice_both_s_axis_video_V_id_V_U_vld_out);
    regslice_both_s_axis_video_V_id_V_U->ack_out(s_axis_video_TREADY_int);
    regslice_both_s_axis_video_V_id_V_U->apdone_blk(regslice_both_s_axis_video_V_id_V_U_apdone_blk);
    regslice_both_s_axis_video_V_dest_V_U = new regslice_both<1>("regslice_both_s_axis_video_V_dest_V_U");
    regslice_both_s_axis_video_V_dest_V_U->ap_clk(ap_clk);
    regslice_both_s_axis_video_V_dest_V_U->ap_rst(ap_rst_n_inv);
    regslice_both_s_axis_video_V_dest_V_U->data_in(s_axis_video_TDEST);
    regslice_both_s_axis_video_V_dest_V_U->vld_in(s_axis_video_TVALID);
    regslice_both_s_axis_video_V_dest_V_U->ack_in(regslice_both_s_axis_video_V_dest_V_U_ack_in);
    regslice_both_s_axis_video_V_dest_V_U->data_out(s_axis_video_TDEST_int);
    regslice_both_s_axis_video_V_dest_V_U->vld_out(regslice_both_s_axis_video_V_dest_V_U_vld_out);
    regslice_both_s_axis_video_V_dest_V_U->ack_out(s_axis_video_TREADY_int);
    regslice_both_s_axis_video_V_dest_V_U->apdone_blk(regslice_both_s_axis_video_V_dest_V_U_apdone_blk);
    regslice_both_m_axis_video_V_data_V_U = new regslice_both<8>("regslice_both_m_axis_video_V_data_V_U");
    regslice_both_m_axis_video_V_data_V_U->ap_clk(ap_clk);
    regslice_both_m_axis_video_V_data_V_U->ap_rst(ap_rst_n_inv);
    regslice_both_m_axis_video_V_data_V_U->data_in(ap_phi_mux_tmp_data_V_phi_fu_218_p6);
    regslice_both_m_axis_video_V_data_V_U->vld_in(m_axis_video_TVALID_int);
    regslice_both_m_axis_video_V_data_V_U->ack_in(m_axis_video_TREADY_int);
    regslice_both_m_axis_video_V_data_V_U->data_out(m_axis_video_TDATA);
    regslice_both_m_axis_video_V_data_V_U->vld_out(regslice_both_m_axis_video_V_data_V_U_vld_out);
    regslice_both_m_axis_video_V_data_V_U->ack_out(m_axis_video_TREADY);
    regslice_both_m_axis_video_V_data_V_U->apdone_blk(regslice_both_m_axis_video_V_data_V_U_apdone_blk);
    regslice_both_m_axis_video_V_keep_V_U = new regslice_both<1>("regslice_both_m_axis_video_V_keep_V_U");
    regslice_both_m_axis_video_V_keep_V_U->ap_clk(ap_clk);
    regslice_both_m_axis_video_V_keep_V_U->ap_rst(ap_rst_n_inv);
    regslice_both_m_axis_video_V_keep_V_U->data_in(tmp_keep_V_reg_519_pp0_iter1_reg);
    regslice_both_m_axis_video_V_keep_V_U->vld_in(m_axis_video_TVALID_int);
    regslice_both_m_axis_video_V_keep_V_U->ack_in(regslice_both_m_axis_video_V_keep_V_U_ack_in_dummy);
    regslice_both_m_axis_video_V_keep_V_U->data_out(m_axis_video_TKEEP);
    regslice_both_m_axis_video_V_keep_V_U->vld_out(regslice_both_m_axis_video_V_keep_V_U_vld_out);
    regslice_both_m_axis_video_V_keep_V_U->ack_out(m_axis_video_TREADY);
    regslice_both_m_axis_video_V_keep_V_U->apdone_blk(regslice_both_m_axis_video_V_keep_V_U_apdone_blk);
    regslice_both_m_axis_video_V_strb_V_U = new regslice_both<1>("regslice_both_m_axis_video_V_strb_V_U");
    regslice_both_m_axis_video_V_strb_V_U->ap_clk(ap_clk);
    regslice_both_m_axis_video_V_strb_V_U->ap_rst(ap_rst_n_inv);
    regslice_both_m_axis_video_V_strb_V_U->data_in(tmp_strb_V_reg_524_pp0_iter1_reg);
    regslice_both_m_axis_video_V_strb_V_U->vld_in(m_axis_video_TVALID_int);
    regslice_both_m_axis_video_V_strb_V_U->ack_in(regslice_both_m_axis_video_V_strb_V_U_ack_in_dummy);
    regslice_both_m_axis_video_V_strb_V_U->data_out(m_axis_video_TSTRB);
    regslice_both_m_axis_video_V_strb_V_U->vld_out(regslice_both_m_axis_video_V_strb_V_U_vld_out);
    regslice_both_m_axis_video_V_strb_V_U->ack_out(m_axis_video_TREADY);
    regslice_both_m_axis_video_V_strb_V_U->apdone_blk(regslice_both_m_axis_video_V_strb_V_U_apdone_blk);
    regslice_both_m_axis_video_V_user_V_U = new regslice_both<1>("regslice_both_m_axis_video_V_user_V_U");
    regslice_both_m_axis_video_V_user_V_U->ap_clk(ap_clk);
    regslice_both_m_axis_video_V_user_V_U->ap_rst(ap_rst_n_inv);
    regslice_both_m_axis_video_V_user_V_U->data_in(tmp_user_V_reg_529_pp0_iter1_reg);
    regslice_both_m_axis_video_V_user_V_U->vld_in(m_axis_video_TVALID_int);
    regslice_both_m_axis_video_V_user_V_U->ack_in(regslice_both_m_axis_video_V_user_V_U_ack_in_dummy);
    regslice_both_m_axis_video_V_user_V_U->data_out(m_axis_video_TUSER);
    regslice_both_m_axis_video_V_user_V_U->vld_out(regslice_both_m_axis_video_V_user_V_U_vld_out);
    regslice_both_m_axis_video_V_user_V_U->ack_out(m_axis_video_TREADY);
    regslice_both_m_axis_video_V_user_V_U->apdone_blk(regslice_both_m_axis_video_V_user_V_U_apdone_blk);
    regslice_both_m_axis_video_V_last_V_U = new regslice_both<1>("regslice_both_m_axis_video_V_last_V_U");
    regslice_both_m_axis_video_V_last_V_U->ap_clk(ap_clk);
    regslice_both_m_axis_video_V_last_V_U->ap_rst(ap_rst_n_inv);
    regslice_both_m_axis_video_V_last_V_U->data_in(tmp_last_V_reg_534_pp0_iter1_reg);
    regslice_both_m_axis_video_V_last_V_U->vld_in(m_axis_video_TVALID_int);
    regslice_both_m_axis_video_V_last_V_U->ack_in(regslice_both_m_axis_video_V_last_V_U_ack_in_dummy);
    regslice_both_m_axis_video_V_last_V_U->data_out(m_axis_video_TLAST);
    regslice_both_m_axis_video_V_last_V_U->vld_out(regslice_both_m_axis_video_V_last_V_U_vld_out);
    regslice_both_m_axis_video_V_last_V_U->ack_out(m_axis_video_TREADY);
    regslice_both_m_axis_video_V_last_V_U->apdone_blk(regslice_both_m_axis_video_V_last_V_U_apdone_blk);
    regslice_both_m_axis_video_V_id_V_U = new regslice_both<1>("regslice_both_m_axis_video_V_id_V_U");
    regslice_both_m_axis_video_V_id_V_U->ap_clk(ap_clk);
    regslice_both_m_axis_video_V_id_V_U->ap_rst(ap_rst_n_inv);
    regslice_both_m_axis_video_V_id_V_U->data_in(tmp_id_V_reg_539_pp0_iter1_reg);
    regslice_both_m_axis_video_V_id_V_U->vld_in(m_axis_video_TVALID_int);
    regslice_both_m_axis_video_V_id_V_U->ack_in(regslice_both_m_axis_video_V_id_V_U_ack_in_dummy);
    regslice_both_m_axis_video_V_id_V_U->data_out(m_axis_video_TID);
    regslice_both_m_axis_video_V_id_V_U->vld_out(regslice_both_m_axis_video_V_id_V_U_vld_out);
    regslice_both_m_axis_video_V_id_V_U->ack_out(m_axis_video_TREADY);
    regslice_both_m_axis_video_V_id_V_U->apdone_blk(regslice_both_m_axis_video_V_id_V_U_apdone_blk);
    regslice_both_m_axis_video_V_dest_V_U = new regslice_both<1>("regslice_both_m_axis_video_V_dest_V_U");
    regslice_both_m_axis_video_V_dest_V_U->ap_clk(ap_clk);
    regslice_both_m_axis_video_V_dest_V_U->ap_rst(ap_rst_n_inv);
    regslice_both_m_axis_video_V_dest_V_U->data_in(tmp_dest_V_reg_544_pp0_iter1_reg);
    regslice_both_m_axis_video_V_dest_V_U->vld_in(m_axis_video_TVALID_int);
    regslice_both_m_axis_video_V_dest_V_U->ack_in(regslice_both_m_axis_video_V_dest_V_U_ack_in_dummy);
    regslice_both_m_axis_video_V_dest_V_U->data_out(m_axis_video_TDEST);
    regslice_both_m_axis_video_V_dest_V_U->vld_out(regslice_both_m_axis_video_V_dest_V_U_vld_out);
    regslice_both_m_axis_video_V_dest_V_U->ack_out(m_axis_video_TREADY);
    regslice_both_m_axis_video_V_dest_V_U->apdone_blk(regslice_both_m_axis_video_V_dest_V_U_apdone_blk);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_abs36_fu_438_p3);
    sensitive << ( sub_ln32_1_fu_420_p2 );
    sensitive << ( abscond35_fu_432_p2 );
    sensitive << ( neg34_fu_426_p2 );

    SC_METHOD(thread_abs_fu_403_p3);
    sensitive << ( sub_ln32_reg_560 );
    sensitive << ( abscond_fu_398_p2 );
    sensitive << ( neg_fu_393_p2 );

    SC_METHOD(thread_abscond35_fu_432_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( icmp_ln19_reg_497 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( icmp_ln32_fu_410_p2 );
    sensitive << ( sub_ln32_1_fu_420_p2 );

    SC_METHOD(thread_abscond_fu_398_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( icmp_ln19_reg_497 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( sub_ln32_reg_560 );
    sensitive << ( ap_enable_reg_pp0_iter1 );

    SC_METHOD(thread_add_ln19_1_fu_270_p2);
    sensitive << ( ap_phi_mux_i_0_phi_fu_160_p4 );

    SC_METHOD(thread_add_ln19_fu_256_p2);
    sensitive << ( indvar_flatten_reg_145 );

    SC_METHOD(thread_and_ln26_fu_328_p2);
    sensitive << ( icmp_ln25_fu_316_p2 );
    sensitive << ( icmp_ln887_fu_322_p2 );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state41);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_pp0_stage0);

    SC_METHOD(thread_ap_block_pp0_stage0_01001);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( icmp_ln19_fu_251_p2 );
    sensitive << ( s_axis_video_TVALID_int );

    SC_METHOD(thread_ap_block_pp0_stage0_11001);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( icmp_ln19_fu_251_p2 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( ap_block_state4_io );
    sensitive << ( ap_block_state5_io );
    sensitive << ( s_axis_video_TVALID_int );

    SC_METHOD(thread_ap_block_pp0_stage0_subdone);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( icmp_ln19_fu_251_p2 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( ap_block_state4_io );
    sensitive << ( ap_block_state5_io );
    sensitive << ( s_axis_video_TVALID_int );

    SC_METHOD(thread_ap_block_state2_pp0_stage0_iter0);
    sensitive << ( icmp_ln19_fu_251_p2 );
    sensitive << ( s_axis_video_TVALID_int );

    SC_METHOD(thread_ap_block_state3_pp0_stage0_iter1);

    SC_METHOD(thread_ap_block_state4_io);
    sensitive << ( icmp_ln19_reg_497_pp0_iter1_reg );
    sensitive << ( m_axis_video_TREADY_int );

    SC_METHOD(thread_ap_block_state4_pp0_stage0_iter2);

    SC_METHOD(thread_ap_block_state5_io);
    sensitive << ( icmp_ln19_reg_497_pp0_iter2_reg );
    sensitive << ( m_axis_video_TREADY_int );

    SC_METHOD(thread_ap_block_state5_pp0_stage0_iter3);

    SC_METHOD(thread_ap_condition_217);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter1 );

    SC_METHOD(thread_ap_condition_238);
    sensitive << ( icmp_ln19_reg_497 );
    sensitive << ( icmp_ln32_fu_410_p2 );
    sensitive << ( icmp_ln32_1_fu_446_p2 );

    SC_METHOD(thread_ap_condition_pp0_exit_iter0_state2);
    sensitive << ( icmp_ln19_fu_251_p2 );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_CS_fsm_state41 );
    sensitive << ( regslice_both_m_axis_video_V_data_V_U_apdone_blk );

    SC_METHOD(thread_ap_enable_pp0);
    sensitive << ( ap_idle_pp0 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_idle_pp0);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( ap_enable_reg_pp0_iter1 );

    SC_METHOD(thread_ap_phi_mux_cgx_1_phi_fu_183_p4);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( icmp_ln19_reg_497 );
    sensitive << ( cgx_1_reg_179 );
    sensitive << ( cgx_2_reg_555 );
    sensitive << ( ap_enable_reg_pp0_iter1 );

    SC_METHOD(thread_ap_phi_mux_cgy_1_phi_fu_195_p4);
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( icmp_ln19_reg_497_pp0_iter1_reg );
    sensitive << ( cgy_1_reg_191 );
    sensitive << ( cgy_2_reg_577 );

    SC_METHOD(thread_ap_phi_mux_i_0_phi_fu_160_p4);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( icmp_ln19_reg_497 );
    sensitive << ( i_0_reg_156 );
    sensitive << ( select_ln19_1_reg_506 );
    sensitive << ( ap_enable_reg_pp0_iter1 );

    SC_METHOD(thread_ap_phi_mux_nb_1_phi_fu_171_p4);
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( icmp_ln19_reg_497_pp0_iter1_reg );
    sensitive << ( nb_1_reg_167 );
    sensitive << ( nb_2_reg_572 );

    SC_METHOD(thread_ap_phi_mux_tmp_data_V_phi_fu_218_p6);
    sensitive << ( icmp_ln19_reg_497_pp0_iter1_reg );
    sensitive << ( tmp_data_V_1_reg_512_pp0_iter1_reg );
    sensitive << ( icmp_ln32_reg_582 );
    sensitive << ( icmp_ln32_1_reg_586 );
    sensitive << ( ap_phi_reg_pp0_iter2_tmp_data_V_reg_214 );

    SC_METHOD(thread_ap_phi_reg_pp0_iter0_tmp_data_V_reg_214);

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state41 );
    sensitive << ( regslice_both_m_axis_video_V_data_V_U_apdone_blk );

    SC_METHOD(thread_ap_rst_n_inv);
    sensitive << ( ap_rst_n );

    SC_METHOD(thread_bound_fu_236_p0);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( bound_fu_236_p00 );

    SC_METHOD(thread_bound_fu_236_p00);
    sensitive << ( hsize_in );

    SC_METHOD(thread_bound_fu_236_p1);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( bound_fu_236_p10 );

    SC_METHOD(thread_bound_fu_236_p10);
    sensitive << ( vsize_in );

    SC_METHOD(thread_bound_fu_236_p2);
    sensitive << ( bound_fu_236_p0 );
    sensitive << ( bound_fu_236_p1 );

    SC_METHOD(thread_cgx_2_fu_340_p3);
    sensitive << ( and_ln26_fu_328_p2 );
    sensitive << ( ap_phi_mux_cgx_1_phi_fu_183_p4 );
    sensitive << ( cgx_fu_334_p2 );

    SC_METHOD(thread_cgx_fu_334_p2);
    sensitive << ( ap_phi_mux_cgx_1_phi_fu_183_p4 );
    sensitive << ( zext_ln19_1_fu_284_p1 );

    SC_METHOD(thread_cgy_2_fu_386_p3);
    sensitive << ( and_ln26_reg_549 );
    sensitive << ( ap_phi_mux_cgy_1_phi_fu_195_p4 );
    sensitive << ( cgy_fu_373_p2 );

    SC_METHOD(thread_cgy_fu_373_p2);
    sensitive << ( ap_phi_mux_cgy_1_phi_fu_195_p4 );
    sensitive << ( zext_ln19_fu_364_p1 );

    SC_METHOD(thread_grp_fu_458_ap_start);
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_grp_fu_458_ce);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );

    SC_METHOD(thread_grp_fu_464_ap_start);
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_grp_fu_464_ce);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );

    SC_METHOD(thread_icmp_ln19_fu_251_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( indvar_flatten_reg_145 );
    sensitive << ( bound_reg_492 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_icmp_ln22_fu_246_p2);
    sensitive << ( hsize_in );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( zext_ln22_fu_242_p1 );

    SC_METHOD(thread_icmp_ln25_fu_316_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( icmp_ln19_fu_251_p2 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( select_ln19_fu_262_p3 );

    SC_METHOD(thread_icmp_ln32_1_fu_446_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( icmp_ln19_reg_497 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( icmp_ln32_fu_410_p2 );
    sensitive << ( abs36_fu_438_p3 );

    SC_METHOD(thread_icmp_ln32_fu_410_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( icmp_ln19_reg_497 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( abs_fu_403_p3 );

    SC_METHOD(thread_icmp_ln887_fu_322_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( icmp_ln19_fu_251_p2 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( s_axis_video_TDATA_int );

    SC_METHOD(thread_j_fu_358_p2);
    sensitive << ( select_ln19_fu_262_p3 );

    SC_METHOD(thread_m_axis_video_TDATA_blk_n);
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( icmp_ln19_reg_497_pp0_iter1_reg );
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( icmp_ln19_reg_497_pp0_iter2_reg );
    sensitive << ( m_axis_video_TREADY_int );

    SC_METHOD(thread_m_axis_video_TVALID);
    sensitive << ( regslice_both_m_axis_video_V_data_V_U_vld_out );

    SC_METHOD(thread_m_axis_video_TVALID_int);
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( icmp_ln19_reg_497_pp0_iter1_reg );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_nb_2_fu_379_p3);
    sensitive << ( and_ln26_reg_549 );
    sensitive << ( ap_phi_mux_nb_1_phi_fu_171_p4 );
    sensitive << ( nb_fu_367_p2 );

    SC_METHOD(thread_nb_fu_367_p2);
    sensitive << ( ap_phi_mux_nb_1_phi_fu_171_p4 );

    SC_METHOD(thread_neg34_fu_426_p2);
    sensitive << ( sub_ln32_1_fu_420_p2 );

    SC_METHOD(thread_neg_fu_393_p2);
    sensitive << ( sub_ln32_reg_560 );

    SC_METHOD(thread_s_axis_video_TDATA_blk_n);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( icmp_ln19_fu_251_p2 );
    sensitive << ( s_axis_video_TVALID_int );

    SC_METHOD(thread_s_axis_video_TREADY);
    sensitive << ( s_axis_video_TVALID );
    sensitive << ( regslice_both_s_axis_video_V_data_V_U_ack_in );

    SC_METHOD(thread_s_axis_video_TREADY_int);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( icmp_ln19_fu_251_p2 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_select_ln19_1_fu_276_p3);
    sensitive << ( ap_phi_mux_i_0_phi_fu_160_p4 );
    sensitive << ( icmp_ln22_fu_246_p2 );
    sensitive << ( add_ln19_1_fu_270_p2 );

    SC_METHOD(thread_select_ln19_fu_262_p3);
    sensitive << ( j_0_reg_203 );
    sensitive << ( icmp_ln22_fu_246_p2 );

    SC_METHOD(thread_select_ln34_fu_452_p3);
    sensitive << ( cg_on_V );
    sensitive << ( tmp_data_V_1_reg_512 );

    SC_METHOD(thread_sub_ln32_1_fu_420_p2);
    sensitive << ( cgy_r );
    sensitive << ( zext_ln19_fu_364_p1 );

    SC_METHOD(thread_sub_ln32_fu_352_p2);
    sensitive << ( cgx_r );
    sensitive << ( zext_ln19_1_fu_284_p1 );

    SC_METHOD(thread_zext_ln19_1_fu_284_p1);
    sensitive << ( select_ln19_fu_262_p3 );

    SC_METHOD(thread_zext_ln19_fu_364_p1);
    sensitive << ( select_ln19_1_reg_506 );

    SC_METHOD(thread_zext_ln22_fu_242_p1);
    sensitive << ( j_0_reg_203 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( icmp_ln19_fu_251_p2 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0_subdone );
    sensitive << ( ap_CS_fsm_state41 );
    sensitive << ( regslice_both_m_axis_video_V_data_V_U_apdone_blk );

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    ap_CS_fsm = "00000000000000000000000000000000000001";
    cgy_r = "00000000000000000000000011110000";
    cgx_r = "00000000000000000000000101000000";
    ap_enable_reg_pp0_iter0 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter2 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter3 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter1 = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "c_grav_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst_n, "(port)ap_rst_n");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, cg_on_V, "(port)cg_on_V");
    sc_trace(mVcdFile, s_axis_video_TDATA, "(port)s_axis_video_TDATA");
    sc_trace(mVcdFile, s_axis_video_TVALID, "(port)s_axis_video_TVALID");
    sc_trace(mVcdFile, s_axis_video_TREADY, "(port)s_axis_video_TREADY");
    sc_trace(mVcdFile, s_axis_video_TKEEP, "(port)s_axis_video_TKEEP");
    sc_trace(mVcdFile, s_axis_video_TSTRB, "(port)s_axis_video_TSTRB");
    sc_trace(mVcdFile, s_axis_video_TUSER, "(port)s_axis_video_TUSER");
    sc_trace(mVcdFile, s_axis_video_TLAST, "(port)s_axis_video_TLAST");
    sc_trace(mVcdFile, s_axis_video_TID, "(port)s_axis_video_TID");
    sc_trace(mVcdFile, s_axis_video_TDEST, "(port)s_axis_video_TDEST");
    sc_trace(mVcdFile, m_axis_video_TDATA, "(port)m_axis_video_TDATA");
    sc_trace(mVcdFile, m_axis_video_TVALID, "(port)m_axis_video_TVALID");
    sc_trace(mVcdFile, m_axis_video_TREADY, "(port)m_axis_video_TREADY");
    sc_trace(mVcdFile, m_axis_video_TKEEP, "(port)m_axis_video_TKEEP");
    sc_trace(mVcdFile, m_axis_video_TSTRB, "(port)m_axis_video_TSTRB");
    sc_trace(mVcdFile, m_axis_video_TUSER, "(port)m_axis_video_TUSER");
    sc_trace(mVcdFile, m_axis_video_TLAST, "(port)m_axis_video_TLAST");
    sc_trace(mVcdFile, m_axis_video_TID, "(port)m_axis_video_TID");
    sc_trace(mVcdFile, m_axis_video_TDEST, "(port)m_axis_video_TDEST");
    sc_trace(mVcdFile, hsize_in, "(port)hsize_in");
    sc_trace(mVcdFile, vsize_in, "(port)vsize_in");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_rst_n_inv, "ap_rst_n_inv");
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, cgy_r, "cgy_r");
    sc_trace(mVcdFile, cgx_r, "cgx_r");
    sc_trace(mVcdFile, s_axis_video_TDATA_blk_n, "s_axis_video_TDATA_blk_n");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage0, "ap_CS_fsm_pp0_stage0");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter0, "ap_enable_reg_pp0_iter0");
    sc_trace(mVcdFile, ap_block_pp0_stage0, "ap_block_pp0_stage0");
    sc_trace(mVcdFile, icmp_ln19_fu_251_p2, "icmp_ln19_fu_251_p2");
    sc_trace(mVcdFile, m_axis_video_TDATA_blk_n, "m_axis_video_TDATA_blk_n");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter2, "ap_enable_reg_pp0_iter2");
    sc_trace(mVcdFile, icmp_ln19_reg_497, "icmp_ln19_reg_497");
    sc_trace(mVcdFile, icmp_ln19_reg_497_pp0_iter1_reg, "icmp_ln19_reg_497_pp0_iter1_reg");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter3, "ap_enable_reg_pp0_iter3");
    sc_trace(mVcdFile, icmp_ln19_reg_497_pp0_iter2_reg, "icmp_ln19_reg_497_pp0_iter2_reg");
    sc_trace(mVcdFile, indvar_flatten_reg_145, "indvar_flatten_reg_145");
    sc_trace(mVcdFile, i_0_reg_156, "i_0_reg_156");
    sc_trace(mVcdFile, nb_1_reg_167, "nb_1_reg_167");
    sc_trace(mVcdFile, cgx_1_reg_179, "cgx_1_reg_179");
    sc_trace(mVcdFile, cgy_1_reg_191, "cgy_1_reg_191");
    sc_trace(mVcdFile, j_0_reg_203, "j_0_reg_203");
    sc_trace(mVcdFile, bound_fu_236_p2, "bound_fu_236_p2");
    sc_trace(mVcdFile, bound_reg_492, "bound_reg_492");
    sc_trace(mVcdFile, ap_block_state2_pp0_stage0_iter0, "ap_block_state2_pp0_stage0_iter0");
    sc_trace(mVcdFile, ap_block_state3_pp0_stage0_iter1, "ap_block_state3_pp0_stage0_iter1");
    sc_trace(mVcdFile, ap_block_state4_pp0_stage0_iter2, "ap_block_state4_pp0_stage0_iter2");
    sc_trace(mVcdFile, ap_block_state4_io, "ap_block_state4_io");
    sc_trace(mVcdFile, ap_block_state5_pp0_stage0_iter3, "ap_block_state5_pp0_stage0_iter3");
    sc_trace(mVcdFile, ap_block_state5_io, "ap_block_state5_io");
    sc_trace(mVcdFile, ap_block_pp0_stage0_11001, "ap_block_pp0_stage0_11001");
    sc_trace(mVcdFile, add_ln19_fu_256_p2, "add_ln19_fu_256_p2");
    sc_trace(mVcdFile, select_ln19_1_fu_276_p3, "select_ln19_1_fu_276_p3");
    sc_trace(mVcdFile, select_ln19_1_reg_506, "select_ln19_1_reg_506");
    sc_trace(mVcdFile, tmp_data_V_1_reg_512, "tmp_data_V_1_reg_512");
    sc_trace(mVcdFile, tmp_data_V_1_reg_512_pp0_iter1_reg, "tmp_data_V_1_reg_512_pp0_iter1_reg");
    sc_trace(mVcdFile, tmp_keep_V_reg_519, "tmp_keep_V_reg_519");
    sc_trace(mVcdFile, tmp_keep_V_reg_519_pp0_iter1_reg, "tmp_keep_V_reg_519_pp0_iter1_reg");
    sc_trace(mVcdFile, tmp_strb_V_reg_524, "tmp_strb_V_reg_524");
    sc_trace(mVcdFile, tmp_strb_V_reg_524_pp0_iter1_reg, "tmp_strb_V_reg_524_pp0_iter1_reg");
    sc_trace(mVcdFile, tmp_user_V_reg_529, "tmp_user_V_reg_529");
    sc_trace(mVcdFile, tmp_user_V_reg_529_pp0_iter1_reg, "tmp_user_V_reg_529_pp0_iter1_reg");
    sc_trace(mVcdFile, tmp_last_V_reg_534, "tmp_last_V_reg_534");
    sc_trace(mVcdFile, tmp_last_V_reg_534_pp0_iter1_reg, "tmp_last_V_reg_534_pp0_iter1_reg");
    sc_trace(mVcdFile, tmp_id_V_reg_539, "tmp_id_V_reg_539");
    sc_trace(mVcdFile, tmp_id_V_reg_539_pp0_iter1_reg, "tmp_id_V_reg_539_pp0_iter1_reg");
    sc_trace(mVcdFile, tmp_dest_V_reg_544, "tmp_dest_V_reg_544");
    sc_trace(mVcdFile, tmp_dest_V_reg_544_pp0_iter1_reg, "tmp_dest_V_reg_544_pp0_iter1_reg");
    sc_trace(mVcdFile, and_ln26_fu_328_p2, "and_ln26_fu_328_p2");
    sc_trace(mVcdFile, and_ln26_reg_549, "and_ln26_reg_549");
    sc_trace(mVcdFile, cgx_2_fu_340_p3, "cgx_2_fu_340_p3");
    sc_trace(mVcdFile, cgx_2_reg_555, "cgx_2_reg_555");
    sc_trace(mVcdFile, sub_ln32_fu_352_p2, "sub_ln32_fu_352_p2");
    sc_trace(mVcdFile, sub_ln32_reg_560, "sub_ln32_reg_560");
    sc_trace(mVcdFile, j_fu_358_p2, "j_fu_358_p2");
    sc_trace(mVcdFile, nb_2_fu_379_p3, "nb_2_fu_379_p3");
    sc_trace(mVcdFile, nb_2_reg_572, "nb_2_reg_572");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter1, "ap_enable_reg_pp0_iter1");
    sc_trace(mVcdFile, cgy_2_fu_386_p3, "cgy_2_fu_386_p3");
    sc_trace(mVcdFile, cgy_2_reg_577, "cgy_2_reg_577");
    sc_trace(mVcdFile, icmp_ln32_fu_410_p2, "icmp_ln32_fu_410_p2");
    sc_trace(mVcdFile, icmp_ln32_reg_582, "icmp_ln32_reg_582");
    sc_trace(mVcdFile, icmp_ln32_1_fu_446_p2, "icmp_ln32_1_fu_446_p2");
    sc_trace(mVcdFile, icmp_ln32_1_reg_586, "icmp_ln32_1_reg_586");
    sc_trace(mVcdFile, select_ln34_fu_452_p3, "select_ln34_fu_452_p3");
    sc_trace(mVcdFile, ap_block_pp0_stage0_subdone, "ap_block_pp0_stage0_subdone");
    sc_trace(mVcdFile, ap_condition_pp0_exit_iter0_state2, "ap_condition_pp0_exit_iter0_state2");
    sc_trace(mVcdFile, ap_phi_mux_i_0_phi_fu_160_p4, "ap_phi_mux_i_0_phi_fu_160_p4");
    sc_trace(mVcdFile, ap_phi_mux_nb_1_phi_fu_171_p4, "ap_phi_mux_nb_1_phi_fu_171_p4");
    sc_trace(mVcdFile, ap_phi_mux_cgx_1_phi_fu_183_p4, "ap_phi_mux_cgx_1_phi_fu_183_p4");
    sc_trace(mVcdFile, ap_phi_mux_cgy_1_phi_fu_195_p4, "ap_phi_mux_cgy_1_phi_fu_195_p4");
    sc_trace(mVcdFile, ap_phi_mux_tmp_data_V_phi_fu_218_p6, "ap_phi_mux_tmp_data_V_phi_fu_218_p6");
    sc_trace(mVcdFile, ap_phi_reg_pp0_iter0_tmp_data_V_reg_214, "ap_phi_reg_pp0_iter0_tmp_data_V_reg_214");
    sc_trace(mVcdFile, ap_phi_reg_pp0_iter1_tmp_data_V_reg_214, "ap_phi_reg_pp0_iter1_tmp_data_V_reg_214");
    sc_trace(mVcdFile, ap_phi_reg_pp0_iter2_tmp_data_V_reg_214, "ap_phi_reg_pp0_iter2_tmp_data_V_reg_214");
    sc_trace(mVcdFile, grp_fu_464_p2, "grp_fu_464_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state41, "ap_CS_fsm_state41");
    sc_trace(mVcdFile, regslice_both_m_axis_video_V_data_V_U_apdone_blk, "regslice_both_m_axis_video_V_data_V_U_apdone_blk");
    sc_trace(mVcdFile, grp_fu_458_p2, "grp_fu_458_p2");
    sc_trace(mVcdFile, ap_block_pp0_stage0_01001, "ap_block_pp0_stage0_01001");
    sc_trace(mVcdFile, bound_fu_236_p0, "bound_fu_236_p0");
    sc_trace(mVcdFile, bound_fu_236_p1, "bound_fu_236_p1");
    sc_trace(mVcdFile, zext_ln22_fu_242_p1, "zext_ln22_fu_242_p1");
    sc_trace(mVcdFile, icmp_ln22_fu_246_p2, "icmp_ln22_fu_246_p2");
    sc_trace(mVcdFile, add_ln19_1_fu_270_p2, "add_ln19_1_fu_270_p2");
    sc_trace(mVcdFile, select_ln19_fu_262_p3, "select_ln19_fu_262_p3");
    sc_trace(mVcdFile, icmp_ln25_fu_316_p2, "icmp_ln25_fu_316_p2");
    sc_trace(mVcdFile, icmp_ln887_fu_322_p2, "icmp_ln887_fu_322_p2");
    sc_trace(mVcdFile, zext_ln19_1_fu_284_p1, "zext_ln19_1_fu_284_p1");
    sc_trace(mVcdFile, cgx_fu_334_p2, "cgx_fu_334_p2");
    sc_trace(mVcdFile, zext_ln19_fu_364_p1, "zext_ln19_fu_364_p1");
    sc_trace(mVcdFile, nb_fu_367_p2, "nb_fu_367_p2");
    sc_trace(mVcdFile, cgy_fu_373_p2, "cgy_fu_373_p2");
    sc_trace(mVcdFile, abscond_fu_398_p2, "abscond_fu_398_p2");
    sc_trace(mVcdFile, neg_fu_393_p2, "neg_fu_393_p2");
    sc_trace(mVcdFile, abs_fu_403_p3, "abs_fu_403_p3");
    sc_trace(mVcdFile, sub_ln32_1_fu_420_p2, "sub_ln32_1_fu_420_p2");
    sc_trace(mVcdFile, abscond35_fu_432_p2, "abscond35_fu_432_p2");
    sc_trace(mVcdFile, neg34_fu_426_p2, "neg34_fu_426_p2");
    sc_trace(mVcdFile, abs36_fu_438_p3, "abs36_fu_438_p3");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, grp_fu_458_ap_start, "grp_fu_458_ap_start");
    sc_trace(mVcdFile, grp_fu_458_ap_done, "grp_fu_458_ap_done");
    sc_trace(mVcdFile, grp_fu_458_ce, "grp_fu_458_ce");
    sc_trace(mVcdFile, grp_fu_464_ap_start, "grp_fu_464_ap_start");
    sc_trace(mVcdFile, grp_fu_464_ap_done, "grp_fu_464_ap_done");
    sc_trace(mVcdFile, grp_fu_464_ce, "grp_fu_464_ce");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, ap_idle_pp0, "ap_idle_pp0");
    sc_trace(mVcdFile, ap_enable_pp0, "ap_enable_pp0");
    sc_trace(mVcdFile, regslice_both_s_axis_video_V_data_V_U_apdone_blk, "regslice_both_s_axis_video_V_data_V_U_apdone_blk");
    sc_trace(mVcdFile, s_axis_video_TDATA_int, "s_axis_video_TDATA_int");
    sc_trace(mVcdFile, s_axis_video_TVALID_int, "s_axis_video_TVALID_int");
    sc_trace(mVcdFile, s_axis_video_TREADY_int, "s_axis_video_TREADY_int");
    sc_trace(mVcdFile, regslice_both_s_axis_video_V_data_V_U_ack_in, "regslice_both_s_axis_video_V_data_V_U_ack_in");
    sc_trace(mVcdFile, regslice_both_s_axis_video_V_keep_V_U_apdone_blk, "regslice_both_s_axis_video_V_keep_V_U_apdone_blk");
    sc_trace(mVcdFile, s_axis_video_TKEEP_int, "s_axis_video_TKEEP_int");
    sc_trace(mVcdFile, regslice_both_s_axis_video_V_keep_V_U_vld_out, "regslice_both_s_axis_video_V_keep_V_U_vld_out");
    sc_trace(mVcdFile, regslice_both_s_axis_video_V_keep_V_U_ack_in, "regslice_both_s_axis_video_V_keep_V_U_ack_in");
    sc_trace(mVcdFile, regslice_both_s_axis_video_V_strb_V_U_apdone_blk, "regslice_both_s_axis_video_V_strb_V_U_apdone_blk");
    sc_trace(mVcdFile, s_axis_video_TSTRB_int, "s_axis_video_TSTRB_int");
    sc_trace(mVcdFile, regslice_both_s_axis_video_V_strb_V_U_vld_out, "regslice_both_s_axis_video_V_strb_V_U_vld_out");
    sc_trace(mVcdFile, regslice_both_s_axis_video_V_strb_V_U_ack_in, "regslice_both_s_axis_video_V_strb_V_U_ack_in");
    sc_trace(mVcdFile, regslice_both_s_axis_video_V_user_V_U_apdone_blk, "regslice_both_s_axis_video_V_user_V_U_apdone_blk");
    sc_trace(mVcdFile, s_axis_video_TUSER_int, "s_axis_video_TUSER_int");
    sc_trace(mVcdFile, regslice_both_s_axis_video_V_user_V_U_vld_out, "regslice_both_s_axis_video_V_user_V_U_vld_out");
    sc_trace(mVcdFile, regslice_both_s_axis_video_V_user_V_U_ack_in, "regslice_both_s_axis_video_V_user_V_U_ack_in");
    sc_trace(mVcdFile, regslice_both_s_axis_video_V_last_V_U_apdone_blk, "regslice_both_s_axis_video_V_last_V_U_apdone_blk");
    sc_trace(mVcdFile, s_axis_video_TLAST_int, "s_axis_video_TLAST_int");
    sc_trace(mVcdFile, regslice_both_s_axis_video_V_last_V_U_vld_out, "regslice_both_s_axis_video_V_last_V_U_vld_out");
    sc_trace(mVcdFile, regslice_both_s_axis_video_V_last_V_U_ack_in, "regslice_both_s_axis_video_V_last_V_U_ack_in");
    sc_trace(mVcdFile, regslice_both_s_axis_video_V_id_V_U_apdone_blk, "regslice_both_s_axis_video_V_id_V_U_apdone_blk");
    sc_trace(mVcdFile, s_axis_video_TID_int, "s_axis_video_TID_int");
    sc_trace(mVcdFile, regslice_both_s_axis_video_V_id_V_U_vld_out, "regslice_both_s_axis_video_V_id_V_U_vld_out");
    sc_trace(mVcdFile, regslice_both_s_axis_video_V_id_V_U_ack_in, "regslice_both_s_axis_video_V_id_V_U_ack_in");
    sc_trace(mVcdFile, regslice_both_s_axis_video_V_dest_V_U_apdone_blk, "regslice_both_s_axis_video_V_dest_V_U_apdone_blk");
    sc_trace(mVcdFile, s_axis_video_TDEST_int, "s_axis_video_TDEST_int");
    sc_trace(mVcdFile, regslice_both_s_axis_video_V_dest_V_U_vld_out, "regslice_both_s_axis_video_V_dest_V_U_vld_out");
    sc_trace(mVcdFile, regslice_both_s_axis_video_V_dest_V_U_ack_in, "regslice_both_s_axis_video_V_dest_V_U_ack_in");
    sc_trace(mVcdFile, m_axis_video_TVALID_int, "m_axis_video_TVALID_int");
    sc_trace(mVcdFile, m_axis_video_TREADY_int, "m_axis_video_TREADY_int");
    sc_trace(mVcdFile, regslice_both_m_axis_video_V_data_V_U_vld_out, "regslice_both_m_axis_video_V_data_V_U_vld_out");
    sc_trace(mVcdFile, regslice_both_m_axis_video_V_keep_V_U_apdone_blk, "regslice_both_m_axis_video_V_keep_V_U_apdone_blk");
    sc_trace(mVcdFile, regslice_both_m_axis_video_V_keep_V_U_ack_in_dummy, "regslice_both_m_axis_video_V_keep_V_U_ack_in_dummy");
    sc_trace(mVcdFile, regslice_both_m_axis_video_V_keep_V_U_vld_out, "regslice_both_m_axis_video_V_keep_V_U_vld_out");
    sc_trace(mVcdFile, regslice_both_m_axis_video_V_strb_V_U_apdone_blk, "regslice_both_m_axis_video_V_strb_V_U_apdone_blk");
    sc_trace(mVcdFile, regslice_both_m_axis_video_V_strb_V_U_ack_in_dummy, "regslice_both_m_axis_video_V_strb_V_U_ack_in_dummy");
    sc_trace(mVcdFile, regslice_both_m_axis_video_V_strb_V_U_vld_out, "regslice_both_m_axis_video_V_strb_V_U_vld_out");
    sc_trace(mVcdFile, regslice_both_m_axis_video_V_user_V_U_apdone_blk, "regslice_both_m_axis_video_V_user_V_U_apdone_blk");
    sc_trace(mVcdFile, regslice_both_m_axis_video_V_user_V_U_ack_in_dummy, "regslice_both_m_axis_video_V_user_V_U_ack_in_dummy");
    sc_trace(mVcdFile, regslice_both_m_axis_video_V_user_V_U_vld_out, "regslice_both_m_axis_video_V_user_V_U_vld_out");
    sc_trace(mVcdFile, regslice_both_m_axis_video_V_last_V_U_apdone_blk, "regslice_both_m_axis_video_V_last_V_U_apdone_blk");
    sc_trace(mVcdFile, regslice_both_m_axis_video_V_last_V_U_ack_in_dummy, "regslice_both_m_axis_video_V_last_V_U_ack_in_dummy");
    sc_trace(mVcdFile, regslice_both_m_axis_video_V_last_V_U_vld_out, "regslice_both_m_axis_video_V_last_V_U_vld_out");
    sc_trace(mVcdFile, regslice_both_m_axis_video_V_id_V_U_apdone_blk, "regslice_both_m_axis_video_V_id_V_U_apdone_blk");
    sc_trace(mVcdFile, regslice_both_m_axis_video_V_id_V_U_ack_in_dummy, "regslice_both_m_axis_video_V_id_V_U_ack_in_dummy");
    sc_trace(mVcdFile, regslice_both_m_axis_video_V_id_V_U_vld_out, "regslice_both_m_axis_video_V_id_V_U_vld_out");
    sc_trace(mVcdFile, regslice_both_m_axis_video_V_dest_V_U_apdone_blk, "regslice_both_m_axis_video_V_dest_V_U_apdone_blk");
    sc_trace(mVcdFile, regslice_both_m_axis_video_V_dest_V_U_ack_in_dummy, "regslice_both_m_axis_video_V_dest_V_U_ack_in_dummy");
    sc_trace(mVcdFile, regslice_both_m_axis_video_V_dest_V_U_vld_out, "regslice_both_m_axis_video_V_dest_V_U_vld_out");
    sc_trace(mVcdFile, bound_fu_236_p00, "bound_fu_236_p00");
    sc_trace(mVcdFile, bound_fu_236_p10, "bound_fu_236_p10");
    sc_trace(mVcdFile, ap_condition_238, "ap_condition_238");
    sc_trace(mVcdFile, ap_condition_217, "ap_condition_217");
#endif

    }
    mHdltvinHandle.open("c_grav.hdltvin.dat");
    mHdltvoutHandle.open("c_grav.hdltvout.dat");
}

c_grav::~c_grav() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
    delete c_grav_udiv_32ns_bkb_U1;
    delete c_grav_udiv_32ns_bkb_U2;
    delete regslice_both_s_axis_video_V_data_V_U;
    delete regslice_both_s_axis_video_V_keep_V_U;
    delete regslice_both_s_axis_video_V_strb_V_U;
    delete regslice_both_s_axis_video_V_user_V_U;
    delete regslice_both_s_axis_video_V_last_V_U;
    delete regslice_both_s_axis_video_V_id_V_U;
    delete regslice_both_s_axis_video_V_dest_V_U;
    delete regslice_both_m_axis_video_V_data_V_U;
    delete regslice_both_m_axis_video_V_keep_V_U;
    delete regslice_both_m_axis_video_V_strb_V_U;
    delete regslice_both_m_axis_video_V_user_V_U;
    delete regslice_both_m_axis_video_V_last_V_U;
    delete regslice_both_m_axis_video_V_id_V_U;
    delete regslice_both_m_axis_video_V_dest_V_U;
}

void c_grav::thread_ap_clk_no_reset_() {
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter0 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp0_exit_iter0_state2.read()))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                    esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_1;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter1 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            if (esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp0_exit_iter0_state2.read())) {
                ap_enable_reg_pp0_iter1 = (ap_condition_pp0_exit_iter0_state2.read() ^ ap_const_logic_1);
            } else if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1)) {
                ap_enable_reg_pp0_iter1 = ap_enable_reg_pp0_iter0.read();
            }
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter2 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter2 = ap_enable_reg_pp0_iter1.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter3 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter3 = ap_enable_reg_pp0_iter2.read();
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                    esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
            ap_enable_reg_pp0_iter3 = ap_const_logic_0;
        }
    }
    if (esl_seteq<1,1,1>(ap_condition_217.read(), ap_const_boolean_1)) {
        if ((esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln19_reg_497.read()) && 
             esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln32_fu_410_p2.read()))) {
            ap_phi_reg_pp0_iter2_tmp_data_V_reg_214 = tmp_data_V_1_reg_512.read();
        } else if (esl_seteq<1,1,1>(ap_condition_238.read(), ap_const_boolean_1)) {
            ap_phi_reg_pp0_iter2_tmp_data_V_reg_214 = select_ln34_fu_452_p3.read();
        } else if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1)) {
            ap_phi_reg_pp0_iter2_tmp_data_V_reg_214 = ap_phi_reg_pp0_iter1_tmp_data_V_reg_214.read();
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln19_reg_497.read()))) {
        cgx_1_reg_179 = cgx_2_reg_555.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        cgx_1_reg_179 = ap_const_lv32_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln19_reg_497_pp0_iter1_reg.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        cgy_1_reg_191 = cgy_2_reg_577.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        cgy_1_reg_191 = ap_const_lv32_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln19_reg_497.read()))) {
        i_0_reg_156 = select_ln19_1_reg_506.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        i_0_reg_156 = ap_const_lv31_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(icmp_ln19_fu_251_p2.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        indvar_flatten_reg_145 = add_ln19_fu_256_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        indvar_flatten_reg_145 = ap_const_lv64_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(icmp_ln19_fu_251_p2.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        j_0_reg_203 = j_fu_358_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        j_0_reg_203 = ap_const_lv31_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln19_reg_497_pp0_iter1_reg.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        nb_1_reg_167 = nb_2_reg_572.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        nb_1_reg_167 = ap_const_lv32_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(icmp_ln19_fu_251_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        and_ln26_reg_549 = and_ln26_fu_328_p2.read();
        sub_ln32_reg_560 = sub_ln32_fu_352_p2.read();
        tmp_data_V_1_reg_512 = s_axis_video_TDATA_int.read();
        tmp_dest_V_reg_544 = s_axis_video_TDEST_int.read();
        tmp_id_V_reg_539 = s_axis_video_TID_int.read();
        tmp_keep_V_reg_519 = s_axis_video_TKEEP_int.read();
        tmp_last_V_reg_534 = s_axis_video_TLAST_int.read();
        tmp_strb_V_reg_524 = s_axis_video_TSTRB_int.read();
        tmp_user_V_reg_529 = s_axis_video_TUSER_int.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        ap_phi_reg_pp0_iter1_tmp_data_V_reg_214 = ap_phi_reg_pp0_iter0_tmp_data_V_reg_214.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        bound_reg_492 = bound_fu_236_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(icmp_ln19_fu_251_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        cgx_2_reg_555 = cgx_2_fu_340_p3.read();
        select_ln19_1_reg_506 = select_ln19_1_fu_276_p3.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state41.read()) && esl_seteq<1,1,1>(regslice_both_m_axis_video_V_data_V_U_apdone_blk.read(), ap_const_logic_0))) {
        cgx_r = grp_fu_458_p2.read();
        cgy_r = grp_fu_464_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln19_reg_497.read()))) {
        cgy_2_reg_577 = cgy_2_fu_386_p3.read();
        nb_2_reg_572 = nb_2_fu_379_p3.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        icmp_ln19_reg_497 = icmp_ln19_fu_251_p2.read();
        icmp_ln19_reg_497_pp0_iter1_reg = icmp_ln19_reg_497.read();
        tmp_data_V_1_reg_512_pp0_iter1_reg = tmp_data_V_1_reg_512.read();
        tmp_dest_V_reg_544_pp0_iter1_reg = tmp_dest_V_reg_544.read();
        tmp_id_V_reg_539_pp0_iter1_reg = tmp_id_V_reg_539.read();
        tmp_keep_V_reg_519_pp0_iter1_reg = tmp_keep_V_reg_519.read();
        tmp_last_V_reg_534_pp0_iter1_reg = tmp_last_V_reg_534.read();
        tmp_strb_V_reg_524_pp0_iter1_reg = tmp_strb_V_reg_524.read();
        tmp_user_V_reg_529_pp0_iter1_reg = tmp_user_V_reg_529.read();
    }
    if (esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)) {
        icmp_ln19_reg_497_pp0_iter2_reg = icmp_ln19_reg_497_pp0_iter1_reg.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln19_reg_497.read()) && esl_seteq<1,1,1>(icmp_ln32_fu_410_p2.read(), ap_const_lv1_1))) {
        icmp_ln32_1_reg_586 = icmp_ln32_1_fu_446_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln19_reg_497.read()))) {
        icmp_ln32_reg_582 = icmp_ln32_fu_410_p2.read();
    }
}

void c_grav::thread_abs36_fu_438_p3() {
    abs36_fu_438_p3 = (!abscond35_fu_432_p2.read()[0].is_01())? sc_lv<32>(): ((abscond35_fu_432_p2.read()[0].to_bool())? sub_ln32_1_fu_420_p2.read(): neg34_fu_426_p2.read());
}

void c_grav::thread_abs_fu_403_p3() {
    abs_fu_403_p3 = (!abscond_fu_398_p2.read()[0].is_01())? sc_lv<32>(): ((abscond_fu_398_p2.read()[0].to_bool())? sub_ln32_reg_560.read(): neg_fu_393_p2.read());
}

void c_grav::thread_abscond35_fu_432_p2() {
    abscond35_fu_432_p2 = (!sub_ln32_1_fu_420_p2.read().is_01() || !ap_const_lv32_0.is_01())? sc_lv<1>(): (sc_bigint<32>(sub_ln32_1_fu_420_p2.read()) > sc_bigint<32>(ap_const_lv32_0));
}

void c_grav::thread_abscond_fu_398_p2() {
    abscond_fu_398_p2 = (!sub_ln32_reg_560.read().is_01() || !ap_const_lv32_0.is_01())? sc_lv<1>(): (sc_bigint<32>(sub_ln32_reg_560.read()) > sc_bigint<32>(ap_const_lv32_0));
}

void c_grav::thread_add_ln19_1_fu_270_p2() {
    add_ln19_1_fu_270_p2 = (!ap_phi_mux_i_0_phi_fu_160_p4.read().is_01() || !ap_const_lv31_1.is_01())? sc_lv<31>(): (sc_biguint<31>(ap_phi_mux_i_0_phi_fu_160_p4.read()) + sc_biguint<31>(ap_const_lv31_1));
}

void c_grav::thread_add_ln19_fu_256_p2() {
    add_ln19_fu_256_p2 = (!indvar_flatten_reg_145.read().is_01() || !ap_const_lv64_1.is_01())? sc_lv<64>(): (sc_biguint<64>(indvar_flatten_reg_145.read()) + sc_biguint<64>(ap_const_lv64_1));
}

void c_grav::thread_and_ln26_fu_328_p2() {
    and_ln26_fu_328_p2 = (icmp_ln25_fu_316_p2.read() & icmp_ln887_fu_322_p2.read());
}

void c_grav::thread_ap_CS_fsm_pp0_stage0() {
    ap_CS_fsm_pp0_stage0 = ap_CS_fsm.read()[1];
}

void c_grav::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void c_grav::thread_ap_CS_fsm_state41() {
    ap_CS_fsm_state41 = ap_CS_fsm.read()[37];
}

void c_grav::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read()[2];
}

void c_grav::thread_ap_block_pp0_stage0() {
    ap_block_pp0_stage0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void c_grav::thread_ap_block_pp0_stage0_01001() {
    ap_block_pp0_stage0_01001 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(icmp_ln19_fu_251_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, s_axis_video_TVALID_int.read()));
}

void c_grav::thread_ap_block_pp0_stage0_11001() {
    ap_block_pp0_stage0_11001 = ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state4_io.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter3.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state5_io.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
  esl_seteq<1,1,1>(icmp_ln19_fu_251_p2.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_0, s_axis_video_TVALID_int.read())));
}

void c_grav::thread_ap_block_pp0_stage0_subdone() {
    ap_block_pp0_stage0_subdone = ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state4_io.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter3.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state5_io.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
  esl_seteq<1,1,1>(icmp_ln19_fu_251_p2.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_0, s_axis_video_TVALID_int.read())));
}

void c_grav::thread_ap_block_state2_pp0_stage0_iter0() {
    ap_block_state2_pp0_stage0_iter0 = (esl_seteq<1,1,1>(icmp_ln19_fu_251_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, s_axis_video_TVALID_int.read()));
}

void c_grav::thread_ap_block_state3_pp0_stage0_iter1() {
    ap_block_state3_pp0_stage0_iter1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void c_grav::thread_ap_block_state4_io() {
    ap_block_state4_io = (esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln19_reg_497_pp0_iter1_reg.read()) && esl_seteq<1,1,1>(ap_const_logic_0, m_axis_video_TREADY_int.read()));
}

void c_grav::thread_ap_block_state4_pp0_stage0_iter2() {
    ap_block_state4_pp0_stage0_iter2 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void c_grav::thread_ap_block_state5_io() {
    ap_block_state5_io = (esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln19_reg_497_pp0_iter2_reg.read()) && esl_seteq<1,1,1>(ap_const_logic_0, m_axis_video_TREADY_int.read()));
}

void c_grav::thread_ap_block_state5_pp0_stage0_iter3() {
    ap_block_state5_pp0_stage0_iter3 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void c_grav::thread_ap_condition_217() {
    ap_condition_217 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()));
}

void c_grav::thread_ap_condition_238() {
    ap_condition_238 = (esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln19_reg_497.read()) && esl_seteq<1,1,1>(icmp_ln32_fu_410_p2.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(icmp_ln32_1_fu_446_p2.read(), ap_const_lv1_1));
}

void c_grav::thread_ap_condition_pp0_exit_iter0_state2() {
    if (esl_seteq<1,1,1>(icmp_ln19_fu_251_p2.read(), ap_const_lv1_1)) {
        ap_condition_pp0_exit_iter0_state2 = ap_const_logic_1;
    } else {
        ap_condition_pp0_exit_iter0_state2 = ap_const_logic_0;
    }
}

void c_grav::thread_ap_done() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state41.read()) && 
         esl_seteq<1,1,1>(regslice_both_m_axis_video_V_data_V_U_apdone_blk.read(), ap_const_logic_0))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void c_grav::thread_ap_enable_pp0() {
    ap_enable_pp0 = (ap_idle_pp0.read() ^ ap_const_logic_1);
}

void c_grav::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void c_grav::thread_ap_idle_pp0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter2.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter3.read()))) {
        ap_idle_pp0 = ap_const_logic_1;
    } else {
        ap_idle_pp0 = ap_const_logic_0;
    }
}

void c_grav::thread_ap_phi_mux_cgx_1_phi_fu_183_p4() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln19_reg_497.read()))) {
        ap_phi_mux_cgx_1_phi_fu_183_p4 = cgx_2_reg_555.read();
    } else {
        ap_phi_mux_cgx_1_phi_fu_183_p4 = cgx_1_reg_179.read();
    }
}

void c_grav::thread_ap_phi_mux_cgy_1_phi_fu_195_p4() {
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln19_reg_497_pp0_iter1_reg.read()))) {
        ap_phi_mux_cgy_1_phi_fu_195_p4 = cgy_2_reg_577.read();
    } else {
        ap_phi_mux_cgy_1_phi_fu_195_p4 = cgy_1_reg_191.read();
    }
}

void c_grav::thread_ap_phi_mux_i_0_phi_fu_160_p4() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln19_reg_497.read()))) {
        ap_phi_mux_i_0_phi_fu_160_p4 = select_ln19_1_reg_506.read();
    } else {
        ap_phi_mux_i_0_phi_fu_160_p4 = i_0_reg_156.read();
    }
}

void c_grav::thread_ap_phi_mux_nb_1_phi_fu_171_p4() {
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln19_reg_497_pp0_iter1_reg.read()))) {
        ap_phi_mux_nb_1_phi_fu_171_p4 = nb_2_reg_572.read();
    } else {
        ap_phi_mux_nb_1_phi_fu_171_p4 = nb_1_reg_167.read();
    }
}

void c_grav::thread_ap_phi_mux_tmp_data_V_phi_fu_218_p6() {
    if ((esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln19_reg_497_pp0_iter1_reg.read()) && 
         esl_seteq<1,1,1>(icmp_ln32_reg_582.read(), ap_const_lv1_1) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln32_1_reg_586.read()))) {
        ap_phi_mux_tmp_data_V_phi_fu_218_p6 = tmp_data_V_1_reg_512_pp0_iter1_reg.read();
    } else {
        ap_phi_mux_tmp_data_V_phi_fu_218_p6 = ap_phi_reg_pp0_iter2_tmp_data_V_reg_214.read();
    }
}

void c_grav::thread_ap_phi_reg_pp0_iter0_tmp_data_V_reg_214() {
    ap_phi_reg_pp0_iter0_tmp_data_V_reg_214 =  (sc_lv<8>) ("XXXXXXXX");
}

void c_grav::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state41.read()) && 
         esl_seteq<1,1,1>(regslice_both_m_axis_video_V_data_V_U_apdone_blk.read(), ap_const_logic_0))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void c_grav::thread_ap_rst_n_inv() {
    ap_rst_n_inv =  (sc_logic) (~ap_rst_n.read());
}

void c_grav::thread_bound_fu_236_p0() {
    bound_fu_236_p0 =  (sc_lv<32>) (bound_fu_236_p00.read());
}

void c_grav::thread_bound_fu_236_p00() {
    bound_fu_236_p00 = esl_zext<64,32>(hsize_in.read());
}

void c_grav::thread_bound_fu_236_p1() {
    bound_fu_236_p1 =  (sc_lv<32>) (bound_fu_236_p10.read());
}

void c_grav::thread_bound_fu_236_p10() {
    bound_fu_236_p10 = esl_zext<64,32>(vsize_in.read());
}

void c_grav::thread_bound_fu_236_p2() {
    bound_fu_236_p2 = (!bound_fu_236_p0.read().is_01() || !bound_fu_236_p1.read().is_01())? sc_lv<64>(): sc_biguint<32>(bound_fu_236_p0.read()) * sc_biguint<32>(bound_fu_236_p1.read());
}

void c_grav::thread_cgx_2_fu_340_p3() {
    cgx_2_fu_340_p3 = (!and_ln26_fu_328_p2.read()[0].is_01())? sc_lv<32>(): ((and_ln26_fu_328_p2.read()[0].to_bool())? cgx_fu_334_p2.read(): ap_phi_mux_cgx_1_phi_fu_183_p4.read());
}

void c_grav::thread_cgx_fu_334_p2() {
    cgx_fu_334_p2 = (!zext_ln19_1_fu_284_p1.read().is_01() || !ap_phi_mux_cgx_1_phi_fu_183_p4.read().is_01())? sc_lv<32>(): (sc_biguint<32>(zext_ln19_1_fu_284_p1.read()) + sc_biguint<32>(ap_phi_mux_cgx_1_phi_fu_183_p4.read()));
}

void c_grav::thread_cgy_2_fu_386_p3() {
    cgy_2_fu_386_p3 = (!and_ln26_reg_549.read()[0].is_01())? sc_lv<32>(): ((and_ln26_reg_549.read()[0].to_bool())? cgy_fu_373_p2.read(): ap_phi_mux_cgy_1_phi_fu_195_p4.read());
}

void c_grav::thread_cgy_fu_373_p2() {
    cgy_fu_373_p2 = (!ap_phi_mux_cgy_1_phi_fu_195_p4.read().is_01() || !zext_ln19_fu_364_p1.read().is_01())? sc_lv<32>(): (sc_biguint<32>(ap_phi_mux_cgy_1_phi_fu_195_p4.read()) + sc_biguint<32>(zext_ln19_fu_364_p1.read()));
}

void c_grav::thread_grp_fu_458_ap_start() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        grp_fu_458_ap_start = ap_const_logic_1;
    } else {
        grp_fu_458_ap_start = ap_const_logic_0;
    }
}

void c_grav::thread_grp_fu_458_ce() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()))) {
        grp_fu_458_ce = ap_const_logic_0;
    } else {
        grp_fu_458_ce = ap_const_logic_1;
    }
}

void c_grav::thread_grp_fu_464_ap_start() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        grp_fu_464_ap_start = ap_const_logic_1;
    } else {
        grp_fu_464_ap_start = ap_const_logic_0;
    }
}

void c_grav::thread_grp_fu_464_ce() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()))) {
        grp_fu_464_ce = ap_const_logic_0;
    } else {
        grp_fu_464_ce = ap_const_logic_1;
    }
}

void c_grav::thread_icmp_ln19_fu_251_p2() {
    icmp_ln19_fu_251_p2 = (!indvar_flatten_reg_145.read().is_01() || !bound_reg_492.read().is_01())? sc_lv<1>(): sc_lv<1>(indvar_flatten_reg_145.read() == bound_reg_492.read());
}

void c_grav::thread_icmp_ln22_fu_246_p2() {
    icmp_ln22_fu_246_p2 = (!zext_ln22_fu_242_p1.read().is_01() || !hsize_in.read().is_01())? sc_lv<1>(): (sc_bigint<32>(zext_ln22_fu_242_p1.read()) < sc_bigint<32>(hsize_in.read()));
}

void c_grav::thread_icmp_ln25_fu_316_p2() {
    icmp_ln25_fu_316_p2 = (!select_ln19_fu_262_p3.read().is_01() || !ap_const_lv31_14.is_01())? sc_lv<1>(): (sc_biguint<31>(select_ln19_fu_262_p3.read()) > sc_biguint<31>(ap_const_lv31_14));
}

void c_grav::thread_icmp_ln32_1_fu_446_p2() {
    icmp_ln32_1_fu_446_p2 = (!abs36_fu_438_p3.read().is_01() || !ap_const_lv32_A.is_01())? sc_lv<1>(): (sc_bigint<32>(abs36_fu_438_p3.read()) < sc_bigint<32>(ap_const_lv32_A));
}

void c_grav::thread_icmp_ln32_fu_410_p2() {
    icmp_ln32_fu_410_p2 = (!abs_fu_403_p3.read().is_01() || !ap_const_lv32_A.is_01())? sc_lv<1>(): (sc_bigint<32>(abs_fu_403_p3.read()) < sc_bigint<32>(ap_const_lv32_A));
}

void c_grav::thread_icmp_ln887_fu_322_p2() {
    icmp_ln887_fu_322_p2 = (!s_axis_video_TDATA_int.read().is_01() || !ap_const_lv8_50.is_01())? sc_lv<1>(): (sc_biguint<8>(s_axis_video_TDATA_int.read()) < sc_biguint<8>(ap_const_lv8_50));
}

void c_grav::thread_j_fu_358_p2() {
    j_fu_358_p2 = (!select_ln19_fu_262_p3.read().is_01() || !ap_const_lv31_1.is_01())? sc_lv<31>(): (sc_biguint<31>(select_ln19_fu_262_p3.read()) + sc_biguint<31>(ap_const_lv31_1));
}

void c_grav::thread_m_axis_video_TDATA_blk_n() {
    if (((esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln19_reg_497_pp0_iter1_reg.read())) || 
         (esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter3.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln19_reg_497_pp0_iter2_reg.read())))) {
        m_axis_video_TDATA_blk_n = m_axis_video_TREADY_int.read();
    } else {
        m_axis_video_TDATA_blk_n = ap_const_logic_1;
    }
}

void c_grav::thread_m_axis_video_TVALID() {
    m_axis_video_TVALID = regslice_both_m_axis_video_V_data_V_U_vld_out.read();
}

void c_grav::thread_m_axis_video_TVALID_int() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln19_reg_497_pp0_iter1_reg.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        m_axis_video_TVALID_int = ap_const_logic_1;
    } else {
        m_axis_video_TVALID_int = ap_const_logic_0;
    }
}

void c_grav::thread_nb_2_fu_379_p3() {
    nb_2_fu_379_p3 = (!and_ln26_reg_549.read()[0].is_01())? sc_lv<32>(): ((and_ln26_reg_549.read()[0].to_bool())? nb_fu_367_p2.read(): ap_phi_mux_nb_1_phi_fu_171_p4.read());
}

void c_grav::thread_nb_fu_367_p2() {
    nb_fu_367_p2 = (!ap_phi_mux_nb_1_phi_fu_171_p4.read().is_01() || !ap_const_lv32_1.is_01())? sc_lv<32>(): (sc_biguint<32>(ap_phi_mux_nb_1_phi_fu_171_p4.read()) + sc_biguint<32>(ap_const_lv32_1));
}

void c_grav::thread_neg34_fu_426_p2() {
    neg34_fu_426_p2 = (!ap_const_lv32_0.is_01() || !sub_ln32_1_fu_420_p2.read().is_01())? sc_lv<32>(): (sc_biguint<32>(ap_const_lv32_0) - sc_biguint<32>(sub_ln32_1_fu_420_p2.read()));
}

void c_grav::thread_neg_fu_393_p2() {
    neg_fu_393_p2 = (!ap_const_lv32_0.is_01() || !sub_ln32_reg_560.read().is_01())? sc_lv<32>(): (sc_biguint<32>(ap_const_lv32_0) - sc_biguint<32>(sub_ln32_reg_560.read()));
}

void c_grav::thread_s_axis_video_TDATA_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(icmp_ln19_fu_251_p2.read(), ap_const_lv1_0))) {
        s_axis_video_TDATA_blk_n = s_axis_video_TVALID_int.read();
    } else {
        s_axis_video_TDATA_blk_n = ap_const_logic_1;
    }
}

void c_grav::thread_s_axis_video_TREADY() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, s_axis_video_TVALID.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, regslice_both_s_axis_video_V_data_V_U_ack_in.read()))) {
        s_axis_video_TREADY = ap_const_logic_1;
    } else {
        s_axis_video_TREADY = ap_const_logic_0;
    }
}

void c_grav::thread_s_axis_video_TREADY_int() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(icmp_ln19_fu_251_p2.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        s_axis_video_TREADY_int = ap_const_logic_1;
    } else {
        s_axis_video_TREADY_int = ap_const_logic_0;
    }
}

void c_grav::thread_select_ln19_1_fu_276_p3() {
    select_ln19_1_fu_276_p3 = (!icmp_ln22_fu_246_p2.read()[0].is_01())? sc_lv<31>(): ((icmp_ln22_fu_246_p2.read()[0].to_bool())? ap_phi_mux_i_0_phi_fu_160_p4.read(): add_ln19_1_fu_270_p2.read());
}

void c_grav::thread_select_ln19_fu_262_p3() {
    select_ln19_fu_262_p3 = (!icmp_ln22_fu_246_p2.read()[0].is_01())? sc_lv<31>(): ((icmp_ln22_fu_246_p2.read()[0].to_bool())? j_0_reg_203.read(): ap_const_lv31_0);
}

void c_grav::thread_select_ln34_fu_452_p3() {
    select_ln34_fu_452_p3 = (!cg_on_V.read()[0].is_01())? sc_lv<8>(): ((cg_on_V.read()[0].to_bool())? ap_const_lv8_FF: tmp_data_V_1_reg_512.read());
}

void c_grav::thread_sub_ln32_1_fu_420_p2() {
    sub_ln32_1_fu_420_p2 = (!cgy_r.read().is_01() || !zext_ln19_fu_364_p1.read().is_01())? sc_lv<32>(): (sc_biguint<32>(cgy_r.read()) - sc_biguint<32>(zext_ln19_fu_364_p1.read()));
}

void c_grav::thread_sub_ln32_fu_352_p2() {
    sub_ln32_fu_352_p2 = (!cgx_r.read().is_01() || !zext_ln19_1_fu_284_p1.read().is_01())? sc_lv<32>(): (sc_biguint<32>(cgx_r.read()) - sc_biguint<32>(zext_ln19_1_fu_284_p1.read()));
}

void c_grav::thread_zext_ln19_1_fu_284_p1() {
    zext_ln19_1_fu_284_p1 = esl_zext<32,31>(select_ln19_fu_262_p3.read());
}

void c_grav::thread_zext_ln19_fu_364_p1() {
    zext_ln19_fu_364_p1 = esl_zext<32,31>(select_ln19_1_reg_506.read());
}

void c_grav::thread_zext_ln22_fu_242_p1() {
    zext_ln22_fu_242_p1 = esl_zext<32,31>(j_0_reg_203.read());
}

void c_grav::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((!(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter3.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter2.read(), ap_const_logic_0)) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(icmp_ln19_fu_251_p2.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0)))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter3.read()) && 
  esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && 
  esl_seteq<1,1,1>(ap_enable_reg_pp0_iter2.read(), ap_const_logic_0)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
  esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && 
  esl_seteq<1,1,1>(icmp_ln19_fu_251_p2.read(), ap_const_lv1_1) && 
  esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0)))) {
                ap_NS_fsm = ap_ST_fsm_state6;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            }
            break;
        case 4 : 
            ap_NS_fsm = ap_ST_fsm_state7;
            break;
        case 8 : 
            ap_NS_fsm = ap_ST_fsm_state8;
            break;
        case 16 : 
            ap_NS_fsm = ap_ST_fsm_state9;
            break;
        case 32 : 
            ap_NS_fsm = ap_ST_fsm_state10;
            break;
        case 64 : 
            ap_NS_fsm = ap_ST_fsm_state11;
            break;
        case 128 : 
            ap_NS_fsm = ap_ST_fsm_state12;
            break;
        case 256 : 
            ap_NS_fsm = ap_ST_fsm_state13;
            break;
        case 512 : 
            ap_NS_fsm = ap_ST_fsm_state14;
            break;
        case 1024 : 
            ap_NS_fsm = ap_ST_fsm_state15;
            break;
        case 2048 : 
            ap_NS_fsm = ap_ST_fsm_state16;
            break;
        case 4096 : 
            ap_NS_fsm = ap_ST_fsm_state17;
            break;
        case 8192 : 
            ap_NS_fsm = ap_ST_fsm_state18;
            break;
        case 16384 : 
            ap_NS_fsm = ap_ST_fsm_state19;
            break;
        case 32768 : 
            ap_NS_fsm = ap_ST_fsm_state20;
            break;
        case 65536 : 
            ap_NS_fsm = ap_ST_fsm_state21;
            break;
        case 131072 : 
            ap_NS_fsm = ap_ST_fsm_state22;
            break;
        case 262144 : 
            ap_NS_fsm = ap_ST_fsm_state23;
            break;
        case 524288 : 
            ap_NS_fsm = ap_ST_fsm_state24;
            break;
        case 1048576 : 
            ap_NS_fsm = ap_ST_fsm_state25;
            break;
        case 2097152 : 
            ap_NS_fsm = ap_ST_fsm_state26;
            break;
        case 4194304 : 
            ap_NS_fsm = ap_ST_fsm_state27;
            break;
        case 8388608 : 
            ap_NS_fsm = ap_ST_fsm_state28;
            break;
        case 16777216 : 
            ap_NS_fsm = ap_ST_fsm_state29;
            break;
        case 33554432 : 
            ap_NS_fsm = ap_ST_fsm_state30;
            break;
        case 67108864 : 
            ap_NS_fsm = ap_ST_fsm_state31;
            break;
        case 134217728 : 
            ap_NS_fsm = ap_ST_fsm_state32;
            break;
        case 268435456 : 
            ap_NS_fsm = ap_ST_fsm_state33;
            break;
        case 536870912 : 
            ap_NS_fsm = ap_ST_fsm_state34;
            break;
        case 1073741824 : 
            ap_NS_fsm = ap_ST_fsm_state35;
            break;
        case 2147483648 : 
            ap_NS_fsm = ap_ST_fsm_state36;
            break;
        case 4294967296 : 
            ap_NS_fsm = ap_ST_fsm_state37;
            break;
        case 8589934592 : 
            ap_NS_fsm = ap_ST_fsm_state38;
            break;
        case 17179869184 : 
            ap_NS_fsm = ap_ST_fsm_state39;
            break;
        case 34359738368 : 
            ap_NS_fsm = ap_ST_fsm_state40;
            break;
        case 68719476736 : 
            ap_NS_fsm = ap_ST_fsm_state41;
            break;
        case 137438953472 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state41.read()) && esl_seteq<1,1,1>(regslice_both_m_axis_video_V_data_V_U_apdone_blk.read(), ap_const_logic_0))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state41;
            }
            break;
        default : 
            ap_NS_fsm = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            break;
    }
}

void c_grav::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"ap_rst_n\" :  \"" << ap_rst_n.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"ap_start\" :  \"" << ap_start.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"ap_done\" :  \"" << ap_done.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_idle\" :  \"" << ap_idle.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_ready\" :  \"" << ap_ready.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"cg_on_V\" :  \"" << cg_on_V.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axis_video_TDATA\" :  \"" << s_axis_video_TDATA.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axis_video_TVALID\" :  \"" << s_axis_video_TVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axis_video_TREADY\" :  \"" << s_axis_video_TREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axis_video_TKEEP\" :  \"" << s_axis_video_TKEEP.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axis_video_TSTRB\" :  \"" << s_axis_video_TSTRB.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axis_video_TUSER\" :  \"" << s_axis_video_TUSER.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axis_video_TLAST\" :  \"" << s_axis_video_TLAST.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axis_video_TID\" :  \"" << s_axis_video_TID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axis_video_TDEST\" :  \"" << s_axis_video_TDEST.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axis_video_TDATA\" :  \"" << m_axis_video_TDATA.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axis_video_TVALID\" :  \"" << m_axis_video_TVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axis_video_TREADY\" :  \"" << m_axis_video_TREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axis_video_TKEEP\" :  \"" << m_axis_video_TKEEP.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axis_video_TSTRB\" :  \"" << m_axis_video_TSTRB.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axis_video_TUSER\" :  \"" << m_axis_video_TUSER.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axis_video_TLAST\" :  \"" << m_axis_video_TLAST.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axis_video_TID\" :  \"" << m_axis_video_TID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axis_video_TDEST\" :  \"" << m_axis_video_TDEST.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"hsize_in\" :  \"" << hsize_in.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"vsize_in\" :  \"" << vsize_in.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

