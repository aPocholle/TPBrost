

================================================================
== Vivado HLS Report for 'proc'
================================================================
* Date:           Tue Dec  5 12:04:42 2023

* Version:        2019.2 (Build 2704478 on Wed Nov 06 22:10:23 MST 2019)
* Project:        proc
* Solution:       solution1
* Product family: zynq
* Target device:  xc7z020-clg484-1


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  | 10.00 ns | 8.750 ns |   1.25 ns  |
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+----------+----------+-----+-----+---------+
    |  Latency (cycles) |  Latency (absolute) |  Interval | Pipeline|
    |   min   |   max   |    min   |    max   | min | max |   Type  |
    +---------+---------+----------+----------+-----+-----+---------+
    |        ?|        ?|         ?|         ?|    ?|    ?|   none  |
    +---------+---------+----------+----------+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +-------------+---------+---------+----------+-----------+-----------+------+----------+
        |             |  Latency (cycles) | Iteration|  Initiation Interval  | Trip |          |
        |  Loop Name  |   min   |   max   |  Latency |  achieved |   target  | Count| Pipelined|
        +-------------+---------+---------+----------+-----------+-----------+------+----------+
        |- Loop 1     |        ?|        ?|         ?|          -|          -|  inf |    no    |
        | + Loop 1.1  |        ?|        ?|         8|          -|          -|     ?|    no    |
        | + Loop 1.2  |        ?|        ?|         8|          -|          -|     ?|    no    |
        +-------------+---------+---------+----------+-----------+-----------+------+----------+



================================================================
== Utilization Estimates
================================================================
* Summary: 
+-----------------+---------+-------+--------+-------+-----+
|       Name      | BRAM_18K| DSP48E|   FF   |  LUT  | URAM|
+-----------------+---------+-------+--------+-------+-----+
|DSP              |        -|      -|       -|      -|    -|
|Expression       |        -|      2|       0|    177|    -|
|FIFO             |        -|      -|       -|      -|    -|
|Instance         |        2|      -|     512|    580|    -|
|Memory           |        -|      -|       -|      -|    -|
|Multiplexer      |        -|      -|       -|    286|    -|
|Register         |        -|      -|     257|      -|    -|
+-----------------+---------+-------+--------+-------+-----+
|Total            |        2|      2|     769|   1043|    0|
+-----------------+---------+-------+--------+-------+-----+
|Available        |      280|    220|  106400|  53200|    0|
+-----------------+---------+-------+--------+-------+-----+
|Utilization (%)  |    ~0   |   ~0  |   ~0   |      1|    0|
+-----------------+---------+-------+--------+-------+-----+

+ Detail: 
    * Instance: 
    +---------------------+-------------------+---------+-------+-----+-----+-----+
    |       Instance      |       Module      | BRAM_18K| DSP48E|  FF | LUT | URAM|
    +---------------------+-------------------+---------+-------+-----+-----+-----+
    |proc_port_r_m_axi_U  |proc_port_r_m_axi  |        2|      0|  512|  580|    0|
    +---------------------+-------------------+---------+-------+-----+-----+-----+
    |Total                |                   |        2|      0|  512|  580|    0|
    +---------------------+-------------------+---------+-------+-----+-----+-----+

    * DSP48E: 
    N/A

    * Memory: 
    N/A

    * FIFO: 
    N/A

    * Expression: 
    +---------------------+----------+-------+---+----+------------+------------+
    |    Variable Name    | Operation| DSP48E| FF| LUT| Bitwidth P0| Bitwidth P1|
    +---------------------+----------+-------+---+----+------------+------------+
    |mul_ln23_fu_154_p2   |     *    |      2|  0|  20|          32|          17|
    |add_ln23_fu_159_p2   |     +    |      0|  0|  39|          32|          17|
    |sub_ln23_fu_164_p2   |     -    |      0|  0|  39|          32|          32|
    |sub_ln33_fu_175_p2   |     -    |      0|  0|  39|          32|          32|
    |ap_block_state36_io  |    and   |      0|  0|   2|           1|           1|
    |icmp_ln23_fu_170_p2  |   icmp   |      0|  0|  18|          32|          32|
    |icmp_ln33_fu_181_p2  |   icmp   |      0|  0|  18|          32|          32|
    |ap_block_state16_io  |    or    |      0|  0|   2|           1|           1|
    +---------------------+----------+-------+---+----+------------+------------+
    |Total                |          |      2|  0| 177|         194|         164|
    +---------------------+----------+-------+---+----+------------+------------+

    * Multiplexer: 
    +-----------------+-----+-----------+-----+-----------+
    |       Name      | LUT | Input Size| Bits| Total Bits|
    +-----------------+-----+-----------+-----+-----------+
    |ap_NS_fsm        |  193|         44|    1|         44|
    |cpt_0_reg_104    |    9|          2|   32|         64|
    |cpt_1_reg_113    |    9|          2|   32|         64|
    |port_r_ARADDR    |   15|          3|   32|         96|
    |port_r_WDATA     |   15|          3|   32|         96|
    |port_r_blk_n_AR  |    9|          2|    1|          2|
    |port_r_blk_n_AW  |    9|          2|    1|          2|
    |port_r_blk_n_B   |    9|          2|    1|          2|
    |port_r_blk_n_R   |    9|          2|    1|          2|
    |port_r_blk_n_W   |    9|          2|    1|          2|
    +-----------------+-----+-----------+-----+-----------+
    |Total            |  286|         64|  134|        374|
    +-----------------+-----+-----------+-----+-----------+

    * Register: 
    +------------------+----+----+-----+-----------+
    |       Name       | FF | LUT| Bits| Const Bits|
    +------------------+----+----+-----+-----------+
    |add_ln23_reg_221  |  27|   0|   32|          5|
    |ap_CS_fsm         |  43|   0|   43|          0|
    |cpt_0_reg_104     |  32|   0|   32|          0|
    |cpt_1_reg_113     |  32|   0|   32|          0|
    |mul_ln23_reg_216  |  27|   0|   32|          5|
    |reg_125           |  32|   0|   32|          0|
    |sw_reg_211        |  32|   0|   32|          0|
    |tempo_fu_50       |  32|   0|   32|          0|
    +------------------+----+----+-----+-----------+
    |Total             | 257|   0|  267|         10|
    +------------------+----+----+-----+-----------+



================================================================
== Interface
================================================================
* Summary: 
+-----------------------+-----+-----+--------------+--------------+--------------+
|       RTL Ports       | Dir | Bits|   Protocol   | Source Object|    C Type    |
+-----------------------+-----+-----+--------------+--------------+--------------+
|ap_clk                 |  in |    1| ap_ctrl_none |     proc     | return value |
|ap_rst_n               |  in |    1| ap_ctrl_none |     proc     | return value |
|m_axi_port_r_AWVALID   | out |    1|     m_axi    |    port_r    |    pointer   |
|m_axi_port_r_AWREADY   |  in |    1|     m_axi    |    port_r    |    pointer   |
|m_axi_port_r_AWADDR    | out |   32|     m_axi    |    port_r    |    pointer   |
|m_axi_port_r_AWID      | out |    1|     m_axi    |    port_r    |    pointer   |
|m_axi_port_r_AWLEN     | out |    8|     m_axi    |    port_r    |    pointer   |
|m_axi_port_r_AWSIZE    | out |    3|     m_axi    |    port_r    |    pointer   |
|m_axi_port_r_AWBURST   | out |    2|     m_axi    |    port_r    |    pointer   |
|m_axi_port_r_AWLOCK    | out |    2|     m_axi    |    port_r    |    pointer   |
|m_axi_port_r_AWCACHE   | out |    4|     m_axi    |    port_r    |    pointer   |
|m_axi_port_r_AWPROT    | out |    3|     m_axi    |    port_r    |    pointer   |
|m_axi_port_r_AWQOS     | out |    4|     m_axi    |    port_r    |    pointer   |
|m_axi_port_r_AWREGION  | out |    4|     m_axi    |    port_r    |    pointer   |
|m_axi_port_r_AWUSER    | out |    1|     m_axi    |    port_r    |    pointer   |
|m_axi_port_r_WVALID    | out |    1|     m_axi    |    port_r    |    pointer   |
|m_axi_port_r_WREADY    |  in |    1|     m_axi    |    port_r    |    pointer   |
|m_axi_port_r_WDATA     | out |   32|     m_axi    |    port_r    |    pointer   |
|m_axi_port_r_WSTRB     | out |    4|     m_axi    |    port_r    |    pointer   |
|m_axi_port_r_WLAST     | out |    1|     m_axi    |    port_r    |    pointer   |
|m_axi_port_r_WID       | out |    1|     m_axi    |    port_r    |    pointer   |
|m_axi_port_r_WUSER     | out |    1|     m_axi    |    port_r    |    pointer   |
|m_axi_port_r_ARVALID   | out |    1|     m_axi    |    port_r    |    pointer   |
|m_axi_port_r_ARREADY   |  in |    1|     m_axi    |    port_r    |    pointer   |
|m_axi_port_r_ARADDR    | out |   32|     m_axi    |    port_r    |    pointer   |
|m_axi_port_r_ARID      | out |    1|     m_axi    |    port_r    |    pointer   |
|m_axi_port_r_ARLEN     | out |    8|     m_axi    |    port_r    |    pointer   |
|m_axi_port_r_ARSIZE    | out |    3|     m_axi    |    port_r    |    pointer   |
|m_axi_port_r_ARBURST   | out |    2|     m_axi    |    port_r    |    pointer   |
|m_axi_port_r_ARLOCK    | out |    2|     m_axi    |    port_r    |    pointer   |
|m_axi_port_r_ARCACHE   | out |    4|     m_axi    |    port_r    |    pointer   |
|m_axi_port_r_ARPROT    | out |    3|     m_axi    |    port_r    |    pointer   |
|m_axi_port_r_ARQOS     | out |    4|     m_axi    |    port_r    |    pointer   |
|m_axi_port_r_ARREGION  | out |    4|     m_axi    |    port_r    |    pointer   |
|m_axi_port_r_ARUSER    | out |    1|     m_axi    |    port_r    |    pointer   |
|m_axi_port_r_RVALID    |  in |    1|     m_axi    |    port_r    |    pointer   |
|m_axi_port_r_RREADY    | out |    1|     m_axi    |    port_r    |    pointer   |
|m_axi_port_r_RDATA     |  in |   32|     m_axi    |    port_r    |    pointer   |
|m_axi_port_r_RLAST     |  in |    1|     m_axi    |    port_r    |    pointer   |
|m_axi_port_r_RID       |  in |    1|     m_axi    |    port_r    |    pointer   |
|m_axi_port_r_RUSER     |  in |    1|     m_axi    |    port_r    |    pointer   |
|m_axi_port_r_RRESP     |  in |    2|     m_axi    |    port_r    |    pointer   |
|m_axi_port_r_BVALID    |  in |    1|     m_axi    |    port_r    |    pointer   |
|m_axi_port_r_BREADY    | out |    1|     m_axi    |    port_r    |    pointer   |
|m_axi_port_r_BRESP     |  in |    2|     m_axi    |    port_r    |    pointer   |
|m_axi_port_r_BID       |  in |    1|     m_axi    |    port_r    |    pointer   |
|m_axi_port_r_BUSER     |  in |    1|     m_axi    |    port_r    |    pointer   |
+-----------------------+-----+-----+--------------+--------------+--------------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 2
IsDatapathOnly: 2
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 43
* Pipeline : 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 
3 --> 4 
4 --> 5 
5 --> 6 
6 --> 7 
7 --> 8 
8 --> 9 
9 --> 10 
10 --> 11 
11 --> 12 
12 --> 13 
13 --> 14 
14 --> 15 
15 --> 16 
16 --> 17 24 
17 --> 18 
18 --> 19 
19 --> 20 
20 --> 21 
21 --> 22 
22 --> 23 
23 --> 16 
24 --> 25 
25 --> 26 
26 --> 27 
27 --> 28 
28 --> 29 
29 --> 30 
30 --> 31 
31 --> 32 
32 --> 33 
33 --> 34 
34 --> 35 
35 --> 36 
36 --> 37 2 
37 --> 38 
38 --> 39 
39 --> 40 
40 --> 41 
41 --> 42 
42 --> 43 
43 --> 36 

* FSM state operations: 

State 1 <SV = 0> <Delay = 0.00>
ST_1 : Operation 44 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i32* %port_r) nounwind, !map !7"   --->   Operation 44 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 45 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecTopModule([5 x i8]* @proc_str) nounwind"   --->   Operation 45 'spectopmodule' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 46 [1/1] (0.00ns)   --->   "%tempo = alloca i32, align 4"   --->   Operation 46 'alloca' 'tempo' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 47 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i32 0, [13 x i8]* @p_str, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind" [proc/proc.cpp:7]   --->   Operation 47 'specinterface' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 48 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i32* %port_r, [6 x i8]* @p_str2, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 100, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, i32 16, i32 16, i32 16, i32 16, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind" [proc/proc.cpp:8]   --->   Operation 48 'specinterface' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 49 [1/1] (0.00ns)   --->   "%port_addr = getelementptr inbounds i32* %port_r, i64 268435464" [proc/proc.cpp:13]   --->   Operation 49 'getelementptr' 'port_addr' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 50 [1/1] (0.00ns)   --->   "%port_addr_1 = getelementptr inbounds i32* %port_r, i64 268451840" [proc/proc.cpp:17]   --->   Operation 50 'getelementptr' 'port_addr_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 51 [1/1] (0.00ns)   --->   "%port_addr_2 = getelementptr inbounds i32* %port_r, i64 268435456" [proc/proc.cpp:21]   --->   Operation 51 'getelementptr' 'port_addr_2' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 52 [1/1] (0.00ns)   --->   "br label %.loopexit" [proc/proc.cpp:10]   --->   Operation 52 'br' <Predicate = true> <Delay = 0.00>

State 2 <SV = 1> <Delay = 8.75>
ST_2 : Operation 53 [7/7] (8.75ns)   --->   "%sw_req = call i1 @_ssdm_op_ReadReq.m_axi.i32P(i32* %port_addr, i32 1) nounwind" [proc/proc.cpp:13]   --->   Operation 53 'readreq' 'sw_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 3 <SV = 2> <Delay = 8.75>
ST_3 : Operation 54 [6/7] (8.75ns)   --->   "%sw_req = call i1 @_ssdm_op_ReadReq.m_axi.i32P(i32* %port_addr, i32 1) nounwind" [proc/proc.cpp:13]   --->   Operation 54 'readreq' 'sw_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_3 : Operation 55 [7/7] (8.75ns)   --->   "%cpt_5_req = call i1 @_ssdm_op_ReadReq.m_axi.i32P(i32* %port_addr_1, i32 1) nounwind" [proc/proc.cpp:17]   --->   Operation 55 'readreq' 'cpt_5_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 4 <SV = 3> <Delay = 8.75>
ST_4 : Operation 56 [5/7] (8.75ns)   --->   "%sw_req = call i1 @_ssdm_op_ReadReq.m_axi.i32P(i32* %port_addr, i32 1) nounwind" [proc/proc.cpp:13]   --->   Operation 56 'readreq' 'sw_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_4 : Operation 57 [6/7] (8.75ns)   --->   "%cpt_5_req = call i1 @_ssdm_op_ReadReq.m_axi.i32P(i32* %port_addr_1, i32 1) nounwind" [proc/proc.cpp:17]   --->   Operation 57 'readreq' 'cpt_5_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 5 <SV = 4> <Delay = 8.75>
ST_5 : Operation 58 [4/7] (8.75ns)   --->   "%sw_req = call i1 @_ssdm_op_ReadReq.m_axi.i32P(i32* %port_addr, i32 1) nounwind" [proc/proc.cpp:13]   --->   Operation 58 'readreq' 'sw_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_5 : Operation 59 [5/7] (8.75ns)   --->   "%cpt_5_req = call i1 @_ssdm_op_ReadReq.m_axi.i32P(i32* %port_addr_1, i32 1) nounwind" [proc/proc.cpp:17]   --->   Operation 59 'readreq' 'cpt_5_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 6 <SV = 5> <Delay = 8.75>
ST_6 : Operation 60 [3/7] (8.75ns)   --->   "%sw_req = call i1 @_ssdm_op_ReadReq.m_axi.i32P(i32* %port_addr, i32 1) nounwind" [proc/proc.cpp:13]   --->   Operation 60 'readreq' 'sw_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_6 : Operation 61 [4/7] (8.75ns)   --->   "%cpt_5_req = call i1 @_ssdm_op_ReadReq.m_axi.i32P(i32* %port_addr_1, i32 1) nounwind" [proc/proc.cpp:17]   --->   Operation 61 'readreq' 'cpt_5_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 7 <SV = 6> <Delay = 8.75>
ST_7 : Operation 62 [2/7] (8.75ns)   --->   "%sw_req = call i1 @_ssdm_op_ReadReq.m_axi.i32P(i32* %port_addr, i32 1) nounwind" [proc/proc.cpp:13]   --->   Operation 62 'readreq' 'sw_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_7 : Operation 63 [3/7] (8.75ns)   --->   "%cpt_5_req = call i1 @_ssdm_op_ReadReq.m_axi.i32P(i32* %port_addr_1, i32 1) nounwind" [proc/proc.cpp:17]   --->   Operation 63 'readreq' 'cpt_5_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 8 <SV = 7> <Delay = 8.75>
ST_8 : Operation 64 [1/7] (8.75ns)   --->   "%sw_req = call i1 @_ssdm_op_ReadReq.m_axi.i32P(i32* %port_addr, i32 1) nounwind" [proc/proc.cpp:13]   --->   Operation 64 'readreq' 'sw_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_8 : Operation 65 [2/7] (8.75ns)   --->   "%cpt_5_req = call i1 @_ssdm_op_ReadReq.m_axi.i32P(i32* %port_addr_1, i32 1) nounwind" [proc/proc.cpp:17]   --->   Operation 65 'readreq' 'cpt_5_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 9 <SV = 8> <Delay = 8.75>
ST_9 : Operation 66 [1/1] (8.75ns)   --->   "%sw = call i32 @_ssdm_op_Read.m_axi.volatile.i32P(i32* %port_addr) nounwind" [proc/proc.cpp:13]   --->   Operation 66 'read' 'sw' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_9 : Operation 67 [1/7] (8.75ns)   --->   "%cpt_5_req = call i1 @_ssdm_op_ReadReq.m_axi.i32P(i32* %port_addr_1, i32 1) nounwind" [proc/proc.cpp:17]   --->   Operation 67 'readreq' 'cpt_5_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_9 : Operation 68 [1/1] (8.75ns)   --->   "%port_addr_2_req1 = call i1 @_ssdm_op_WriteReq.m_axi.i32P(i32* %port_addr_2, i32 1) nounwind" [proc/proc.cpp:21]   --->   Operation 68 'writereq' 'port_addr_2_req1' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 10 <SV = 9> <Delay = 8.75>
ST_10 : Operation 69 [1/1] (8.75ns)   --->   "%cpt_5 = call i32 @_ssdm_op_Read.m_axi.volatile.i32P(i32* %port_addr_1) nounwind" [proc/proc.cpp:17]   --->   Operation 69 'read' 'cpt_5' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_10 : Operation 70 [1/1] (8.75ns)   --->   "call void @_ssdm_op_Write.m_axi.volatile.i32P(i32* %port_addr_2, i32 255, i4 -1) nounwind" [proc/proc.cpp:21]   --->   Operation 70 'write' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 11 <SV = 10> <Delay = 8.75>
ST_11 : Operation 71 [1/1] (1.76ns)   --->   "store volatile i32 %cpt_5, i32* %tempo, align 4" [proc/proc.cpp:19]   --->   Operation 71 'store' <Predicate = true> <Delay = 1.76>
ST_11 : Operation 72 [5/5] (8.75ns)   --->   "%port_addr_2_resp2 = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %port_addr_2) nounwind" [proc/proc.cpp:21]   --->   Operation 72 'writeresp' 'port_addr_2_resp2' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 12 <SV = 11> <Delay = 8.75>
ST_12 : Operation 73 [4/5] (8.75ns)   --->   "%port_addr_2_resp2 = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %port_addr_2) nounwind" [proc/proc.cpp:21]   --->   Operation 73 'writeresp' 'port_addr_2_resp2' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 13 <SV = 12> <Delay = 8.75>
ST_13 : Operation 74 [3/5] (8.75ns)   --->   "%port_addr_2_resp2 = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %port_addr_2) nounwind" [proc/proc.cpp:21]   --->   Operation 74 'writeresp' 'port_addr_2_resp2' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 14 <SV = 13> <Delay = 8.75>
ST_14 : Operation 75 [2/5] (8.75ns)   --->   "%port_addr_2_resp2 = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %port_addr_2) nounwind" [proc/proc.cpp:21]   --->   Operation 75 'writeresp' 'port_addr_2_resp2' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_14 : Operation 76 [1/1] (8.51ns)   --->   "%mul_ln23 = mul i32 %sw, 100000" [proc/proc.cpp:23]   --->   Operation 76 'mul' 'mul_ln23' <Predicate = true> <Delay = 8.51> <Core = "Mul">   --->   Core 16 'Mul' <Latency = 0> <II = 1> <Delay = 8.51> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>

State 15 <SV = 14> <Delay = 8.75>
ST_15 : Operation 77 [1/1] (0.00ns)   --->   "%loop_begin = call i32 (...)* @_ssdm_op_SpecLoopBegin() nounwind"   --->   Operation 77 'specloopbegin' 'loop_begin' <Predicate = true> <Delay = 0.00>
ST_15 : Operation 78 [1/5] (8.75ns)   --->   "%port_addr_2_resp2 = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %port_addr_2) nounwind" [proc/proc.cpp:21]   --->   Operation 78 'writeresp' 'port_addr_2_resp2' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_15 : Operation 79 [1/1] (2.55ns)   --->   "%add_ln23 = add i32 %mul_ln23, 100000" [proc/proc.cpp:23]   --->   Operation 79 'add' 'add_ln23' <Predicate = true> <Delay = 2.55> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_15 : Operation 80 [1/1] (1.76ns)   --->   "br label %1" [proc/proc.cpp:23]   --->   Operation 80 'br' <Predicate = true> <Delay = 1.76>

State 16 <SV = 15> <Delay = 8.75>
ST_16 : Operation 81 [1/1] (0.00ns)   --->   "%cpt_0 = phi i32 [ %cpt_5, %.loopexit ], [ %cpt, %2 ]"   --->   Operation 81 'phi' 'cpt_0' <Predicate = true> <Delay = 0.00>
ST_16 : Operation 82 [1/1] (0.00ns)   --->   "%tempo_load = load volatile i32* %tempo, align 4" [proc/proc.cpp:23]   --->   Operation 82 'load' 'tempo_load' <Predicate = true> <Delay = 0.00>
ST_16 : Operation 83 [1/1] (2.55ns)   --->   "%sub_ln23 = sub i32 %cpt_0, %tempo_load" [proc/proc.cpp:23]   --->   Operation 83 'sub' 'sub_ln23' <Predicate = true> <Delay = 2.55> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_16 : Operation 84 [1/1] (2.47ns)   --->   "%icmp_ln23 = icmp ult i32 %sub_ln23, %add_ln23" [proc/proc.cpp:23]   --->   Operation 84 'icmp' 'icmp_ln23' <Predicate = true> <Delay = 2.47> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.47> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_16 : Operation 85 [1/1] (0.00ns)   --->   "br i1 %icmp_ln23, label %2, label %3" [proc/proc.cpp:23]   --->   Operation 85 'br' <Predicate = true> <Delay = 0.00>
ST_16 : Operation 86 [7/7] (8.75ns)   --->   "%cpt_req = call i1 @_ssdm_op_ReadReq.m_axi.i32P(i32* %port_addr_1, i32 1) nounwind" [proc/proc.cpp:24]   --->   Operation 86 'readreq' 'cpt_req' <Predicate = (icmp_ln23)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_16 : Operation 87 [7/7] (8.75ns)   --->   "%cpt_6_req = call i1 @_ssdm_op_ReadReq.m_axi.i32P(i32* %port_addr_1, i32 1) nounwind" [proc/proc.cpp:27]   --->   Operation 87 'readreq' 'cpt_6_req' <Predicate = (!icmp_ln23)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 17 <SV = 16> <Delay = 8.75>
ST_17 : Operation 88 [6/7] (8.75ns)   --->   "%cpt_req = call i1 @_ssdm_op_ReadReq.m_axi.i32P(i32* %port_addr_1, i32 1) nounwind" [proc/proc.cpp:24]   --->   Operation 88 'readreq' 'cpt_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 18 <SV = 17> <Delay = 8.75>
ST_18 : Operation 89 [5/7] (8.75ns)   --->   "%cpt_req = call i1 @_ssdm_op_ReadReq.m_axi.i32P(i32* %port_addr_1, i32 1) nounwind" [proc/proc.cpp:24]   --->   Operation 89 'readreq' 'cpt_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 19 <SV = 18> <Delay = 8.75>
ST_19 : Operation 90 [4/7] (8.75ns)   --->   "%cpt_req = call i1 @_ssdm_op_ReadReq.m_axi.i32P(i32* %port_addr_1, i32 1) nounwind" [proc/proc.cpp:24]   --->   Operation 90 'readreq' 'cpt_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 20 <SV = 19> <Delay = 8.75>
ST_20 : Operation 91 [3/7] (8.75ns)   --->   "%cpt_req = call i1 @_ssdm_op_ReadReq.m_axi.i32P(i32* %port_addr_1, i32 1) nounwind" [proc/proc.cpp:24]   --->   Operation 91 'readreq' 'cpt_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 21 <SV = 20> <Delay = 8.75>
ST_21 : Operation 92 [2/7] (8.75ns)   --->   "%cpt_req = call i1 @_ssdm_op_ReadReq.m_axi.i32P(i32* %port_addr_1, i32 1) nounwind" [proc/proc.cpp:24]   --->   Operation 92 'readreq' 'cpt_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 22 <SV = 21> <Delay = 8.75>
ST_22 : Operation 93 [1/7] (8.75ns)   --->   "%cpt_req = call i1 @_ssdm_op_ReadReq.m_axi.i32P(i32* %port_addr_1, i32 1) nounwind" [proc/proc.cpp:24]   --->   Operation 93 'readreq' 'cpt_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 23 <SV = 22> <Delay = 8.75>
ST_23 : Operation 94 [1/1] (8.75ns)   --->   "%cpt = call i32 @_ssdm_op_Read.m_axi.volatile.i32P(i32* %port_addr_1) nounwind" [proc/proc.cpp:24]   --->   Operation 94 'read' 'cpt' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_23 : Operation 95 [1/1] (0.00ns)   --->   "br label %1" [proc/proc.cpp:25]   --->   Operation 95 'br' <Predicate = true> <Delay = 0.00>

State 24 <SV = 16> <Delay = 8.75>
ST_24 : Operation 96 [6/7] (8.75ns)   --->   "%cpt_6_req = call i1 @_ssdm_op_ReadReq.m_axi.i32P(i32* %port_addr_1, i32 1) nounwind" [proc/proc.cpp:27]   --->   Operation 96 'readreq' 'cpt_6_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 25 <SV = 17> <Delay = 8.75>
ST_25 : Operation 97 [5/7] (8.75ns)   --->   "%cpt_6_req = call i1 @_ssdm_op_ReadReq.m_axi.i32P(i32* %port_addr_1, i32 1) nounwind" [proc/proc.cpp:27]   --->   Operation 97 'readreq' 'cpt_6_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 26 <SV = 18> <Delay = 8.75>
ST_26 : Operation 98 [4/7] (8.75ns)   --->   "%cpt_6_req = call i1 @_ssdm_op_ReadReq.m_axi.i32P(i32* %port_addr_1, i32 1) nounwind" [proc/proc.cpp:27]   --->   Operation 98 'readreq' 'cpt_6_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 27 <SV = 19> <Delay = 8.75>
ST_27 : Operation 99 [3/7] (8.75ns)   --->   "%cpt_6_req = call i1 @_ssdm_op_ReadReq.m_axi.i32P(i32* %port_addr_1, i32 1) nounwind" [proc/proc.cpp:27]   --->   Operation 99 'readreq' 'cpt_6_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 28 <SV = 20> <Delay = 8.75>
ST_28 : Operation 100 [2/7] (8.75ns)   --->   "%cpt_6_req = call i1 @_ssdm_op_ReadReq.m_axi.i32P(i32* %port_addr_1, i32 1) nounwind" [proc/proc.cpp:27]   --->   Operation 100 'readreq' 'cpt_6_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 29 <SV = 21> <Delay = 8.75>
ST_29 : Operation 101 [1/7] (8.75ns)   --->   "%cpt_6_req = call i1 @_ssdm_op_ReadReq.m_axi.i32P(i32* %port_addr_1, i32 1) nounwind" [proc/proc.cpp:27]   --->   Operation 101 'readreq' 'cpt_6_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_29 : Operation 102 [1/1] (8.75ns)   --->   "%port_addr_2_req = call i1 @_ssdm_op_WriteReq.m_axi.i32P(i32* %port_addr_2, i32 1) nounwind" [proc/proc.cpp:31]   --->   Operation 102 'writereq' 'port_addr_2_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 30 <SV = 22> <Delay = 8.75>
ST_30 : Operation 103 [1/1] (8.75ns)   --->   "%cpt_6 = call i32 @_ssdm_op_Read.m_axi.volatile.i32P(i32* %port_addr_1) nounwind" [proc/proc.cpp:27]   --->   Operation 103 'read' 'cpt_6' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_30 : Operation 104 [1/1] (8.75ns)   --->   "call void @_ssdm_op_Write.m_axi.volatile.i32P(i32* %port_addr_2, i32 0, i4 -1) nounwind" [proc/proc.cpp:31]   --->   Operation 104 'write' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 31 <SV = 23> <Delay = 8.75>
ST_31 : Operation 105 [1/1] (1.76ns)   --->   "store volatile i32 %cpt_6, i32* %tempo, align 4" [proc/proc.cpp:29]   --->   Operation 105 'store' <Predicate = true> <Delay = 1.76>
ST_31 : Operation 106 [5/5] (8.75ns)   --->   "%port_addr_2_resp = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %port_addr_2) nounwind" [proc/proc.cpp:31]   --->   Operation 106 'writeresp' 'port_addr_2_resp' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 32 <SV = 24> <Delay = 8.75>
ST_32 : Operation 107 [4/5] (8.75ns)   --->   "%port_addr_2_resp = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %port_addr_2) nounwind" [proc/proc.cpp:31]   --->   Operation 107 'writeresp' 'port_addr_2_resp' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 33 <SV = 25> <Delay = 8.75>
ST_33 : Operation 108 [3/5] (8.75ns)   --->   "%port_addr_2_resp = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %port_addr_2) nounwind" [proc/proc.cpp:31]   --->   Operation 108 'writeresp' 'port_addr_2_resp' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 34 <SV = 26> <Delay = 8.75>
ST_34 : Operation 109 [2/5] (8.75ns)   --->   "%port_addr_2_resp = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %port_addr_2) nounwind" [proc/proc.cpp:31]   --->   Operation 109 'writeresp' 'port_addr_2_resp' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 35 <SV = 27> <Delay = 8.75>
ST_35 : Operation 110 [1/5] (8.75ns)   --->   "%port_addr_2_resp = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %port_addr_2) nounwind" [proc/proc.cpp:31]   --->   Operation 110 'writeresp' 'port_addr_2_resp' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_35 : Operation 111 [1/1] (1.76ns)   --->   "br label %4" [proc/proc.cpp:33]   --->   Operation 111 'br' <Predicate = true> <Delay = 1.76>

State 36 <SV = 28> <Delay = 8.75>
ST_36 : Operation 112 [1/1] (0.00ns)   --->   "%cpt_1 = phi i32 [ %cpt_6, %3 ], [ %cpt_4, %5 ]"   --->   Operation 112 'phi' 'cpt_1' <Predicate = true> <Delay = 0.00>
ST_36 : Operation 113 [1/1] (0.00ns)   --->   "%tempo_load_1 = load volatile i32* %tempo, align 4" [proc/proc.cpp:33]   --->   Operation 113 'load' 'tempo_load_1' <Predicate = true> <Delay = 0.00>
ST_36 : Operation 114 [1/1] (2.55ns)   --->   "%sub_ln33 = sub i32 %cpt_1, %tempo_load_1" [proc/proc.cpp:33]   --->   Operation 114 'sub' 'sub_ln33' <Predicate = true> <Delay = 2.55> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_36 : Operation 115 [1/1] (2.47ns)   --->   "%icmp_ln33 = icmp ult i32 %sub_ln33, %add_ln23" [proc/proc.cpp:33]   --->   Operation 115 'icmp' 'icmp_ln33' <Predicate = true> <Delay = 2.47> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.47> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_36 : Operation 116 [1/1] (0.00ns)   --->   "br i1 %icmp_ln33, label %5, label %.loopexit.loopexit" [proc/proc.cpp:33]   --->   Operation 116 'br' <Predicate = true> <Delay = 0.00>
ST_36 : Operation 117 [7/7] (8.75ns)   --->   "%cpt_4_req = call i1 @_ssdm_op_ReadReq.m_axi.i32P(i32* %port_addr_1, i32 1) nounwind" [proc/proc.cpp:34]   --->   Operation 117 'readreq' 'cpt_4_req' <Predicate = (icmp_ln33)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_36 : Operation 118 [1/1] (0.00ns)   --->   "br label %.loopexit"   --->   Operation 118 'br' <Predicate = (!icmp_ln33)> <Delay = 0.00>

State 37 <SV = 29> <Delay = 8.75>
ST_37 : Operation 119 [6/7] (8.75ns)   --->   "%cpt_4_req = call i1 @_ssdm_op_ReadReq.m_axi.i32P(i32* %port_addr_1, i32 1) nounwind" [proc/proc.cpp:34]   --->   Operation 119 'readreq' 'cpt_4_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 38 <SV = 30> <Delay = 8.75>
ST_38 : Operation 120 [5/7] (8.75ns)   --->   "%cpt_4_req = call i1 @_ssdm_op_ReadReq.m_axi.i32P(i32* %port_addr_1, i32 1) nounwind" [proc/proc.cpp:34]   --->   Operation 120 'readreq' 'cpt_4_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 39 <SV = 31> <Delay = 8.75>
ST_39 : Operation 121 [4/7] (8.75ns)   --->   "%cpt_4_req = call i1 @_ssdm_op_ReadReq.m_axi.i32P(i32* %port_addr_1, i32 1) nounwind" [proc/proc.cpp:34]   --->   Operation 121 'readreq' 'cpt_4_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 40 <SV = 32> <Delay = 8.75>
ST_40 : Operation 122 [3/7] (8.75ns)   --->   "%cpt_4_req = call i1 @_ssdm_op_ReadReq.m_axi.i32P(i32* %port_addr_1, i32 1) nounwind" [proc/proc.cpp:34]   --->   Operation 122 'readreq' 'cpt_4_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 41 <SV = 33> <Delay = 8.75>
ST_41 : Operation 123 [2/7] (8.75ns)   --->   "%cpt_4_req = call i1 @_ssdm_op_ReadReq.m_axi.i32P(i32* %port_addr_1, i32 1) nounwind" [proc/proc.cpp:34]   --->   Operation 123 'readreq' 'cpt_4_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 42 <SV = 34> <Delay = 8.75>
ST_42 : Operation 124 [1/7] (8.75ns)   --->   "%cpt_4_req = call i1 @_ssdm_op_ReadReq.m_axi.i32P(i32* %port_addr_1, i32 1) nounwind" [proc/proc.cpp:34]   --->   Operation 124 'readreq' 'cpt_4_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 43 <SV = 35> <Delay = 8.75>
ST_43 : Operation 125 [1/1] (8.75ns)   --->   "%cpt_4 = call i32 @_ssdm_op_Read.m_axi.volatile.i32P(i32* %port_addr_1) nounwind" [proc/proc.cpp:34]   --->   Operation 125 'read' 'cpt_4' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_43 : Operation 126 [1/1] (0.00ns)   --->   "br label %4" [proc/proc.cpp:35]   --->   Operation 126 'br' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Binding
============================================================
STG Binding: 
---------------- STG Properties BEGIN ----------------
- Is combinational: 0
- Is one-state seq: 0
- Is datapath-only: 0
- Is pipelined: 0
- Is top level: 1
Port [ Return ] is wired: 1; IO mode=ap_ctrl_none:ce=0
Port [ port_r]:  wired=1; compound=1; hidden=0; nouse=0; global=0; static=0; extern=0; dir=2; type=4; pingpong=0; private_global=0; IO mode=m_axi:ce=0
---------------- STG Properties END ------------------

---------------- Datapath Model BEGIN ----------------

<LifeTime>
<method=bitvector/>
specbitsmap_ln0   (specbitsmap  ) [ 00000000000000000000000000000000000000000000]
spectopmodule_ln0 (spectopmodule) [ 00000000000000000000000000000000000000000000]
tempo             (alloca       ) [ 00111111111111111111111111111111111111111111]
specinterface_ln7 (specinterface) [ 00000000000000000000000000000000000000000000]
specinterface_ln8 (specinterface) [ 00000000000000000000000000000000000000000000]
port_addr         (getelementptr) [ 00111111111111111111111111111111111111111111]
port_addr_1       (getelementptr) [ 00111111111111111111111111111111111111111111]
port_addr_2       (getelementptr) [ 00111111111111111111111111111111111111111111]
br_ln10           (br           ) [ 00000000000000000000000000000000000000000000]
sw_req            (readreq      ) [ 00000000000000000000000000000000000000000000]
sw                (read         ) [ 00000000001111100000000000000000000000000000]
cpt_5_req         (readreq      ) [ 00000000000000000000000000000000000000000000]
port_addr_2_req1  (writereq     ) [ 00000000000000000000000000000000000000000000]
cpt_5             (read         ) [ 00000000000111111111111100000000000000000000]
write_ln21        (write        ) [ 00000000000000000000000000000000000000000000]
store_ln19        (store        ) [ 00000000000000000000000000000000000000000000]
mul_ln23          (mul          ) [ 00000000000000010000000000000000000000000000]
loop_begin        (specloopbegin) [ 00000000000000000000000000000000000000000000]
port_addr_2_resp2 (writeresp    ) [ 00000000000000000000000000000000000000000000]
add_ln23          (add          ) [ 00000000000000001111111111111111111111111111]
br_ln23           (br           ) [ 00111111111111111111111111111111111111111111]
cpt_0             (phi          ) [ 00000000000000001000000000000000000000000000]
tempo_load        (load         ) [ 00000000000000000000000000000000000000000000]
sub_ln23          (sub          ) [ 00000000000000000000000000000000000000000000]
icmp_ln23         (icmp         ) [ 00111111111111111111111111111111111111111111]
br_ln23           (br           ) [ 00000000000000000000000000000000000000000000]
cpt_req           (readreq      ) [ 00000000000000000000000000000000000000000000]
cpt               (read         ) [ 00111111111111111111111111111111111111111111]
br_ln25           (br           ) [ 00111111111111111111111111111111111111111111]
cpt_6_req         (readreq      ) [ 00000000000000000000000000000000000000000000]
port_addr_2_req   (writereq     ) [ 00000000000000000000000000000000000000000000]
cpt_6             (read         ) [ 00000000000000000000000000000001111111111111]
write_ln31        (write        ) [ 00000000000000000000000000000000000000000000]
store_ln29        (store        ) [ 00000000000000000000000000000000000000000000]
port_addr_2_resp  (writeresp    ) [ 00000000000000000000000000000000000000000000]
br_ln33           (br           ) [ 00111111111111111111111111111111111111111111]
cpt_1             (phi          ) [ 00000000000000000000000000000000000010000000]
tempo_load_1      (load         ) [ 00000000000000000000000000000000000000000000]
sub_ln33          (sub          ) [ 00000000000000000000000000000000000000000000]
icmp_ln33         (icmp         ) [ 00111111111111111111111111111111111111111111]
br_ln33           (br           ) [ 00000000000000000000000000000000000000000000]
br_ln0            (br           ) [ 00000000000000000000000000000000000000000000]
cpt_4_req         (readreq      ) [ 00000000000000000000000000000000000000000000]
cpt_4             (read         ) [ 00111111111111111111111111111111111111111111]
br_ln35           (br           ) [ 00111111111111111111111111111111111111111111]
</LifeTime>

<model>

<comp_list>
<comp id="0" class="1000" name="port_r">
<pin_list>
<pin id="1" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="port_r"/></StgValue>
</bind>
</comp>

<comp id="2" class="1001" name="const_2">
<pin_list>
<pin id="3" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_SpecBitsMap"/></StgValue>
</bind>
</comp>

<comp id="4" class="1001" name="const_4">
<pin_list>
<pin id="5" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_SpecTopModule"/></StgValue>
</bind>
</comp>

<comp id="6" class="1001" name="const_6">
<pin_list>
<pin id="7" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="proc_str"/></StgValue>
</bind>
</comp>

<comp id="8" class="1001" name="const_8">
<pin_list>
<pin id="9" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="10" class="1001" name="const_10">
<pin_list>
<pin id="11" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_SpecInterface"/></StgValue>
</bind>
</comp>

<comp id="12" class="1001" name="const_12">
<pin_list>
<pin id="13" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="14" class="1001" name="const_14">
<pin_list>
<pin id="15" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="p_str"/></StgValue>
</bind>
</comp>

<comp id="16" class="1001" name="const_16">
<pin_list>
<pin id="17" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="p_str1"/></StgValue>
</bind>
</comp>

<comp id="18" class="1001" name="const_18">
<pin_list>
<pin id="19" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="p_str2"/></StgValue>
</bind>
</comp>

<comp id="20" class="1001" name="const_20">
<pin_list>
<pin id="21" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="22" class="1001" name="const_22">
<pin_list>
<pin id="23" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="24" class="1001" name="const_24">
<pin_list>
<pin id="25" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="26" class="1001" name="const_26">
<pin_list>
<pin id="27" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="28" class="1001" name="const_28">
<pin_list>
<pin id="29" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="30" class="1001" name="const_30">
<pin_list>
<pin id="31" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_ReadReq.m_axi.i32P"/></StgValue>
</bind>
</comp>

<comp id="32" class="1001" name="const_32">
<pin_list>
<pin id="33" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="34" class="1001" name="const_34">
<pin_list>
<pin id="35" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_Read.m_axi.volatile.i32P"/></StgValue>
</bind>
</comp>

<comp id="36" class="1001" name="const_36">
<pin_list>
<pin id="37" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_WriteReq.m_axi.i32P"/></StgValue>
</bind>
</comp>

<comp id="38" class="1001" name="const_38">
<pin_list>
<pin id="39" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_Write.m_axi.volatile.i32P"/></StgValue>
</bind>
</comp>

<comp id="40" class="1001" name="const_40">
<pin_list>
<pin id="41" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="42" class="1001" name="const_42">
<pin_list>
<pin id="43" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="44" class="1001" name="const_44">
<pin_list>
<pin id="45" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_WriteResp.m_axi.i32P"/></StgValue>
</bind>
</comp>

<comp id="46" class="1001" name="const_46">
<pin_list>
<pin id="47" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="48" class="1001" name="const_48">
<pin_list>
<pin id="49" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_SpecLoopBegin"/></StgValue>
</bind>
</comp>

<comp id="50" class="1004" name="tempo_fu_50">
<pin_list>
<pin id="51" dir="0" index="0" bw="1" slack="0"/>
<pin id="52" dir="1" index="1" bw="32" slack="10"/>
</pin_list>
<bind>
<opcode="alloca(26) " fcode="alloca"/>
<opset="tempo/1 "/>
</bind>
</comp>

<comp id="54" class="1004" name="grp_readreq_fu_54">
<pin_list>
<pin id="55" dir="0" index="0" bw="1" slack="0"/>
<pin id="56" dir="0" index="1" bw="32" slack="1"/>
<pin id="57" dir="0" index="2" bw="1" slack="0"/>
<pin id="58" dir="1" index="3" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<opcode="readreq(1154) " fcode="readreq"/>
<opset="sw_req/2 "/>
</bind>
</comp>

<comp id="61" class="1004" name="grp_readreq_fu_61">
<pin_list>
<pin id="62" dir="0" index="0" bw="1" slack="0"/>
<pin id="63" dir="0" index="1" bw="32" slack="2"/>
<pin id="64" dir="0" index="2" bw="1" slack="0"/>
<pin id="65" dir="1" index="3" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<opcode="readreq(1154) " fcode="readreq"/>
<opset="cpt_5_req/3 cpt_req/16 cpt_6_req/16 cpt_4_req/36 "/>
</bind>
</comp>

<comp id="68" class="1004" name="sw_read_fu_68">
<pin_list>
<pin id="69" dir="0" index="0" bw="32" slack="0"/>
<pin id="70" dir="0" index="1" bw="32" slack="8"/>
<pin id="71" dir="1" index="2" bw="32" slack="5"/>
</pin_list>
<bind>
<opcode="read(1150) " fcode="read"/>
<opset="sw/9 "/>
</bind>
</comp>

<comp id="73" class="1004" name="grp_writeresp_fu_73">
<pin_list>
<pin id="74" dir="0" index="0" bw="1" slack="0"/>
<pin id="75" dir="0" index="1" bw="32" slack="8"/>
<pin id="76" dir="0" index="2" bw="1" slack="0"/>
<pin id="77" dir="1" index="3" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<opcode="writereq(1155) writeresp(1158) " fcode="writeresp"/>
<opset="port_addr_2_req1/9 port_addr_2_resp2/11 port_addr_2_req/29 port_addr_2_resp/31 "/>
</bind>
</comp>

<comp id="80" class="1004" name="grp_read_fu_80">
<pin_list>
<pin id="81" dir="0" index="0" bw="32" slack="0"/>
<pin id="82" dir="0" index="1" bw="32" slack="9"/>
<pin id="83" dir="1" index="2" bw="32" slack="1"/>
</pin_list>
<bind>
<opcode="read(1150) " fcode="read"/>
<opset="cpt_5/10 cpt/23 cpt_6/30 cpt_4/43 "/>
</bind>
</comp>

<comp id="85" class="1004" name="write_ln21_write_fu_85">
<pin_list>
<pin id="86" dir="0" index="0" bw="0" slack="0"/>
<pin id="87" dir="0" index="1" bw="32" slack="9"/>
<pin id="88" dir="0" index="2" bw="9" slack="0"/>
<pin id="89" dir="0" index="3" bw="1" slack="0"/>
<pin id="90" dir="1" index="4" bw="0" slack="2147483647"/>
</pin_list>
<bind>
<opcode="write(1151) " fcode="write"/>
<opset="write_ln21/10 "/>
</bind>
</comp>

<comp id="95" class="1004" name="write_ln31_write_fu_95">
<pin_list>
<pin id="96" dir="0" index="0" bw="0" slack="0"/>
<pin id="97" dir="0" index="1" bw="32" slack="22"/>
<pin id="98" dir="0" index="2" bw="1" slack="0"/>
<pin id="99" dir="0" index="3" bw="1" slack="0"/>
<pin id="100" dir="1" index="4" bw="0" slack="2147483647"/>
</pin_list>
<bind>
<opcode="write(1151) " fcode="write"/>
<opset="write_ln31/30 "/>
</bind>
</comp>

<comp id="104" class="1005" name="cpt_0_reg_104">
<pin_list>
<pin id="105" dir="0" index="0" bw="32" slack="2147483647"/>
<pin id="106" dir="1" index="1" bw="32" slack="2147483647"/>
</pin_list>
<bind>
<opset="cpt_0 (phireg) "/>
</bind>
</comp>

<comp id="107" class="1004" name="cpt_0_phi_fu_107">
<pin_list>
<pin id="108" dir="0" index="0" bw="32" slack="6"/>
<pin id="109" dir="0" index="1" bw="0" slack="2147483647"/>
<pin id="110" dir="0" index="2" bw="32" slack="1"/>
<pin id="111" dir="0" index="3" bw="0" slack="2147483647"/>
<pin id="112" dir="1" index="4" bw="32" slack="0"/>
</pin_list>
<bind>
<opcode="phi(47) " fcode="phi"/>
<opset="cpt_0/16 "/>
</bind>
</comp>

<comp id="113" class="1005" name="cpt_1_reg_113">
<pin_list>
<pin id="114" dir="0" index="0" bw="32" slack="2147483647"/>
<pin id="115" dir="1" index="1" bw="32" slack="2147483647"/>
</pin_list>
<bind>
<opset="cpt_1 (phireg) "/>
</bind>
</comp>

<comp id="116" class="1004" name="cpt_1_phi_fu_116">
<pin_list>
<pin id="117" dir="0" index="0" bw="32" slack="6"/>
<pin id="118" dir="0" index="1" bw="0" slack="2147483647"/>
<pin id="119" dir="0" index="2" bw="32" slack="1"/>
<pin id="120" dir="0" index="3" bw="0" slack="2147483647"/>
<pin id="121" dir="1" index="4" bw="32" slack="0"/>
</pin_list>
<bind>
<opcode="phi(47) " fcode="phi"/>
<opset="cpt_1/36 "/>
</bind>
</comp>

<comp id="122" class="1004" name="grp_load_fu_122">
<pin_list>
<pin id="123" dir="0" index="0" bw="32" slack="15"/>
<pin id="124" dir="1" index="1" bw="32" slack="0"/>
</pin_list>
<bind>
<opcode="load(27) " fcode="load"/>
<opset="tempo_load/16 tempo_load_1/36 "/>
</bind>
</comp>

<comp id="125" class="1005" name="reg_125">
<pin_list>
<pin id="126" dir="0" index="0" bw="32" slack="1"/>
<pin id="127" dir="1" index="1" bw="32" slack="1"/>
</pin_list>
<bind>
<opset="cpt_5 cpt_6 "/>
</bind>
</comp>

<comp id="131" class="1004" name="grp_store_fu_131">
<pin_list>
<pin id="132" dir="0" index="0" bw="32" slack="1"/>
<pin id="133" dir="0" index="1" bw="32" slack="10"/>
<pin id="134" dir="1" index="2" bw="0" slack="2147483647"/>
</pin_list>
<bind>
<opcode="store(28) " fcode="store"/>
<opset="store_ln19/11 store_ln29/31 "/>
</bind>
</comp>

<comp id="136" class="1004" name="port_addr_fu_136">
<pin_list>
<pin id="137" dir="0" index="0" bw="32" slack="0"/>
<pin id="138" dir="0" index="1" bw="32" slack="0"/>
<pin id="139" dir="1" index="2" bw="32" slack="1"/>
</pin_list>
<bind>
<opcode="getelementptr(29) " fcode="getelementptr"/>
<opset="port_addr/1 "/>
</bind>
</comp>

<comp id="142" class="1004" name="port_addr_1_fu_142">
<pin_list>
<pin id="143" dir="0" index="0" bw="32" slack="0"/>
<pin id="144" dir="0" index="1" bw="32" slack="0"/>
<pin id="145" dir="1" index="2" bw="32" slack="2"/>
</pin_list>
<bind>
<opcode="getelementptr(29) " fcode="getelementptr"/>
<opset="port_addr_1/1 "/>
</bind>
</comp>

<comp id="148" class="1004" name="port_addr_2_fu_148">
<pin_list>
<pin id="149" dir="0" index="0" bw="32" slack="0"/>
<pin id="150" dir="0" index="1" bw="32" slack="0"/>
<pin id="151" dir="1" index="2" bw="32" slack="8"/>
</pin_list>
<bind>
<opcode="getelementptr(29) " fcode="getelementptr"/>
<opset="port_addr_2/1 "/>
</bind>
</comp>

<comp id="154" class="1004" name="mul_ln23_fu_154">
<pin_list>
<pin id="155" dir="0" index="0" bw="32" slack="5"/>
<pin id="156" dir="0" index="1" bw="18" slack="0"/>
<pin id="157" dir="1" index="2" bw="32" slack="1"/>
</pin_list>
<bind>
<opcode="mul(12) " fcode="mul"/>
<opset="mul_ln23/14 "/>
</bind>
</comp>

<comp id="159" class="1004" name="add_ln23_fu_159">
<pin_list>
<pin id="160" dir="0" index="0" bw="32" slack="1"/>
<pin id="161" dir="0" index="1" bw="18" slack="0"/>
<pin id="162" dir="1" index="2" bw="32" slack="1"/>
</pin_list>
<bind>
<opcode="add(8) " fcode="add"/>
<opset="add_ln23/15 "/>
</bind>
</comp>

<comp id="164" class="1004" name="sub_ln23_fu_164">
<pin_list>
<pin id="165" dir="0" index="0" bw="32" slack="0"/>
<pin id="166" dir="0" index="1" bw="32" slack="0"/>
<pin id="167" dir="1" index="2" bw="32" slack="0"/>
</pin_list>
<bind>
<opcode="sub(10) " fcode="sub"/>
<opset="sub_ln23/16 "/>
</bind>
</comp>

<comp id="170" class="1004" name="icmp_ln23_fu_170">
<pin_list>
<pin id="171" dir="0" index="0" bw="32" slack="0"/>
<pin id="172" dir="0" index="1" bw="32" slack="1"/>
<pin id="173" dir="1" index="2" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<opcode="icmp(45) " fcode="icmp"/>
<opset="icmp_ln23/16 "/>
</bind>
</comp>

<comp id="175" class="1004" name="sub_ln33_fu_175">
<pin_list>
<pin id="176" dir="0" index="0" bw="32" slack="0"/>
<pin id="177" dir="0" index="1" bw="32" slack="0"/>
<pin id="178" dir="1" index="2" bw="32" slack="0"/>
</pin_list>
<bind>
<opcode="sub(10) " fcode="sub"/>
<opset="sub_ln33/36 "/>
</bind>
</comp>

<comp id="181" class="1004" name="icmp_ln33_fu_181">
<pin_list>
<pin id="182" dir="0" index="0" bw="32" slack="0"/>
<pin id="183" dir="0" index="1" bw="32" slack="14"/>
<pin id="184" dir="1" index="2" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<opcode="icmp(45) " fcode="icmp"/>
<opset="icmp_ln33/36 "/>
</bind>
</comp>

<comp id="186" class="1005" name="tempo_reg_186">
<pin_list>
<pin id="187" dir="0" index="0" bw="32" slack="10"/>
<pin id="188" dir="1" index="1" bw="32" slack="10"/>
</pin_list>
<bind>
<opset="tempo "/>
</bind>
</comp>

<comp id="192" class="1005" name="port_addr_reg_192">
<pin_list>
<pin id="193" dir="0" index="0" bw="32" slack="1"/>
<pin id="194" dir="1" index="1" bw="32" slack="1"/>
</pin_list>
<bind>
<opset="port_addr "/>
</bind>
</comp>

<comp id="198" class="1005" name="port_addr_1_reg_198">
<pin_list>
<pin id="199" dir="0" index="0" bw="32" slack="2"/>
<pin id="200" dir="1" index="1" bw="32" slack="2"/>
</pin_list>
<bind>
<opset="port_addr_1 "/>
</bind>
</comp>

<comp id="204" class="1005" name="port_addr_2_reg_204">
<pin_list>
<pin id="205" dir="0" index="0" bw="32" slack="8"/>
<pin id="206" dir="1" index="1" bw="32" slack="8"/>
</pin_list>
<bind>
<opset="port_addr_2 "/>
</bind>
</comp>

<comp id="211" class="1005" name="sw_reg_211">
<pin_list>
<pin id="212" dir="0" index="0" bw="32" slack="5"/>
<pin id="213" dir="1" index="1" bw="32" slack="5"/>
</pin_list>
<bind>
<opset="sw "/>
</bind>
</comp>

<comp id="216" class="1005" name="mul_ln23_reg_216">
<pin_list>
<pin id="217" dir="0" index="0" bw="32" slack="1"/>
<pin id="218" dir="1" index="1" bw="32" slack="1"/>
</pin_list>
<bind>
<opset="mul_ln23 "/>
</bind>
</comp>

<comp id="221" class="1005" name="add_ln23_reg_221">
<pin_list>
<pin id="222" dir="0" index="0" bw="32" slack="1"/>
<pin id="223" dir="1" index="1" bw="32" slack="1"/>
</pin_list>
<bind>
<opset="add_ln23 "/>
</bind>
</comp>

<comp id="230" class="1005" name="cpt_reg_230">
<pin_list>
<pin id="231" dir="0" index="0" bw="32" slack="1"/>
<pin id="232" dir="1" index="1" bw="32" slack="1"/>
</pin_list>
<bind>
<opset="cpt "/>
</bind>
</comp>

<comp id="238" class="1005" name="cpt_4_reg_238">
<pin_list>
<pin id="239" dir="0" index="0" bw="32" slack="1"/>
<pin id="240" dir="1" index="1" bw="32" slack="1"/>
</pin_list>
<bind>
<opset="cpt_4 "/>
</bind>
</comp>

</comp_list>

<net_list>
<net id="53"><net_src comp="8" pin="0"/><net_sink comp="50" pin=0"/></net>

<net id="59"><net_src comp="30" pin="0"/><net_sink comp="54" pin=0"/></net>

<net id="60"><net_src comp="32" pin="0"/><net_sink comp="54" pin=2"/></net>

<net id="66"><net_src comp="30" pin="0"/><net_sink comp="61" pin=0"/></net>

<net id="67"><net_src comp="32" pin="0"/><net_sink comp="61" pin=2"/></net>

<net id="72"><net_src comp="34" pin="0"/><net_sink comp="68" pin=0"/></net>

<net id="78"><net_src comp="36" pin="0"/><net_sink comp="73" pin=0"/></net>

<net id="79"><net_src comp="32" pin="0"/><net_sink comp="73" pin=2"/></net>

<net id="84"><net_src comp="34" pin="0"/><net_sink comp="80" pin=0"/></net>

<net id="91"><net_src comp="38" pin="0"/><net_sink comp="85" pin=0"/></net>

<net id="92"><net_src comp="40" pin="0"/><net_sink comp="85" pin=2"/></net>

<net id="93"><net_src comp="42" pin="0"/><net_sink comp="85" pin=3"/></net>

<net id="94"><net_src comp="44" pin="0"/><net_sink comp="73" pin=0"/></net>

<net id="101"><net_src comp="38" pin="0"/><net_sink comp="95" pin=0"/></net>

<net id="102"><net_src comp="12" pin="0"/><net_sink comp="95" pin=2"/></net>

<net id="103"><net_src comp="42" pin="0"/><net_sink comp="95" pin=3"/></net>

<net id="128"><net_src comp="80" pin="2"/><net_sink comp="125" pin=0"/></net>

<net id="129"><net_src comp="125" pin="1"/><net_sink comp="107" pin=0"/></net>

<net id="130"><net_src comp="125" pin="1"/><net_sink comp="116" pin=0"/></net>

<net id="135"><net_src comp="125" pin="1"/><net_sink comp="131" pin=0"/></net>

<net id="140"><net_src comp="0" pin="0"/><net_sink comp="136" pin=0"/></net>

<net id="141"><net_src comp="24" pin="0"/><net_sink comp="136" pin=1"/></net>

<net id="146"><net_src comp="0" pin="0"/><net_sink comp="142" pin=0"/></net>

<net id="147"><net_src comp="26" pin="0"/><net_sink comp="142" pin=1"/></net>

<net id="152"><net_src comp="0" pin="0"/><net_sink comp="148" pin=0"/></net>

<net id="153"><net_src comp="28" pin="0"/><net_sink comp="148" pin=1"/></net>

<net id="158"><net_src comp="46" pin="0"/><net_sink comp="154" pin=1"/></net>

<net id="163"><net_src comp="46" pin="0"/><net_sink comp="159" pin=1"/></net>

<net id="168"><net_src comp="107" pin="4"/><net_sink comp="164" pin=0"/></net>

<net id="169"><net_src comp="122" pin="1"/><net_sink comp="164" pin=1"/></net>

<net id="174"><net_src comp="164" pin="2"/><net_sink comp="170" pin=0"/></net>

<net id="179"><net_src comp="116" pin="4"/><net_sink comp="175" pin=0"/></net>

<net id="180"><net_src comp="122" pin="1"/><net_sink comp="175" pin=1"/></net>

<net id="185"><net_src comp="175" pin="2"/><net_sink comp="181" pin=0"/></net>

<net id="189"><net_src comp="50" pin="1"/><net_sink comp="186" pin=0"/></net>

<net id="190"><net_src comp="186" pin="1"/><net_sink comp="131" pin=1"/></net>

<net id="191"><net_src comp="186" pin="1"/><net_sink comp="122" pin=0"/></net>

<net id="195"><net_src comp="136" pin="2"/><net_sink comp="192" pin=0"/></net>

<net id="196"><net_src comp="192" pin="1"/><net_sink comp="54" pin=1"/></net>

<net id="197"><net_src comp="192" pin="1"/><net_sink comp="68" pin=1"/></net>

<net id="201"><net_src comp="142" pin="2"/><net_sink comp="198" pin=0"/></net>

<net id="202"><net_src comp="198" pin="1"/><net_sink comp="61" pin=1"/></net>

<net id="203"><net_src comp="198" pin="1"/><net_sink comp="80" pin=1"/></net>

<net id="207"><net_src comp="148" pin="2"/><net_sink comp="204" pin=0"/></net>

<net id="208"><net_src comp="204" pin="1"/><net_sink comp="73" pin=1"/></net>

<net id="209"><net_src comp="204" pin="1"/><net_sink comp="85" pin=1"/></net>

<net id="210"><net_src comp="204" pin="1"/><net_sink comp="95" pin=1"/></net>

<net id="214"><net_src comp="68" pin="2"/><net_sink comp="211" pin=0"/></net>

<net id="215"><net_src comp="211" pin="1"/><net_sink comp="154" pin=0"/></net>

<net id="219"><net_src comp="154" pin="2"/><net_sink comp="216" pin=0"/></net>

<net id="220"><net_src comp="216" pin="1"/><net_sink comp="159" pin=0"/></net>

<net id="224"><net_src comp="159" pin="2"/><net_sink comp="221" pin=0"/></net>

<net id="225"><net_src comp="221" pin="1"/><net_sink comp="170" pin=1"/></net>

<net id="226"><net_src comp="221" pin="1"/><net_sink comp="181" pin=1"/></net>

<net id="233"><net_src comp="80" pin="2"/><net_sink comp="230" pin=0"/></net>

<net id="234"><net_src comp="230" pin="1"/><net_sink comp="107" pin=2"/></net>

<net id="241"><net_src comp="80" pin="2"/><net_sink comp="238" pin=0"/></net>

<net id="242"><net_src comp="238" pin="1"/><net_sink comp="116" pin=2"/></net>

</net_list>

</model> 
---------------- Datapath Model END ------------------

* FSMD analyzer results:
  - Output states:
	Port: port_r | {9 10 11 12 13 14 15 29 30 31 32 33 34 35 }
 - Input state : 
	Port: proc : port_r | {2 3 4 5 6 7 8 9 10 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 36 37 38 39 40 41 42 43 }
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12
	State 13
	State 14
	State 15
	State 16
		sub_ln23 : 1
		icmp_ln23 : 2
		br_ln23 : 3
	State 17
	State 18
	State 19
	State 20
	State 21
	State 22
	State 23
	State 24
	State 25
	State 26
	State 27
	State 28
	State 29
	State 30
	State 31
	State 32
	State 33
	State 34
	State 35
	State 36
		sub_ln33 : 1
		icmp_ln33 : 2
		br_ln33 : 3
	State 37
	State 38
	State 39
	State 40
	State 41
	State 42
	State 43


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================

* Functional unit list:
|----------|------------------------|---------|---------|---------|
| Operation|     Functional Unit    |  DSP48E |    FF   |   LUT   |
|----------|------------------------|---------|---------|---------|
|    sub   |     sub_ln23_fu_164    |    0    |    0    |    39   |
|          |     sub_ln33_fu_175    |    0    |    0    |    39   |
|----------|------------------------|---------|---------|---------|
|    add   |     add_ln23_fu_159    |    0    |    0    |    39   |
|----------|------------------------|---------|---------|---------|
|   icmp   |    icmp_ln23_fu_170    |    0    |    0    |    18   |
|          |    icmp_ln33_fu_181    |    0    |    0    |    18   |
|----------|------------------------|---------|---------|---------|
|    mul   |     mul_ln23_fu_154    |    2    |    0    |    20   |
|----------|------------------------|---------|---------|---------|
|  readreq |    grp_readreq_fu_54   |    0    |    0    |    0    |
|          |    grp_readreq_fu_61   |    0    |    0    |    0    |
|----------|------------------------|---------|---------|---------|
|   read   |      sw_read_fu_68     |    0    |    0    |    0    |
|          |     grp_read_fu_80     |    0    |    0    |    0    |
|----------|------------------------|---------|---------|---------|
| writeresp|   grp_writeresp_fu_73  |    0    |    0    |    0    |
|----------|------------------------|---------|---------|---------|
|   write  | write_ln21_write_fu_85 |    0    |    0    |    0    |
|          | write_ln31_write_fu_95 |    0    |    0    |    0    |
|----------|------------------------|---------|---------|---------|
|   Total  |                        |    2    |    0    |   173   |
|----------|------------------------|---------|---------|---------|

Memories:
N/A

* Register list:
+-------------------+--------+
|                   |   FF   |
+-------------------+--------+
|  add_ln23_reg_221 |   32   |
|   cpt_0_reg_104   |   32   |
|   cpt_1_reg_113   |   32   |
|   cpt_4_reg_238   |   32   |
|    cpt_reg_230    |   32   |
|  mul_ln23_reg_216 |   32   |
|port_addr_1_reg_198|   32   |
|port_addr_2_reg_204|   32   |
| port_addr_reg_192 |   32   |
|      reg_125      |   32   |
|     sw_reg_211    |   32   |
|   tempo_reg_186   |   32   |
+-------------------+--------+
|       Total       |   384  |
+-------------------+--------+

* Multiplexer (MUX) list: 
|---------------------|------|------|------|--------||---------|
|         Comp        |  Pin | Size |  BW  | S x BW ||  Delay  |
|---------------------|------|------|------|--------||---------|
| grp_writeresp_fu_73 |  p0  |   2  |   1  |    2   |
|---------------------|------|------|------|--------||---------|
|        Total        |      |      |      |    2   ||  1.769  |
|---------------------|------|------|------|--------||---------|



* Summary:
+-----------+--------+--------+--------+--------+
|           | DSP48E |  Delay |   FF   |   LUT  |
+-----------+--------+--------+--------+--------+
|  Function |    2   |    -   |    0   |   173  |
|   Memory  |    -   |    -   |    -   |    -   |
|Multiplexer|    -   |    1   |    -   |    -   |
|  Register |    -   |    -   |   384  |    -   |
+-----------+--------+--------+--------+--------+
|   Total   |    2   |    1   |   384  |   173  |
+-----------+--------+--------+--------+--------+
